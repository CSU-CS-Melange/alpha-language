/*
 * generated by Xtext 2.12.0
 */
grammar InternalAlpha;

options {
	superClass=AbstractInternalAntlrParser;
}

@lexer::header {
package alpha.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package alpha.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import alpha.services.AlphaGrammarAccess;

}

@parser::members {

 	private AlphaGrammarAccess grammarAccess;

    public InternalAlphaParser(TokenStream input, AlphaGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "AStart";
   	}

   	@Override
   	protected AlphaGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRuleAStart
entryRuleAStart returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAStartRule()); }
	iv_ruleAStart=ruleAStart
	{ $current=$iv_ruleAStart.current; }
	EOF;

// Rule AStart
ruleAStart returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getAStartAccess().getElementsAbstractElementParserRuleCall_0());
			}
			lv_elements_0_0=ruleAbstractElement
			{
				if ($current==null) {
					$current = createModelElementForParent(grammarAccess.getAStartRule());
				}
				add(
					$current,
					"elements",
					lv_elements_0_0,
					"alpha.Alpha.AbstractElement");
				afterParserOrEnumRuleCall();
			}
		)
	)*
;

// Entry rule entryRuleAbstractElement
entryRuleAbstractElement returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAbstractElementRule()); }
	iv_ruleAbstractElement=ruleAbstractElement
	{ $current=$iv_ruleAbstractElement.current; }
	EOF;

// Rule AbstractElement
ruleAbstractElement returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getAbstractElementAccess().getAPackageDeclarationParserRuleCall_0());
		}
		this_APackageDeclaration_0=ruleAPackageDeclaration
		{
			$current = $this_APackageDeclaration_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getAbstractElementAccess().getAAffineSystemParserRuleCall_1());
		}
		this_AAffineSystem_1=ruleAAffineSystem
		{
			$current = $this_AAffineSystem_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getAbstractElementAccess().getAImportParserRuleCall_2());
		}
		this_AImport_2=ruleAImport
		{
			$current = $this_AImport_2.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getAbstractElementAccess().getAExternalFunctionDeclarationParserRuleCall_3());
		}
		this_AExternalFunctionDeclaration_3=ruleAExternalFunctionDeclaration
		{
			$current = $this_AExternalFunctionDeclaration_3.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getAbstractElementAccess().getAConstantDeclarationParserRuleCall_4());
		}
		this_AConstantDeclaration_4=ruleAConstantDeclaration
		{
			$current = $this_AConstantDeclaration_4.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleAPackageDeclaration
entryRuleAPackageDeclaration returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAPackageDeclarationRule()); }
	iv_ruleAPackageDeclaration=ruleAPackageDeclaration
	{ $current=$iv_ruleAPackageDeclaration.current; }
	EOF;

// Rule APackageDeclaration
ruleAPackageDeclaration returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='package'
		{
			newLeafNode(otherlv_0, grammarAccess.getAPackageDeclarationAccess().getPackageKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getAPackageDeclarationAccess().getNameQualifiedNameParserRuleCall_1_0());
				}
				lv_name_1_0=ruleQualifiedName
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getAPackageDeclarationRule());
					}
					set(
						$current,
						"name",
						lv_name_1_0,
						"alpha.Alpha.QualifiedName");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getAPackageDeclarationAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getAPackageDeclarationAccess().getElementsAbstractElementParserRuleCall_3_0());
				}
				lv_elements_3_0=ruleAbstractElement
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getAPackageDeclarationRule());
					}
					add(
						$current,
						"elements",
						lv_elements_3_0,
						"alpha.Alpha.AbstractElement");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_4='}'
		{
			newLeafNode(otherlv_4, grammarAccess.getAPackageDeclarationAccess().getRightCurlyBracketKeyword_4());
		}
	)
;

// Entry rule entryRuleAImport
entryRuleAImport returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAImportRule()); }
	iv_ruleAImport=ruleAImport
	{ $current=$iv_ruleAImport.current; }
	EOF;

// Rule AImport
ruleAImport returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='import'
		{
			newLeafNode(otherlv_0, grammarAccess.getAImportAccess().getImportKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getAImportAccess().getImportedNamespaceQualifiedNameWithWildcardParserRuleCall_1_0());
				}
				lv_importedNamespace_1_0=ruleQualifiedNameWithWildcard
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getAImportRule());
					}
					set(
						$current,
						"importedNamespace",
						lv_importedNamespace_1_0,
						"alpha.Alpha.QualifiedNameWithWildcard");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleAConstantDeclaration
entryRuleAConstantDeclaration returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAConstantDeclarationRule()); }
	iv_ruleAConstantDeclaration=ruleAConstantDeclaration
	{ $current=$iv_ruleAConstantDeclaration.current; }
	EOF;

// Rule AConstantDeclaration
ruleAConstantDeclaration returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='constant'
		{
			newLeafNode(otherlv_0, grammarAccess.getAConstantDeclarationAccess().getConstantKeyword_0());
		}
		{
			newCompositeNode(grammarAccess.getAConstantDeclarationAccess().getAConstantParserRuleCall_1());
		}
		this_AConstant_1=ruleAConstant
		{
			$current = $this_AConstant_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleAExternalFunctionDeclaration
entryRuleAExternalFunctionDeclaration returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAExternalFunctionDeclarationRule()); }
	iv_ruleAExternalFunctionDeclaration=ruleAExternalFunctionDeclaration
	{ $current=$iv_ruleAExternalFunctionDeclaration.current; }
	EOF;

// Rule AExternalFunctionDeclaration
ruleAExternalFunctionDeclaration returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='external'
		{
			newLeafNode(otherlv_0, grammarAccess.getAExternalFunctionDeclarationAccess().getExternalKeyword_0());
		}
		{
			newCompositeNode(grammarAccess.getAExternalFunctionDeclarationAccess().getAExternalFunctionParserRuleCall_1());
		}
		this_AExternalFunction_1=ruleAExternalFunction
		{
			$current = $this_AExternalFunction_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleAExternalFunction
entryRuleAExternalFunction returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAExternalFunctionRule()); }
	iv_ruleAExternalFunction=ruleAExternalFunction
	{ $current=$iv_ruleAExternalFunction.current; }
	EOF;

// Rule AExternalFunction
ruleAExternalFunction returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_name_0_0=RULE_ID
				{
					newLeafNode(lv_name_0_0, grammarAccess.getAExternalFunctionAccess().getNameIDTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getAExternalFunctionRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_0_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_1='('
		{
			newLeafNode(otherlv_1, grammarAccess.getAExternalFunctionAccess().getLeftParenthesisKeyword_1());
		}
		(
			(
				lv_inputCardinarity_2_0=RULE_INT
				{
					newLeafNode(lv_inputCardinarity_2_0, grammarAccess.getAExternalFunctionAccess().getInputCardinarityINTTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getAExternalFunctionRule());
					}
					setWithLastConsumed(
						$current,
						"inputCardinarity",
						lv_inputCardinarity_2_0,
						"org.eclipse.xtext.common.Terminals.INT");
				}
			)
		)
		otherlv_3=')'
		{
			newLeafNode(otherlv_3, grammarAccess.getAExternalFunctionAccess().getRightParenthesisKeyword_3());
		}
	)
;

// Entry rule entryRuleAConstant
entryRuleAConstant returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAConstantRule()); }
	iv_ruleAConstant=ruleAConstant
	{ $current=$iv_ruleAConstant.current; }
	EOF;

// Rule AConstant
ruleAConstant returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_name_0_0=RULE_ID
				{
					newLeafNode(lv_name_0_0, grammarAccess.getAConstantAccess().getNameIDTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getAConstantRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_0_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		this_OP_EQ_1=RULE_OP_EQ
		{
			newLeafNode(this_OP_EQ_1, grammarAccess.getAConstantAccess().getOP_EQTerminalRuleCall_1());
		}
		(
			(
				lv_value_2_0=RULE_INT
				{
					newLeafNode(lv_value_2_0, grammarAccess.getAConstantAccess().getValueINTTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getAConstantRule());
					}
					setWithLastConsumed(
						$current,
						"value",
						lv_value_2_0,
						"org.eclipse.xtext.common.Terminals.INT");
				}
			)
		)
	)
;

// Entry rule entryRuleAAffineSystem
entryRuleAAffineSystem returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAAffineSystemRule()); }
	iv_ruleAAffineSystem=ruleAAffineSystem
	{ $current=$iv_ruleAAffineSystem.current; }
	EOF;

// Rule AAffineSystem
ruleAAffineSystem returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='affine'
		{
			newLeafNode(otherlv_0, grammarAccess.getAAffineSystemAccess().getAffineKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getAAffineSystemAccess().getNameSystemNameParserRuleCall_1_0());
				}
				lv_name_1_0=ruleSystemName
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getAAffineSystemRule());
					}
					set(
						$current,
						"name",
						lv_name_1_0,
						"alpha.Alpha.SystemName");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getAAffineSystemAccess().getParametersAParamDomainParserRuleCall_2_0());
				}
				lv_parameters_2_0=ruleAParamDomain
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getAAffineSystemRule());
					}
					set(
						$current,
						"parameters",
						lv_parameters_2_0,
						"alpha.Alpha.AParamDomain");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_3='define'
			{
				newLeafNode(otherlv_3, grammarAccess.getAAffineSystemAccess().getDefineKeyword_3_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getAAffineSystemAccess().getPolyObjectsPolyhedralObjectParserRuleCall_3_1_0());
					}
					lv_polyObjects_4_0=rulePolyhedralObject
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getAAffineSystemRule());
						}
						add(
							$current,
							"polyObjects",
							lv_polyObjects_4_0,
							"alpha.Alpha.PolyhedralObject");
						afterParserOrEnumRuleCall();
					}
				)
			)*
		)?
		(
			otherlv_5='inputs'
			{
				newLeafNode(otherlv_5, grammarAccess.getAAffineSystemAccess().getInputsKeyword_4_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getAAffineSystemAccess().getInputDeclarationsAVariableDeclarationParserRuleCall_4_1_0());
					}
					lv_inputDeclarations_6_0=ruleAVariableDeclaration
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getAAffineSystemRule());
						}
						add(
							$current,
							"inputDeclarations",
							lv_inputDeclarations_6_0,
							"alpha.Alpha.AVariableDeclaration");
						afterParserOrEnumRuleCall();
					}
				)
			)*
		)?
		(
			otherlv_7='outputs'
			{
				newLeafNode(otherlv_7, grammarAccess.getAAffineSystemAccess().getOutputsKeyword_5_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getAAffineSystemAccess().getOutputDeclarationsAVariableDeclarationParserRuleCall_5_1_0());
					}
					lv_outputDeclarations_8_0=ruleAVariableDeclaration
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getAAffineSystemRule());
						}
						add(
							$current,
							"outputDeclarations",
							lv_outputDeclarations_8_0,
							"alpha.Alpha.AVariableDeclaration");
						afterParserOrEnumRuleCall();
					}
				)
			)*
		)?
		(
			otherlv_9='locals'
			{
				newLeafNode(otherlv_9, grammarAccess.getAAffineSystemAccess().getLocalsKeyword_6_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getAAffineSystemAccess().getLocalvarDeclarationsAVariableDeclarationParserRuleCall_6_1_0());
					}
					lv_localvarDeclarations_10_0=ruleAVariableDeclaration
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getAAffineSystemRule());
						}
						add(
							$current,
							"localvarDeclarations",
							lv_localvarDeclarations_10_0,
							"alpha.Alpha.AVariableDeclaration");
						afterParserOrEnumRuleCall();
					}
				)
			)*
		)?
		(
			otherlv_11='fuzzy'
			{
				newLeafNode(otherlv_11, grammarAccess.getAAffineSystemAccess().getFuzzyKeyword_7_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getAAffineSystemAccess().getFuzzyVariablesAFuzzyVariableDeclarationParserRuleCall_7_1_0());
					}
					lv_fuzzyVariables_12_0=ruleAFuzzyVariableDeclaration
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getAAffineSystemRule());
						}
						add(
							$current,
							"fuzzyVariables",
							lv_fuzzyVariables_12_0,
							"alpha.Alpha.AFuzzyVariableDeclaration");
						afterParserOrEnumRuleCall();
					}
				)
			)*
		)?
		(
			otherlv_13='over'
			{
				newLeafNode(otherlv_13, grammarAccess.getAAffineSystemAccess().getOverKeyword_8_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getAAffineSystemAccess().getWhileDomainAPolyhedralObjectExpressionParserRuleCall_8_1_0());
					}
					lv_whileDomain_14_0=ruleAPolyhedralObjectExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getAAffineSystemRule());
						}
						set(
							$current,
							"whileDomain",
							lv_whileDomain_14_0,
							"alpha.Alpha.APolyhedralObjectExpression");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					lv_while_15_0='while'
					{
						newLeafNode(lv_while_15_0, grammarAccess.getAAffineSystemAccess().getWhileWhileKeyword_8_2_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getAAffineSystemRule());
						}
						setWithLastConsumed($current, "while", true, "while");
					}
				)
			)
			otherlv_16='('
			{
				newLeafNode(otherlv_16, grammarAccess.getAAffineSystemAccess().getLeftParenthesisKeyword_8_3());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getAAffineSystemAccess().getTestExpressionAAlphaExpressionParserRuleCall_8_4_0());
					}
					lv_testExpression_17_0=ruleAAlphaExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getAAffineSystemRule());
						}
						set(
							$current,
							"testExpression",
							lv_testExpression_17_0,
							"alpha.Alpha.AAlphaExpression");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_18=')'
			{
				newLeafNode(otherlv_18, grammarAccess.getAAffineSystemAccess().getRightParenthesisKeyword_8_5());
			}
		)?
		(
			otherlv_19='let'
			{
				newLeafNode(otherlv_19, grammarAccess.getAAffineSystemAccess().getLetKeyword_9_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getAAffineSystemAccess().getUseEquationsAUseEquationParserRuleCall_9_1_0());
					}
					lv_useEquations_20_0=ruleAUseEquation
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getAAffineSystemRule());
						}
						add(
							$current,
							"useEquations",
							lv_useEquations_20_0,
							"alpha.Alpha.AUseEquation");
						afterParserOrEnumRuleCall();
					}
				)
			)*
			(
				(
					{
						newCompositeNode(grammarAccess.getAAffineSystemAccess().getEquationsAEquationParserRuleCall_9_2_0());
					}
					lv_equations_21_0=ruleAEquation
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getAAffineSystemRule());
						}
						add(
							$current,
							"equations",
							lv_equations_21_0,
							"alpha.Alpha.AEquation");
						afterParserOrEnumRuleCall();
					}
				)
			)*
		)?
		otherlv_22='.'
		{
			newLeafNode(otherlv_22, grammarAccess.getAAffineSystemAccess().getFullStopKeyword_10());
		}
	)
;

// Entry rule entryRuleAVariableDeclaration
entryRuleAVariableDeclaration returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAVariableDeclarationRule()); }
	iv_ruleAVariableDeclaration=ruleAVariableDeclaration
	{ $current=$iv_ruleAVariableDeclaration.current; }
	EOF;

// Rule AVariableDeclaration
ruleAVariableDeclaration returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getAVariableDeclarationAccess().getVarListAVariableListParserRuleCall_0_0());
				}
				lv_varList_0_0=ruleAVariableList
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getAVariableDeclarationRule());
					}
					set(
						$current,
						"varList",
						lv_varList_0_0,
						"alpha.Alpha.AVariableList");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_1=':'
			{
				newLeafNode(otherlv_1, grammarAccess.getAVariableDeclarationAccess().getColonKeyword_1_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getAVariableDeclarationAccess().getDomainAPolyhedralObjectExpressionParserRuleCall_1_1_0());
					}
					lv_domain_2_0=ruleAPolyhedralObjectExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getAVariableDeclarationRule());
						}
						set(
							$current,
							"domain",
							lv_domain_2_0,
							"alpha.Alpha.APolyhedralObjectExpression");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
	)
;

// Entry rule entryRuleAVariableList
entryRuleAVariableList returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAVariableListRule()); }
	iv_ruleAVariableList=ruleAVariableList
	{ $current=$iv_ruleAVariableList.current; }
	EOF;

// Rule AVariableList
ruleAVariableList returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getAVariableListAccess().getVarsAVariableParserRuleCall_0_0());
				}
				lv_vars_0_0=ruleAVariable
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getAVariableListRule());
					}
					add(
						$current,
						"vars",
						lv_vars_0_0,
						"alpha.Alpha.AVariable");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_1=','
			{
				newLeafNode(otherlv_1, grammarAccess.getAVariableListAccess().getCommaKeyword_1_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getAVariableListAccess().getVarsAVariableParserRuleCall_1_1_0());
					}
					lv_vars_2_0=ruleAVariable
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getAVariableListRule());
						}
						add(
							$current,
							"vars",
							lv_vars_2_0,
							"alpha.Alpha.AVariable");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleAVariable
entryRuleAVariable returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAVariableRule()); }
	iv_ruleAVariable=ruleAVariable
	{ $current=$iv_ruleAVariable.current; }
	EOF;

// Rule AVariable
ruleAVariable returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			lv_name_0_0=RULE_ID
			{
				newLeafNode(lv_name_0_0, grammarAccess.getAVariableAccess().getNameIDTerminalRuleCall_0());
			}
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getAVariableRule());
				}
				setWithLastConsumed(
					$current,
					"name",
					lv_name_0_0,
					"org.eclipse.xtext.common.Terminals.ID");
			}
		)
	)
;

// Entry rule entryRuleAFuzzyVariableDeclaration
entryRuleAFuzzyVariableDeclaration returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAFuzzyVariableDeclarationRule()); }
	iv_ruleAFuzzyVariableDeclaration=ruleAFuzzyVariableDeclaration
	{ $current=$iv_ruleAFuzzyVariableDeclaration.current; }
	EOF;

// Rule AFuzzyVariableDeclaration
ruleAFuzzyVariableDeclaration returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getAFuzzyVariableDeclarationAccess().getVarListAVariableListParserRuleCall_0_0());
				}
				lv_varList_0_0=ruleAVariableList
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getAFuzzyVariableDeclarationRule());
					}
					set(
						$current,
						"varList",
						lv_varList_0_0,
						"alpha.Alpha.AVariableList");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_1=':'
		{
			newLeafNode(otherlv_1, grammarAccess.getAFuzzyVariableDeclarationAccess().getColonKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getAFuzzyVariableDeclarationAccess().getRelationAPolyhedralObjectExpressionParserRuleCall_2_0());
				}
				lv_relation_2_0=ruleAPolyhedralObjectExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getAFuzzyVariableDeclarationRule());
					}
					set(
						$current,
						"relation",
						lv_relation_2_0,
						"alpha.Alpha.APolyhedralObjectExpression");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleQualifiedName
entryRuleQualifiedName returns [String current=null]:
	{ newCompositeNode(grammarAccess.getQualifiedNameRule()); }
	iv_ruleQualifiedName=ruleQualifiedName
	{ $current=$iv_ruleQualifiedName.current.getText(); }
	EOF;

// Rule QualifiedName
ruleQualifiedName returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		this_ID_0=RULE_ID
		{
			$current.merge(this_ID_0);
		}
		{
			newLeafNode(this_ID_0, grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_0());
		}
		(
			kw='.'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getQualifiedNameAccess().getFullStopKeyword_1_0());
			}
			this_ID_2=RULE_ID
			{
				$current.merge(this_ID_2);
			}
			{
				newLeafNode(this_ID_2, grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_1_1());
			}
		)*
	)
;

// Entry rule entryRuleQualifiedNameWithWildcard
entryRuleQualifiedNameWithWildcard returns [String current=null]:
	{ newCompositeNode(grammarAccess.getQualifiedNameWithWildcardRule()); }
	iv_ruleQualifiedNameWithWildcard=ruleQualifiedNameWithWildcard
	{ $current=$iv_ruleQualifiedNameWithWildcard.current.getText(); }
	EOF;

// Rule QualifiedNameWithWildcard
ruleQualifiedNameWithWildcard returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getQualifiedNameWithWildcardAccess().getQualifiedNameParserRuleCall_0());
		}
		this_QualifiedName_0=ruleQualifiedName
		{
			$current.merge(this_QualifiedName_0);
		}
		{
			afterParserOrEnumRuleCall();
		}
		(
			kw='.*'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getQualifiedNameWithWildcardAccess().getFullStopAsteriskKeyword_1());
			}
		)?
	)
;

// Entry rule entryRuleSystemName
entryRuleSystemName returns [String current=null]:
	{ newCompositeNode(grammarAccess.getSystemNameRule()); }
	iv_ruleSystemName=ruleSystemName
	{ $current=$iv_ruleSystemName.current.getText(); }
	EOF;

// Rule SystemName
ruleSystemName returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	this_ID_0=RULE_ID
	{
		$current.merge(this_ID_0);
	}
	{
		newLeafNode(this_ID_0, grammarAccess.getSystemNameAccess().getIDTerminalRuleCall());
	}
;

// Entry rule entryRuleIndexName
entryRuleIndexName returns [String current=null]:
	{ newCompositeNode(grammarAccess.getIndexNameRule()); }
	iv_ruleIndexName=ruleIndexName
	{ $current=$iv_ruleIndexName.current.getText(); }
	EOF;

// Rule IndexName
ruleIndexName returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		this_ID_0=RULE_ID
		{
			$current.merge(this_ID_0);
		}
		{
			newLeafNode(this_ID_0, grammarAccess.getIndexNameAccess().getIDTerminalRuleCall_0());
		}
		(
			kw='\''
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getIndexNameAccess().getApostropheKeyword_1());
			}
		)*
	)
;

// Entry rule entryRuleAIndexDimension
entryRuleAIndexDimension returns [String current=null]:
	{ newCompositeNode(grammarAccess.getAIndexDimensionRule()); }
	iv_ruleAIndexDimension=ruleAIndexDimension
	{ $current=$iv_ruleAIndexDimension.current.getText(); }
	EOF;

// Rule AIndexDimension
ruleAIndexDimension returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	{
		newCompositeNode(grammarAccess.getAIndexDimensionAccess().getIndexNameParserRuleCall());
	}
	this_IndexName_0=ruleIndexName
	{
		$current.merge(this_IndexName_0);
	}
	{
		afterParserOrEnumRuleCall();
	}
;

// Entry rule entryRuleAIndexList
entryRuleAIndexList returns [String current=null]:
	{ newCompositeNode(grammarAccess.getAIndexListRule()); }
	iv_ruleAIndexList=ruleAIndexList
	{ $current=$iv_ruleAIndexList.current.getText(); }
	EOF;

// Rule AIndexList
ruleAIndexList returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getAIndexListAccess().getAIndexDimensionParserRuleCall_0());
		}
		this_AIndexDimension_0=ruleAIndexDimension
		{
			$current.merge(this_AIndexDimension_0);
		}
		{
			afterParserOrEnumRuleCall();
		}
		(
			kw=','
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getAIndexListAccess().getCommaKeyword_1_0());
			}
			{
				newCompositeNode(grammarAccess.getAIndexListAccess().getAIndexDimensionParserRuleCall_1_1());
			}
			this_AIndexDimension_2=ruleAIndexDimension
			{
				$current.merge(this_AIndexDimension_2);
			}
			{
				afterParserOrEnumRuleCall();
			}
		)*
	)?
;

// Entry rule entryRulePolyhedralObject
entryRulePolyhedralObject returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPolyhedralObjectRule()); }
	iv_rulePolyhedralObject=rulePolyhedralObject
	{ $current=$iv_rulePolyhedralObject.current; }
	EOF;

// Rule PolyhedralObject
rulePolyhedralObject returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_name_0_0=RULE_ID
				{
					newLeafNode(lv_name_0_0, grammarAccess.getPolyhedralObjectAccess().getNameIDTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getPolyhedralObjectRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_0_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		this_OP_EQ_1=RULE_OP_EQ
		{
			newLeafNode(this_OP_EQ_1, grammarAccess.getPolyhedralObjectAccess().getOP_EQTerminalRuleCall_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getPolyhedralObjectAccess().getObjectAPolyhedralObjectExpressionParserRuleCall_2_0());
				}
				lv_object_2_0=ruleAPolyhedralObjectExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getPolyhedralObjectRule());
					}
					set(
						$current,
						"object",
						lv_object_2_0,
						"alpha.Alpha.APolyhedralObjectExpression");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleAPolyhedralObjectExpression
entryRuleAPolyhedralObjectExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAPolyhedralObjectExpressionRule()); }
	iv_ruleAPolyhedralObjectExpression=ruleAPolyhedralObjectExpression
	{ $current=$iv_ruleAPolyhedralObjectExpression.current; }
	EOF;

// Rule APolyhedralObjectExpression
ruleAPolyhedralObjectExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getAPolyhedralObjectExpressionAccess().getAUnaryOrTerminalPolyObjExpressionParserRuleCall_0());
		}
		this_AUnaryOrTerminalPolyObjExpression_0=ruleAUnaryOrTerminalPolyObjExpression
		{
			$current = $this_AUnaryOrTerminalPolyObjExpression_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				{
					$current = forceCreateModelElementAndSet(
						grammarAccess.getAPolyhedralObjectExpressionAccess().getABinaryPolyObjExpressionLeftAction_1_0(),
						$current);
				}
			)
			(
				(
					(
						lv_operator_2_1='cross'
						{
							newLeafNode(lv_operator_2_1, grammarAccess.getAPolyhedralObjectExpressionAccess().getOperatorCrossKeyword_1_1_0_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getAPolyhedralObjectExpressionRule());
							}
							setWithLastConsumed($current, "operator", lv_operator_2_1, null);
						}
						    |
						lv_operator_2_2=RULE_OP_PLUS
						{
							newLeafNode(lv_operator_2_2, grammarAccess.getAPolyhedralObjectExpressionAccess().getOperatorOP_PLUSTerminalRuleCall_1_1_0_1());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getAPolyhedralObjectExpressionRule());
							}
							setWithLastConsumed(
								$current,
								"operator",
								lv_operator_2_2,
								"alpha.Alpha.OP_PLUS");
						}
						    |
						lv_operator_2_3=RULE_OP_MINUS
						{
							newLeafNode(lv_operator_2_3, grammarAccess.getAPolyhedralObjectExpressionAccess().getOperatorOP_MINUSTerminalRuleCall_1_1_0_2());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getAPolyhedralObjectExpressionRule());
							}
							setWithLastConsumed(
								$current,
								"operator",
								lv_operator_2_3,
								"alpha.Alpha.OP_MINUS");
						}
						    |
						lv_operator_2_4=RULE_OP_MUL
						{
							newLeafNode(lv_operator_2_4, grammarAccess.getAPolyhedralObjectExpressionAccess().getOperatorOP_MULTerminalRuleCall_1_1_0_3());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getAPolyhedralObjectExpressionRule());
							}
							setWithLastConsumed(
								$current,
								"operator",
								lv_operator_2_4,
								"alpha.Alpha.OP_MUL");
						}
						    |
						lv_operator_2_5='@'
						{
							newLeafNode(lv_operator_2_5, grammarAccess.getAPolyhedralObjectExpressionAccess().getOperatorCommercialAtKeyword_1_1_0_4());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getAPolyhedralObjectExpressionRule());
							}
							setWithLastConsumed($current, "operator", lv_operator_2_5, null);
						}
						    |
						lv_operator_2_6='->-'
						{
							newLeafNode(lv_operator_2_6, grammarAccess.getAPolyhedralObjectExpressionAccess().getOperatorHyphenMinusGreaterThanSignHyphenMinusKeyword_1_1_0_5());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getAPolyhedralObjectExpressionRule());
							}
							setWithLastConsumed($current, "operator", lv_operator_2_6, null);
						}
						    |
						lv_operator_2_7='->*'
						{
							newLeafNode(lv_operator_2_7, grammarAccess.getAPolyhedralObjectExpressionAccess().getOperatorHyphenMinusGreaterThanSignAsteriskKeyword_1_1_0_6());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getAPolyhedralObjectExpressionRule());
							}
							setWithLastConsumed($current, "operator", lv_operator_2_7, null);
						}
					)
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getAPolyhedralObjectExpressionAccess().getRightAUnaryOrTerminalPolyObjExpressionParserRuleCall_1_2_0());
					}
					lv_right_3_0=ruleAUnaryOrTerminalPolyObjExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getAPolyhedralObjectExpressionRule());
						}
						set(
							$current,
							"right",
							lv_right_3_0,
							"alpha.Alpha.AUnaryOrTerminalPolyObjExpression");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleAUnaryOrTerminalPolyObjExpression
entryRuleAUnaryOrTerminalPolyObjExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAUnaryOrTerminalPolyObjExpressionRule()); }
	iv_ruleAUnaryOrTerminalPolyObjExpression=ruleAUnaryOrTerminalPolyObjExpression
	{ $current=$iv_ruleAUnaryOrTerminalPolyObjExpression.current; }
	EOF;

// Rule AUnaryOrTerminalPolyObjExpression
ruleAUnaryOrTerminalPolyObjExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getAUnaryOrTerminalPolyObjExpressionAccess().getAUnaryPolyObjExpressionParserRuleCall_0());
		}
		this_AUnaryPolyObjExpression_0=ruleAUnaryPolyObjExpression
		{
			$current = $this_AUnaryPolyObjExpression_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getAUnaryOrTerminalPolyObjExpressionAccess().getAPolyObjTerminalParserRuleCall_1());
		}
		this_APolyObjTerminal_1=ruleAPolyObjTerminal
		{
			$current = $this_APolyObjTerminal_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleAPolyObjTerminal
entryRuleAPolyObjTerminal returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAPolyObjTerminalRule()); }
	iv_ruleAPolyObjTerminal=ruleAPolyObjTerminal
	{ $current=$iv_ruleAPolyObjTerminal.current; }
	EOF;

// Rule APolyObjTerminal
ruleAPolyObjTerminal returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getAPolyObjTerminalAccess().getAISLSetParserRuleCall_0());
		}
		this_AISLSet_0=ruleAISLSet
		{
			$current = $this_AISLSet_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getAPolyObjTerminalAccess().getAISLRelationParserRuleCall_1());
		}
		this_AISLRelation_1=ruleAISLRelation
		{
			$current = $this_AISLRelation_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getAPolyObjTerminalAccess().getADeclaredObjectParserRuleCall_2());
		}
		this_ADeclaredObject_2=ruleADeclaredObject
		{
			$current = $this_ADeclaredObject_2.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getAPolyObjTerminalAccess().getARectangularDomainParserRuleCall_3());
		}
		this_ARectangularDomain_3=ruleARectangularDomain
		{
			$current = $this_ARectangularDomain_3.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getAPolyObjTerminalAccess().getAVariableDomainParserRuleCall_4());
		}
		this_AVariableDomain_4=ruleAVariableDomain
		{
			$current = $this_AVariableDomain_4.current;
			afterParserOrEnumRuleCall();
		}
		    |
		(
			otherlv_5='('
			{
				newLeafNode(otherlv_5, grammarAccess.getAPolyObjTerminalAccess().getLeftParenthesisKeyword_5_0());
			}
			{
				newCompositeNode(grammarAccess.getAPolyObjTerminalAccess().getAPolyhedralObjectExpressionParserRuleCall_5_1());
			}
			this_APolyhedralObjectExpression_6=ruleAPolyhedralObjectExpression
			{
				$current = $this_APolyhedralObjectExpression_6.current;
				afterParserOrEnumRuleCall();
			}
			otherlv_7=')'
			{
				newLeafNode(otherlv_7, grammarAccess.getAPolyObjTerminalAccess().getRightParenthesisKeyword_5_2());
			}
		)
	)
;

// Entry rule entryRuleAUnaryPolyObjExpression
entryRuleAUnaryPolyObjExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAUnaryPolyObjExpressionRule()); }
	iv_ruleAUnaryPolyObjExpression=ruleAUnaryPolyObjExpression
	{ $current=$iv_ruleAUnaryPolyObjExpression.current; }
	EOF;

// Rule AUnaryPolyObjExpression
ruleAUnaryPolyObjExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				(
					lv_op_0_1='domain'
					{
						newLeafNode(lv_op_0_1, grammarAccess.getAUnaryPolyObjExpressionAccess().getOpDomainKeyword_0_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getAUnaryPolyObjExpressionRule());
						}
						setWithLastConsumed($current, "op", lv_op_0_1, null);
					}
					    |
					lv_op_0_2='range'
					{
						newLeafNode(lv_op_0_2, grammarAccess.getAUnaryPolyObjExpressionAccess().getOpRangeKeyword_0_0_1());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getAUnaryPolyObjExpressionRule());
						}
						setWithLastConsumed($current, "op", lv_op_0_2, null);
					}
					    |
					lv_op_0_3='complement'
					{
						newLeafNode(lv_op_0_3, grammarAccess.getAUnaryPolyObjExpressionAccess().getOpComplementKeyword_0_0_2());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getAUnaryPolyObjExpressionRule());
						}
						setWithLastConsumed($current, "op", lv_op_0_3, null);
					}
					    |
					lv_op_0_4='poly-hull'
					{
						newLeafNode(lv_op_0_4, grammarAccess.getAUnaryPolyObjExpressionAccess().getOpPolyHullKeyword_0_0_3());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getAUnaryPolyObjExpressionRule());
						}
						setWithLastConsumed($current, "op", lv_op_0_4, null);
					}
					    |
					lv_op_0_5='affine-hull'
					{
						newLeafNode(lv_op_0_5, grammarAccess.getAUnaryPolyObjExpressionAccess().getOpAffineHullKeyword_0_0_4());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getAUnaryPolyObjExpressionRule());
						}
						setWithLastConsumed($current, "op", lv_op_0_5, null);
					}
					    |
					lv_op_0_6='reverse'
					{
						newLeafNode(lv_op_0_6, grammarAccess.getAUnaryPolyObjExpressionAccess().getOpReverseKeyword_0_0_5());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getAUnaryPolyObjExpressionRule());
						}
						setWithLastConsumed($current, "op", lv_op_0_6, null);
					}
				)
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getAUnaryPolyObjExpressionAccess().getExprAPolyObjTerminalParserRuleCall_1_0());
				}
				lv_expr_1_0=ruleAPolyObjTerminal
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getAUnaryPolyObjExpressionRule());
					}
					set(
						$current,
						"expr",
						lv_expr_1_0,
						"alpha.Alpha.APolyObjTerminal");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleAVariableDomain
entryRuleAVariableDomain returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAVariableDomainRule()); }
	iv_ruleAVariableDomain=ruleAVariableDomain
	{ $current=$iv_ruleAVariableDomain.current; }
	EOF;

// Rule AVariableDomain
ruleAVariableDomain returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='{'
		{
			newLeafNode(otherlv_0, grammarAccess.getAVariableDomainAccess().getLeftCurlyBracketKeyword_0());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getAVariableDomainRule());
					}
				}
				otherlv_1=RULE_ID
				{
					newLeafNode(otherlv_1, grammarAccess.getAVariableDomainAccess().getVarAVariableCrossReference_1_0());
				}
			)
		)
		otherlv_2='}'
		{
			newLeafNode(otherlv_2, grammarAccess.getAVariableDomainAccess().getRightCurlyBracketKeyword_2());
		}
	)
;

// Entry rule entryRuleARectangularDomain
entryRuleARectangularDomain returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getARectangularDomainRule()); }
	iv_ruleARectangularDomain=ruleARectangularDomain
	{ $current=$iv_ruleARectangularDomain.current; }
	EOF;

// Rule ARectangularDomain
ruleARectangularDomain returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='['
		{
			newLeafNode(otherlv_0, grammarAccess.getARectangularDomainAccess().getLeftSquareBracketKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getARectangularDomainAccess().getDimensionsAIndexListParserRuleCall_1_0());
				}
				lv_dimensions_1_0=ruleAIndexList
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getARectangularDomainRule());
					}
					add(
						$current,
						"dimensions",
						lv_dimensions_1_0,
						"alpha.Alpha.AIndexList");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2=']'
		{
			newLeafNode(otherlv_2, grammarAccess.getARectangularDomainAccess().getRightSquareBracketKeyword_2());
		}
		(
			otherlv_3='as'
			{
				newLeafNode(otherlv_3, grammarAccess.getARectangularDomainAccess().getAsKeyword_3_0());
			}
			otherlv_4='['
			{
				newLeafNode(otherlv_4, grammarAccess.getARectangularDomainAccess().getLeftSquareBracketKeyword_3_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getARectangularDomainAccess().getNamesAIndexListParserRuleCall_3_2_0());
					}
					lv_names_5_0=ruleAIndexList
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getARectangularDomainRule());
						}
						add(
							$current,
							"names",
							lv_names_5_0,
							"alpha.Alpha.AIndexList");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_6=']'
			{
				newLeafNode(otherlv_6, grammarAccess.getARectangularDomainAccess().getRightSquareBracketKeyword_3_3());
			}
		)?
	)
;

// Entry rule entryRuleADeclaredObject
entryRuleADeclaredObject returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getADeclaredObjectRule()); }
	iv_ruleADeclaredObject=ruleADeclaredObject
	{ $current=$iv_ruleADeclaredObject.current; }
	EOF;

// Rule ADeclaredObject
ruleADeclaredObject returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getADeclaredObjectRule());
				}
			}
			otherlv_0=RULE_ID
			{
				newLeafNode(otherlv_0, grammarAccess.getADeclaredObjectAccess().getObjectPolyhedralObjectCrossReference_0());
			}
		)
	)
;

// Entry rule entryRuleAISLSet
entryRuleAISLSet returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAISLSetRule()); }
	iv_ruleAISLSet=ruleAISLSet
	{ $current=$iv_ruleAISLSet.current; }
	EOF;

// Rule AISLSet
ruleAISLSet returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='{'
		{
			newLeafNode(otherlv_0, grammarAccess.getAISLSetAccess().getLeftCurlyBracketKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getAISLSetAccess().getSetsAISLBasicSetParserRuleCall_1_0());
				}
				lv_sets_1_0=ruleAISLBasicSet
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getAISLSetRule());
					}
					add(
						$current,
						"sets",
						lv_sets_1_0,
						"alpha.Alpha.AISLBasicSet");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_2=';'
			{
				newLeafNode(otherlv_2, grammarAccess.getAISLSetAccess().getSemicolonKeyword_2_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getAISLSetAccess().getRelationsAISLBasicSetParserRuleCall_2_1_0());
					}
					lv_relations_3_0=ruleAISLBasicSet
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getAISLSetRule());
						}
						add(
							$current,
							"relations",
							lv_relations_3_0,
							"alpha.Alpha.AISLBasicSet");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		otherlv_4='}'
		{
			newLeafNode(otherlv_4, grammarAccess.getAISLSetAccess().getRightCurlyBracketKeyword_3());
		}
	)
;

// Entry rule entryRuleAISLBasicSet
entryRuleAISLBasicSet returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAISLBasicSetRule()); }
	iv_ruleAISLBasicSet=ruleAISLBasicSet
	{ $current=$iv_ruleAISLBasicSet.current; }
	EOF;

// Rule AISLBasicSet
ruleAISLBasicSet returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			otherlv_0='['
			{
				newLeafNode(otherlv_0, grammarAccess.getAISLBasicSetAccess().getLeftSquareBracketKeyword_0_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getAISLBasicSetAccess().getDimsAIndexListParserRuleCall_0_1_0());
					}
					lv_dims_1_0=ruleAIndexList
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getAISLBasicSetRule());
						}
						set(
							$current,
							"dims",
							lv_dims_1_0,
							"alpha.Alpha.AIndexList");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_2=']'
			{
				newLeafNode(otherlv_2, grammarAccess.getAISLBasicSetAccess().getRightSquareBracketKeyword_0_2());
			}
		)?
		otherlv_3=':'
		{
			newLeafNode(otherlv_3, grammarAccess.getAISLBasicSetAccess().getColonKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getAISLBasicSetAccess().getConstraintStringISLStringParserRuleCall_2_0());
				}
				lv_constraintString_4_0=ruleISLString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getAISLBasicSetRule());
					}
					set(
						$current,
						"constraintString",
						lv_constraintString_4_0,
						"alpha.Alpha.ISLString");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleAISLRelation
entryRuleAISLRelation returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAISLRelationRule()); }
	iv_ruleAISLRelation=ruleAISLRelation
	{ $current=$iv_ruleAISLRelation.current; }
	EOF;

// Rule AISLRelation
ruleAISLRelation returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='{'
		{
			newLeafNode(otherlv_0, grammarAccess.getAISLRelationAccess().getLeftCurlyBracketKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getAISLRelationAccess().getRelationsAISLBasicRelationParserRuleCall_1_0());
				}
				lv_relations_1_0=ruleAISLBasicRelation
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getAISLRelationRule());
					}
					add(
						$current,
						"relations",
						lv_relations_1_0,
						"alpha.Alpha.AISLBasicRelation");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_2=';'
			{
				newLeafNode(otherlv_2, grammarAccess.getAISLRelationAccess().getSemicolonKeyword_2_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getAISLRelationAccess().getRelationsAISLBasicRelationParserRuleCall_2_1_0());
					}
					lv_relations_3_0=ruleAISLBasicRelation
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getAISLRelationRule());
						}
						add(
							$current,
							"relations",
							lv_relations_3_0,
							"alpha.Alpha.AISLBasicRelation");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		otherlv_4='}'
		{
			newLeafNode(otherlv_4, grammarAccess.getAISLRelationAccess().getRightCurlyBracketKeyword_3());
		}
	)
;

// Entry rule entryRuleAISLBasicRelation
entryRuleAISLBasicRelation returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAISLBasicRelationRule()); }
	iv_ruleAISLBasicRelation=ruleAISLBasicRelation
	{ $current=$iv_ruleAISLBasicRelation.current; }
	EOF;

// Rule AISLBasicRelation
ruleAISLBasicRelation returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='['
		{
			newLeafNode(otherlv_0, grammarAccess.getAISLBasicRelationAccess().getLeftSquareBracketKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getAISLBasicRelationAccess().getInDimsAIndexListParserRuleCall_1_0());
				}
				lv_inDims_1_0=ruleAIndexList
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getAISLBasicRelationRule());
					}
					set(
						$current,
						"inDims",
						lv_inDims_1_0,
						"alpha.Alpha.AIndexList");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2=']'
		{
			newLeafNode(otherlv_2, grammarAccess.getAISLBasicRelationAccess().getRightSquareBracketKeyword_2());
		}
		otherlv_3='->'
		{
			newLeafNode(otherlv_3, grammarAccess.getAISLBasicRelationAccess().getHyphenMinusGreaterThanSignKeyword_3());
		}
		otherlv_4='['
		{
			newLeafNode(otherlv_4, grammarAccess.getAISLBasicRelationAccess().getLeftSquareBracketKeyword_4());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getAISLBasicRelationAccess().getOutDimsAIndexListParserRuleCall_5_0());
				}
				lv_outDims_5_0=ruleAIndexList
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getAISLBasicRelationRule());
					}
					set(
						$current,
						"outDims",
						lv_outDims_5_0,
						"alpha.Alpha.AIndexList");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_6=']'
		{
			newLeafNode(otherlv_6, grammarAccess.getAISLBasicRelationAccess().getRightSquareBracketKeyword_6());
		}
		otherlv_7=':'
		{
			newLeafNode(otherlv_7, grammarAccess.getAISLBasicRelationAccess().getColonKeyword_7());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getAISLBasicRelationAccess().getConstraintStrISLStringParserRuleCall_8_0());
				}
				lv_constraintStr_8_0=ruleISLString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getAISLBasicRelationRule());
					}
					set(
						$current,
						"constraintStr",
						lv_constraintStr_8_0,
						"alpha.Alpha.ISLString");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleAParamDomain
entryRuleAParamDomain returns [String current=null]:
	{ newCompositeNode(grammarAccess.getAParamDomainRule()); }
	iv_ruleAParamDomain=ruleAParamDomain
	{ $current=$iv_ruleAParamDomain.current.getText(); }
	EOF;

// Rule AParamDomain
ruleAParamDomain returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		kw='['
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getAParamDomainAccess().getLeftSquareBracketKeyword_0());
		}
		{
			newCompositeNode(grammarAccess.getAParamDomainAccess().getAIndexListParserRuleCall_1());
		}
		this_AIndexList_1=ruleAIndexList
		{
			$current.merge(this_AIndexList_1);
		}
		{
			afterParserOrEnumRuleCall();
		}
		kw=']'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getAParamDomainAccess().getRightSquareBracketKeyword_2());
		}
		kw='->'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getAParamDomainAccess().getHyphenMinusGreaterThanSignKeyword_3());
		}
		kw='{'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getAParamDomainAccess().getLeftCurlyBracketKeyword_4());
		}
		kw=':'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getAParamDomainAccess().getColonKeyword_5());
		}
		{
			newCompositeNode(grammarAccess.getAParamDomainAccess().getISLStringParserRuleCall_6());
		}
		this_ISLString_6=ruleISLString
		{
			$current.merge(this_ISLString_6);
		}
		{
			afterParserOrEnumRuleCall();
		}
		kw='}'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getAParamDomainAccess().getRightCurlyBracketKeyword_7());
		}
	)
;

// Entry rule entryRuleISLString
entryRuleISLString returns [String current=null]:
	{ newCompositeNode(grammarAccess.getISLStringRule()); }
	iv_ruleISLString=ruleISLString
	{ $current=$iv_ruleISLString.current.getText(); }
	EOF;

// Rule ISLString
ruleISLString returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getISLStringAccess().getIndexNameParserRuleCall_0());
		}
		this_IndexName_0=ruleIndexName
		{
			$current.merge(this_IndexName_0);
		}
		{
			afterParserOrEnumRuleCall();
		}
		    |
		this_INT_1=RULE_INT
		{
			$current.merge(this_INT_1);
		}
		{
			newLeafNode(this_INT_1, grammarAccess.getISLStringAccess().getINTTerminalRuleCall_1());
		}
		    |
		this_OP_PLUS_2=RULE_OP_PLUS
		{
			$current.merge(this_OP_PLUS_2);
		}
		{
			newLeafNode(this_OP_PLUS_2, grammarAccess.getISLStringAccess().getOP_PLUSTerminalRuleCall_2());
		}
		    |
		this_OP_MINUS_3=RULE_OP_MINUS
		{
			$current.merge(this_OP_MINUS_3);
		}
		{
			newLeafNode(this_OP_MINUS_3, grammarAccess.getISLStringAccess().getOP_MINUSTerminalRuleCall_3());
		}
		    |
		this_OP_MUL_4=RULE_OP_MUL
		{
			$current.merge(this_OP_MUL_4);
		}
		{
			newLeafNode(this_OP_MUL_4, grammarAccess.getISLStringAccess().getOP_MULTerminalRuleCall_4());
		}
		    |
		this_OP_DIV_5=RULE_OP_DIV
		{
			$current.merge(this_OP_DIV_5);
		}
		{
			newLeafNode(this_OP_DIV_5, grammarAccess.getISLStringAccess().getOP_DIVTerminalRuleCall_5());
		}
		    |
		this_OP_MOD_6=RULE_OP_MOD
		{
			$current.merge(this_OP_MOD_6);
		}
		{
			newLeafNode(this_OP_MOD_6, grammarAccess.getISLStringAccess().getOP_MODTerminalRuleCall_6());
		}
		    |
		this_OP_AND_7=RULE_OP_AND
		{
			$current.merge(this_OP_AND_7);
		}
		{
			newLeafNode(this_OP_AND_7, grammarAccess.getISLStringAccess().getOP_ANDTerminalRuleCall_7());
		}
		    |
		this_OP_OR_8=RULE_OP_OR
		{
			$current.merge(this_OP_OR_8);
		}
		{
			newLeafNode(this_OP_OR_8, grammarAccess.getISLStringAccess().getOP_ORTerminalRuleCall_8());
		}
		    |
		kw='['
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getISLStringAccess().getLeftSquareBracketKeyword_9());
		}
		    |
		kw=']'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getISLStringAccess().getRightSquareBracketKeyword_10());
		}
		    |
		kw='('
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getISLStringAccess().getLeftParenthesisKeyword_11());
		}
		    |
		kw=')'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getISLStringAccess().getRightParenthesisKeyword_12());
		}
		    |
		kw=','
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getISLStringAccess().getCommaKeyword_13());
		}
		    |
		kw=':'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getISLStringAccess().getColonKeyword_14());
		}
		    |
		this_INTERSECTION_15=RULE_INTERSECTION
		{
			$current.merge(this_INTERSECTION_15);
		}
		{
			newLeafNode(this_INTERSECTION_15, grammarAccess.getISLStringAccess().getINTERSECTIONTerminalRuleCall_15());
		}
		    |
		this_UNION_16=RULE_UNION
		{
			$current.merge(this_UNION_16);
		}
		{
			newLeafNode(this_UNION_16, grammarAccess.getISLStringAccess().getUNIONTerminalRuleCall_16());
		}
		    |
		this_WS_17=RULE_WS
		{
			$current.merge(this_WS_17);
		}
		{
			newLeafNode(this_WS_17, grammarAccess.getISLStringAccess().getWSTerminalRuleCall_17());
		}
		    |
		{
			newCompositeNode(grammarAccess.getISLStringAccess().getRELATIONAL_OPParserRuleCall_18());
		}
		this_RELATIONAL_OP_18=ruleRELATIONAL_OP
		{
			$current.merge(this_RELATIONAL_OP_18);
		}
		{
			afterParserOrEnumRuleCall();
		}
	)*
;

// Entry rule entryRuleAEquation
entryRuleAEquation returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAEquationRule()); }
	iv_ruleAEquation=ruleAEquation
	{ $current=$iv_ruleAEquation.current; }
	EOF;

// Rule AEquation
ruleAEquation returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getAEquationRule());
					}
				}
				otherlv_0=RULE_ID
				{
					newLeafNode(otherlv_0, grammarAccess.getAEquationAccess().getVarAVariableCrossReference_0_0());
				}
			)
		)
		(
			otherlv_1='['
			{
				newLeafNode(otherlv_1, grammarAccess.getAEquationAccess().getLeftSquareBracketKeyword_1_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getAEquationAccess().getIndexesAIndexListParserRuleCall_1_1_0());
					}
					lv_indexes_2_0=ruleAIndexList
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getAEquationRule());
						}
						set(
							$current,
							"indexes",
							lv_indexes_2_0,
							"alpha.Alpha.AIndexList");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_3=']'
			{
				newLeafNode(otherlv_3, grammarAccess.getAEquationAccess().getRightSquareBracketKeyword_1_2());
			}
		)?
		this_OP_EQ_4=RULE_OP_EQ
		{
			newLeafNode(this_OP_EQ_4, grammarAccess.getAEquationAccess().getOP_EQTerminalRuleCall_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getAEquationAccess().getExprAAlphaExpressionParserRuleCall_3_0());
				}
				lv_expr_5_0=ruleAAlphaExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getAEquationRule());
					}
					set(
						$current,
						"expr",
						lv_expr_5_0,
						"alpha.Alpha.AAlphaExpression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_6=';'
		{
			newLeafNode(otherlv_6, grammarAccess.getAEquationAccess().getSemicolonKeyword_4());
		}
	)
;

// Entry rule entryRuleAUseEquation
entryRuleAUseEquation returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAUseEquationRule()); }
	iv_ruleAUseEquation=ruleAUseEquation
	{ $current=$iv_ruleAUseEquation.current; }
	EOF;

// Rule AUseEquation
ruleAUseEquation returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			otherlv_0='over'
			{
				newLeafNode(otherlv_0, grammarAccess.getAUseEquationAccess().getOverKeyword_0_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getAUseEquationAccess().getInstantiationDomainAPolyhedralObjectExpressionParserRuleCall_0_1_0());
					}
					lv_instantiationDomain_1_0=ruleAPolyhedralObjectExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getAUseEquationRule());
						}
						set(
							$current,
							"instantiationDomain",
							lv_instantiationDomain_1_0,
							"alpha.Alpha.APolyhedralObjectExpression");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_2='with'
				{
					newLeafNode(otherlv_2, grammarAccess.getAUseEquationAccess().getWithKeyword_0_2_0());
				}
				otherlv_3='['
				{
					newLeafNode(otherlv_3, grammarAccess.getAUseEquationAccess().getLeftSquareBracketKeyword_0_2_1());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getAUseEquationAccess().getSubsystemDimsAIndexListParserRuleCall_0_2_2_0());
						}
						lv_subsystemDims_4_0=ruleAIndexList
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getAUseEquationRule());
							}
							set(
								$current,
								"subsystemDims",
								lv_subsystemDims_4_0,
								"alpha.Alpha.AIndexList");
							afterParserOrEnumRuleCall();
						}
					)
				)
				otherlv_5=']'
				{
					newLeafNode(otherlv_5, grammarAccess.getAUseEquationAccess().getRightSquareBracketKeyword_0_2_3());
				}
			)?
			otherlv_6=':'
			{
				newLeafNode(otherlv_6, grammarAccess.getAUseEquationAccess().getColonKeyword_0_3());
			}
		)?
		otherlv_7='('
		{
			newLeafNode(otherlv_7, grammarAccess.getAUseEquationAccess().getLeftParenthesisKeyword_1());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getAUseEquationAccess().getOutputExprsAAlphaExpressionParserRuleCall_2_0_0());
					}
					lv_outputExprs_8_0=ruleAAlphaExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getAUseEquationRule());
						}
						add(
							$current,
							"outputExprs",
							lv_outputExprs_8_0,
							"alpha.Alpha.AAlphaExpression");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_9=','
				{
					newLeafNode(otherlv_9, grammarAccess.getAUseEquationAccess().getCommaKeyword_2_1_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getAUseEquationAccess().getOutputExprsAAlphaExpressionParserRuleCall_2_1_1_0());
						}
						lv_outputExprs_10_0=ruleAAlphaExpression
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getAUseEquationRule());
							}
							add(
								$current,
								"outputExprs",
								lv_outputExprs_10_0,
								"alpha.Alpha.AAlphaExpression");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
		)?
		otherlv_11=')'
		{
			newLeafNode(otherlv_11, grammarAccess.getAUseEquationAccess().getRightParenthesisKeyword_3());
		}
		this_OP_EQ_12=RULE_OP_EQ
		{
			newLeafNode(this_OP_EQ_12, grammarAccess.getAUseEquationAccess().getOP_EQTerminalRuleCall_4());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getAUseEquationRule());
					}
				}
				otherlv_13=RULE_ID
				{
					newLeafNode(otherlv_13, grammarAccess.getAUseEquationAccess().getSystemAAffineSystemCrossReference_5_0());
				}
			)
		)
		otherlv_14='['
		{
			newLeafNode(otherlv_14, grammarAccess.getAUseEquationAccess().getLeftSquareBracketKeyword_6());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getAUseEquationAccess().getCallParamsAIndexAffineExpressionListParserRuleCall_7_0());
				}
				lv_callParams_15_0=ruleAIndexAffineExpressionList
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getAUseEquationRule());
					}
					set(
						$current,
						"callParams",
						lv_callParams_15_0,
						"alpha.Alpha.AIndexAffineExpressionList");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_16=']'
		{
			newLeafNode(otherlv_16, grammarAccess.getAUseEquationAccess().getRightSquareBracketKeyword_8());
		}
		otherlv_17='('
		{
			newLeafNode(otherlv_17, grammarAccess.getAUseEquationAccess().getLeftParenthesisKeyword_9());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getAUseEquationAccess().getInputExprsAAlphaExpressionParserRuleCall_10_0_0());
					}
					lv_inputExprs_18_0=ruleAAlphaExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getAUseEquationRule());
						}
						add(
							$current,
							"inputExprs",
							lv_inputExprs_18_0,
							"alpha.Alpha.AAlphaExpression");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_19=','
				{
					newLeafNode(otherlv_19, grammarAccess.getAUseEquationAccess().getCommaKeyword_10_1_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getAUseEquationAccess().getInputExprsAAlphaExpressionParserRuleCall_10_1_1_0());
						}
						lv_inputExprs_20_0=ruleAAlphaExpression
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getAUseEquationRule());
							}
							add(
								$current,
								"inputExprs",
								lv_inputExprs_20_0,
								"alpha.Alpha.AAlphaExpression");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
		)?
		otherlv_21=')'
		{
			newLeafNode(otherlv_21, grammarAccess.getAUseEquationAccess().getRightParenthesisKeyword_11());
		}
		otherlv_22=';'
		{
			newLeafNode(otherlv_22, grammarAccess.getAUseEquationAccess().getSemicolonKeyword_12());
		}
	)
;

// Entry rule entryRuleAAlphaExpression
entryRuleAAlphaExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAAlphaExpressionRule()); }
	iv_ruleAAlphaExpression=ruleAAlphaExpression
	{ $current=$iv_ruleAAlphaExpression.current; }
	EOF;

// Rule AAlphaExpression
ruleAAlphaExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getAAlphaExpressionAccess().getAIfExpressionParserRuleCall_0());
		}
		this_AIfExpression_0=ruleAIfExpression
		{
			$current = $this_AIfExpression_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getAAlphaExpressionAccess().getARestrictExpressionParserRuleCall_1());
		}
		this_ARestrictExpression_1=ruleARestrictExpression
		{
			$current = $this_ARestrictExpression_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getAAlphaExpressionAccess().getAAutoRestrictExpressionParserRuleCall_2());
		}
		this_AAutoRestrictExpression_2=ruleAAutoRestrictExpression
		{
			$current = $this_AAutoRestrictExpression_2.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getAAlphaExpressionAccess().getAOrExpressionParserRuleCall_3());
		}
		this_AOrExpression_3=ruleAOrExpression
		{
			$current = $this_AOrExpression_3.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleAAlphabetsTerminalExpression
entryRuleAAlphabetsTerminalExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAAlphabetsTerminalExpressionRule()); }
	iv_ruleAAlphabetsTerminalExpression=ruleAAlphabetsTerminalExpression
	{ $current=$iv_ruleAAlphabetsTerminalExpression.current; }
	EOF;

// Rule AAlphabetsTerminalExpression
ruleAAlphabetsTerminalExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getAAlphabetsTerminalExpressionAccess().getAParanthesizedAlphabetsExpressionParserRuleCall_0());
		}
		this_AParanthesizedAlphabetsExpression_0=ruleAParanthesizedAlphabetsExpression
		{
			$current = $this_AParanthesizedAlphabetsExpression_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getAAlphabetsTerminalExpressionAccess().getACaseExpressionParserRuleCall_1());
		}
		this_ACaseExpression_1=ruleACaseExpression
		{
			$current = $this_ACaseExpression_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getAAlphabetsTerminalExpressionAccess().getAReduceExpressionParserRuleCall_2());
		}
		this_AReduceExpression_2=ruleAReduceExpression
		{
			$current = $this_AReduceExpression_2.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getAAlphabetsTerminalExpressionAccess().getAArgReduceExpressionParserRuleCall_3());
		}
		this_AArgReduceExpression_3=ruleAArgReduceExpression
		{
			$current = $this_AArgReduceExpression_3.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getAAlphabetsTerminalExpressionAccess().getAConvExpressionParserRuleCall_4());
		}
		this_AConvExpression_4=ruleAConvExpression
		{
			$current = $this_AConvExpression_4.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getAAlphabetsTerminalExpressionAccess().getAMultiArgExpressionParserRuleCall_5());
		}
		this_AMultiArgExpression_5=ruleAMultiArgExpression
		{
			$current = $this_AMultiArgExpression_5.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getAAlphabetsTerminalExpressionAccess().getAConstantExpressionParserRuleCall_6());
		}
		this_AConstantExpression_6=ruleAConstantExpression
		{
			$current = $this_AConstantExpression_6.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getAAlphabetsTerminalExpressionAccess().getAVariableExpressionParserRuleCall_7());
		}
		this_AVariableExpression_7=ruleAVariableExpression
		{
			$current = $this_AVariableExpression_7.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getAAlphabetsTerminalExpressionAccess().getAIndexExpressionParserRuleCall_8());
		}
		this_AIndexExpression_8=ruleAIndexExpression
		{
			$current = $this_AIndexExpression_8.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getAAlphabetsTerminalExpressionAccess().getAIndexExpressionInArrayNotationParserRuleCall_9());
		}
		this_AIndexExpressionInArrayNotation_9=ruleAIndexExpressionInArrayNotation
		{
			$current = $this_AIndexExpressionInArrayNotation_9.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getAAlphabetsTerminalExpressionAccess().getADependenceExpressionParserRuleCall_10());
		}
		this_ADependenceExpression_10=ruleADependenceExpression
		{
			$current = $this_ADependenceExpression_10.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getAAlphabetsTerminalExpressionAccess().getADependenceInArrayNotationParserRuleCall_11());
		}
		this_ADependenceInArrayNotation_11=ruleADependenceInArrayNotation
		{
			$current = $this_ADependenceInArrayNotation_11.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getAAlphabetsTerminalExpressionAccess().getASelectDependenceExpressionParserRuleCall_12());
		}
		this_ASelectDependenceExpression_12=ruleASelectDependenceExpression
		{
			$current = $this_ASelectDependenceExpression_12.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleAParanthesizedAlphabetsExpression
entryRuleAParanthesizedAlphabetsExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAParanthesizedAlphabetsExpressionRule()); }
	iv_ruleAParanthesizedAlphabetsExpression=ruleAParanthesizedAlphabetsExpression
	{ $current=$iv_ruleAParanthesizedAlphabetsExpression.current; }
	EOF;

// Rule AParanthesizedAlphabetsExpression
ruleAParanthesizedAlphabetsExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='('
		{
			newLeafNode(otherlv_0, grammarAccess.getAParanthesizedAlphabetsExpressionAccess().getLeftParenthesisKeyword_0());
		}
		{
			newCompositeNode(grammarAccess.getAParanthesizedAlphabetsExpressionAccess().getAAlphaExpressionParserRuleCall_1());
		}
		this_AAlphaExpression_1=ruleAAlphaExpression
		{
			$current = $this_AAlphaExpression_1.current;
			afterParserOrEnumRuleCall();
		}
		otherlv_2=')'
		{
			newLeafNode(otherlv_2, grammarAccess.getAParanthesizedAlphabetsExpressionAccess().getRightParenthesisKeyword_2());
		}
	)
;

// Entry rule entryRuleAOrExpression
entryRuleAOrExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAOrExpressionRule()); }
	iv_ruleAOrExpression=ruleAOrExpression
	{ $current=$iv_ruleAOrExpression.current; }
	EOF;

// Rule AOrExpression
ruleAOrExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getAOrExpressionAccess().getAAndExpressionParserRuleCall_0());
		}
		this_AAndExpression_0=ruleAAndExpression
		{
			$current = $this_AAndExpression_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				{
					$current = forceCreateModelElementAndSet(
						grammarAccess.getAOrExpressionAccess().getAOrExpressionLeftAction_1_0(),
						$current);
				}
			)
			(
				(
					(
						lv_operator_2_1=RULE_OP_OR
						{
							newLeafNode(lv_operator_2_1, grammarAccess.getAOrExpressionAccess().getOperatorOP_ORTerminalRuleCall_1_1_0_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getAOrExpressionRule());
							}
							setWithLastConsumed(
								$current,
								"operator",
								lv_operator_2_1,
								"alpha.Alpha.OP_OR");
						}
						    |
						lv_operator_2_2=RULE_OP_XOR
						{
							newLeafNode(lv_operator_2_2, grammarAccess.getAOrExpressionAccess().getOperatorOP_XORTerminalRuleCall_1_1_0_1());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getAOrExpressionRule());
							}
							setWithLastConsumed(
								$current,
								"operator",
								lv_operator_2_2,
								"alpha.Alpha.OP_XOR");
						}
					)
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getAOrExpressionAccess().getRightAAndExpressionParserRuleCall_1_2_0());
					}
					lv_right_3_0=ruleAAndExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getAOrExpressionRule());
						}
						set(
							$current,
							"right",
							lv_right_3_0,
							"alpha.Alpha.AAndExpression");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleAAndExpression
entryRuleAAndExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAAndExpressionRule()); }
	iv_ruleAAndExpression=ruleAAndExpression
	{ $current=$iv_ruleAAndExpression.current; }
	EOF;

// Rule AAndExpression
ruleAAndExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getAAndExpressionAccess().getARelationalExpressionParserRuleCall_0());
		}
		this_ARelationalExpression_0=ruleARelationalExpression
		{
			$current = $this_ARelationalExpression_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				{
					$current = forceCreateModelElementAndSet(
						grammarAccess.getAAndExpressionAccess().getAAndExpressionLeftAction_1_0(),
						$current);
				}
			)
			(
				(
					(
						lv_operator_2_1=RULE_OP_AND
						{
							newLeafNode(lv_operator_2_1, grammarAccess.getAAndExpressionAccess().getOperatorOP_ANDTerminalRuleCall_1_1_0_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getAAndExpressionRule());
							}
							setWithLastConsumed(
								$current,
								"operator",
								lv_operator_2_1,
								"alpha.Alpha.OP_AND");
						}
						    |
						lv_operator_2_2=RULE_OP_NAND
						{
							newLeafNode(lv_operator_2_2, grammarAccess.getAAndExpressionAccess().getOperatorOP_NANDTerminalRuleCall_1_1_0_1());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getAAndExpressionRule());
							}
							setWithLastConsumed(
								$current,
								"operator",
								lv_operator_2_2,
								"alpha.Alpha.OP_NAND");
						}
					)
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getAAndExpressionAccess().getRightARelationalExpressionParserRuleCall_1_2_0());
					}
					lv_right_3_0=ruleARelationalExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getAAndExpressionRule());
						}
						set(
							$current,
							"right",
							lv_right_3_0,
							"alpha.Alpha.ARelationalExpression");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleARelationalExpression
entryRuleARelationalExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getARelationalExpressionRule()); }
	iv_ruleARelationalExpression=ruleARelationalExpression
	{ $current=$iv_ruleARelationalExpression.current; }
	EOF;

// Rule ARelationalExpression
ruleARelationalExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getARelationalExpressionAccess().getAAdditiveExpressionParserRuleCall_0());
		}
		this_AAdditiveExpression_0=ruleAAdditiveExpression
		{
			$current = $this_AAdditiveExpression_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				{
					$current = forceCreateModelElementAndSet(
						grammarAccess.getARelationalExpressionAccess().getARelationalExpressionLeftAction_1_0(),
						$current);
				}
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getARelationalExpressionAccess().getOperatorRELATIONAL_OPParserRuleCall_1_1_0());
					}
					lv_operator_2_0=ruleRELATIONAL_OP
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getARelationalExpressionRule());
						}
						set(
							$current,
							"operator",
							lv_operator_2_0,
							"alpha.Alpha.RELATIONAL_OP");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getARelationalExpressionAccess().getRightAAdditiveExpressionParserRuleCall_1_2_0());
					}
					lv_right_3_0=ruleAAdditiveExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getARelationalExpressionRule());
						}
						set(
							$current,
							"right",
							lv_right_3_0,
							"alpha.Alpha.AAdditiveExpression");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleAAdditiveExpression
entryRuleAAdditiveExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAAdditiveExpressionRule()); }
	iv_ruleAAdditiveExpression=ruleAAdditiveExpression
	{ $current=$iv_ruleAAdditiveExpression.current; }
	EOF;

// Rule AAdditiveExpression
ruleAAdditiveExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getAAdditiveExpressionAccess().getAMultiplicativeExpressionParserRuleCall_0());
		}
		this_AMultiplicativeExpression_0=ruleAMultiplicativeExpression
		{
			$current = $this_AMultiplicativeExpression_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				{
					$current = forceCreateModelElementAndSet(
						grammarAccess.getAAdditiveExpressionAccess().getAAdditiveExpressionLeftAction_1_0(),
						$current);
				}
			)
			(
				(
					(
						lv_op_2_1=RULE_OP_PLUS
						{
							newLeafNode(lv_op_2_1, grammarAccess.getAAdditiveExpressionAccess().getOpOP_PLUSTerminalRuleCall_1_1_0_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getAAdditiveExpressionRule());
							}
							setWithLastConsumed(
								$current,
								"op",
								lv_op_2_1,
								"alpha.Alpha.OP_PLUS");
						}
						    |
						lv_op_2_2=RULE_OP_MINUS
						{
							newLeafNode(lv_op_2_2, grammarAccess.getAAdditiveExpressionAccess().getOpOP_MINUSTerminalRuleCall_1_1_0_1());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getAAdditiveExpressionRule());
							}
							setWithLastConsumed(
								$current,
								"op",
								lv_op_2_2,
								"alpha.Alpha.OP_MINUS");
						}
					)
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getAAdditiveExpressionAccess().getRightAMultiplicativeExpressionParserRuleCall_1_2_0());
					}
					lv_right_3_0=ruleAMultiplicativeExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getAAdditiveExpressionRule());
						}
						set(
							$current,
							"right",
							lv_right_3_0,
							"alpha.Alpha.AMultiplicativeExpression");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleAMultiplicativeExpression
entryRuleAMultiplicativeExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAMultiplicativeExpressionRule()); }
	iv_ruleAMultiplicativeExpression=ruleAMultiplicativeExpression
	{ $current=$iv_ruleAMultiplicativeExpression.current; }
	EOF;

// Rule AMultiplicativeExpression
ruleAMultiplicativeExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getAMultiplicativeExpressionAccess().getAMinMaxExpressionParserRuleCall_0());
		}
		this_AMinMaxExpression_0=ruleAMinMaxExpression
		{
			$current = $this_AMinMaxExpression_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				{
					$current = forceCreateModelElementAndSet(
						grammarAccess.getAMultiplicativeExpressionAccess().getAMultiplicativeExpressionLeftAction_1_0(),
						$current);
				}
			)
			(
				(
					(
						lv_op_2_1=RULE_OP_MUL
						{
							newLeafNode(lv_op_2_1, grammarAccess.getAMultiplicativeExpressionAccess().getOpOP_MULTerminalRuleCall_1_1_0_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getAMultiplicativeExpressionRule());
							}
							setWithLastConsumed(
								$current,
								"op",
								lv_op_2_1,
								"alpha.Alpha.OP_MUL");
						}
						    |
						lv_op_2_2=RULE_OP_DIV
						{
							newLeafNode(lv_op_2_2, grammarAccess.getAMultiplicativeExpressionAccess().getOpOP_DIVTerminalRuleCall_1_1_0_1());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getAMultiplicativeExpressionRule());
							}
							setWithLastConsumed(
								$current,
								"op",
								lv_op_2_2,
								"alpha.Alpha.OP_DIV");
						}
					)
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getAMultiplicativeExpressionAccess().getRightAMinMaxExpressionParserRuleCall_1_2_0());
					}
					lv_right_3_0=ruleAMinMaxExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getAMultiplicativeExpressionRule());
						}
						set(
							$current,
							"right",
							lv_right_3_0,
							"alpha.Alpha.AMinMaxExpression");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleAMinMaxExpression
entryRuleAMinMaxExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAMinMaxExpressionRule()); }
	iv_ruleAMinMaxExpression=ruleAMinMaxExpression
	{ $current=$iv_ruleAMinMaxExpression.current; }
	EOF;

// Rule AMinMaxExpression
ruleAMinMaxExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getAMinMaxExpressionAccess().getAUnaryOrTerminalExpressionParserRuleCall_0());
		}
		this_AUnaryOrTerminalExpression_0=ruleAUnaryOrTerminalExpression
		{
			$current = $this_AUnaryOrTerminalExpression_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				{
					$current = forceCreateModelElementAndSet(
						grammarAccess.getAMinMaxExpressionAccess().getAMinMaxExpressionLeftAction_1_0(),
						$current);
				}
			)
			(
				(
					(
						lv_op_2_1=RULE_OP_MIN
						{
							newLeafNode(lv_op_2_1, grammarAccess.getAMinMaxExpressionAccess().getOpOP_MINTerminalRuleCall_1_1_0_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getAMinMaxExpressionRule());
							}
							setWithLastConsumed(
								$current,
								"op",
								lv_op_2_1,
								"alpha.Alpha.OP_MIN");
						}
						    |
						lv_op_2_2=RULE_OP_MAX
						{
							newLeafNode(lv_op_2_2, grammarAccess.getAMinMaxExpressionAccess().getOpOP_MAXTerminalRuleCall_1_1_0_1());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getAMinMaxExpressionRule());
							}
							setWithLastConsumed(
								$current,
								"op",
								lv_op_2_2,
								"alpha.Alpha.OP_MAX");
						}
					)
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getAMinMaxExpressionAccess().getRightAUnaryOrTerminalExpressionParserRuleCall_1_2_0());
					}
					lv_right_3_0=ruleAUnaryOrTerminalExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getAMinMaxExpressionRule());
						}
						set(
							$current,
							"right",
							lv_right_3_0,
							"alpha.Alpha.AUnaryOrTerminalExpression");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleAUnaryOrTerminalExpression
entryRuleAUnaryOrTerminalExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAUnaryOrTerminalExpressionRule()); }
	iv_ruleAUnaryOrTerminalExpression=ruleAUnaryOrTerminalExpression
	{ $current=$iv_ruleAUnaryOrTerminalExpression.current; }
	EOF;

// Rule AUnaryOrTerminalExpression
ruleAUnaryOrTerminalExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getAUnaryOrTerminalExpressionAccess().getAUnaryExpressionParserRuleCall_0());
		}
		this_AUnaryExpression_0=ruleAUnaryExpression
		{
			$current = $this_AUnaryExpression_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getAUnaryOrTerminalExpressionAccess().getAAlphabetsTerminalExpressionParserRuleCall_1());
		}
		this_AAlphabetsTerminalExpression_1=ruleAAlphabetsTerminalExpression
		{
			$current = $this_AAlphabetsTerminalExpression_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleAUnaryExpression
entryRuleAUnaryExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAUnaryExpressionRule()); }
	iv_ruleAUnaryExpression=ruleAUnaryExpression
	{ $current=$iv_ruleAUnaryExpression.current; }
	EOF;

// Rule AUnaryExpression
ruleAUnaryExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getAUnaryExpressionAccess().getANotExpressionParserRuleCall_0());
		}
		this_ANotExpression_0=ruleANotExpression
		{
			$current = $this_ANotExpression_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getAUnaryExpressionAccess().getANegateExpressionParserRuleCall_1());
		}
		this_ANegateExpression_1=ruleANegateExpression
		{
			$current = $this_ANegateExpression_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleANotExpression
entryRuleANotExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getANotExpressionRule()); }
	iv_ruleANotExpression=ruleANotExpression
	{ $current=$iv_ruleANotExpression.current; }
	EOF;

// Rule ANotExpression
ruleANotExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_op_0_0='not'
				{
					newLeafNode(lv_op_0_0, grammarAccess.getANotExpressionAccess().getOpNotKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getANotExpressionRule());
					}
					setWithLastConsumed($current, "op", lv_op_0_0, "not");
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getANotExpressionAccess().getExprAAlphabetsTerminalExpressionParserRuleCall_1_0());
				}
				lv_expr_1_0=ruleAAlphabetsTerminalExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getANotExpressionRule());
					}
					set(
						$current,
						"expr",
						lv_expr_1_0,
						"alpha.Alpha.AAlphabetsTerminalExpression");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleANegateExpression
entryRuleANegateExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getANegateExpressionRule()); }
	iv_ruleANegateExpression=ruleANegateExpression
	{ $current=$iv_ruleANegateExpression.current; }
	EOF;

// Rule ANegateExpression
ruleANegateExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_op_0_0=RULE_OP_MINUS
				{
					newLeafNode(lv_op_0_0, grammarAccess.getANegateExpressionAccess().getOpOP_MINUSTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getANegateExpressionRule());
					}
					setWithLastConsumed(
						$current,
						"op",
						lv_op_0_0,
						"alpha.Alpha.OP_MINUS");
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getANegateExpressionAccess().getExprAAlphabetsTerminalExpressionParserRuleCall_1_0());
				}
				lv_expr_1_0=ruleAAlphabetsTerminalExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getANegateExpressionRule());
					}
					set(
						$current,
						"expr",
						lv_expr_1_0,
						"alpha.Alpha.AAlphabetsTerminalExpression");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleACaseExpression
entryRuleACaseExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getACaseExpressionRule()); }
	iv_ruleACaseExpression=ruleACaseExpression
	{ $current=$iv_ruleACaseExpression.current; }
	EOF;

// Rule ACaseExpression
ruleACaseExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='case'
		{
			newLeafNode(otherlv_0, grammarAccess.getACaseExpressionAccess().getCaseKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getACaseExpressionAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getACaseExpressionRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)?
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getACaseExpressionAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getACaseExpressionAccess().getExprsAAlphaExpressionParserRuleCall_3_0_0());
					}
					lv_exprs_3_0=ruleAAlphaExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getACaseExpressionRule());
						}
						add(
							$current,
							"exprs",
							lv_exprs_3_0,
							"alpha.Alpha.AAlphaExpression");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_4=';'
			{
				newLeafNode(otherlv_4, grammarAccess.getACaseExpressionAccess().getSemicolonKeyword_3_1());
			}
		)+
		otherlv_5='}'
		{
			newLeafNode(otherlv_5, grammarAccess.getACaseExpressionAccess().getRightCurlyBracketKeyword_4());
		}
	)
;

// Entry rule entryRuleADependenceExpression
entryRuleADependenceExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getADependenceExpressionRule()); }
	iv_ruleADependenceExpression=ruleADependenceExpression
	{ $current=$iv_ruleADependenceExpression.current; }
	EOF;

// Rule ADependenceExpression
ruleADependenceExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getADependenceExpressionAccess().getFunctionAFunctionParserRuleCall_0_0());
				}
				lv_function_0_0=ruleAFunction
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getADependenceExpressionRule());
					}
					set(
						$current,
						"function",
						lv_function_0_0,
						"alpha.Alpha.AFunction");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_1='@'
		{
			newLeafNode(otherlv_1, grammarAccess.getADependenceExpressionAccess().getCommercialAtKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getADependenceExpressionAccess().getExprAAlphabetsTerminalExpressionParserRuleCall_2_0());
				}
				lv_expr_2_0=ruleAAlphabetsTerminalExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getADependenceExpressionRule());
					}
					set(
						$current,
						"expr",
						lv_expr_2_0,
						"alpha.Alpha.AAlphabetsTerminalExpression");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleASelectDependenceExpression
entryRuleASelectDependenceExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getASelectDependenceExpressionRule()); }
	iv_ruleASelectDependenceExpression=ruleASelectDependenceExpression
	{ $current=$iv_ruleASelectDependenceExpression.current; }
	EOF;

// Rule ASelectDependenceExpression
ruleASelectDependenceExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='select'
		{
			newLeafNode(otherlv_0, grammarAccess.getASelectDependenceExpressionAccess().getSelectKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getASelectDependenceExpressionAccess().getRelationAPolyhedralObjectExpressionParserRuleCall_1_0());
				}
				lv_relation_1_0=ruleAPolyhedralObjectExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getASelectDependenceExpressionRule());
					}
					set(
						$current,
						"relation",
						lv_relation_1_0,
						"alpha.Alpha.APolyhedralObjectExpression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2='from'
		{
			newLeafNode(otherlv_2, grammarAccess.getASelectDependenceExpressionAccess().getFromKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getASelectDependenceExpressionAccess().getExprAAlphabetsTerminalExpressionParserRuleCall_3_0());
				}
				lv_expr_3_0=ruleAAlphabetsTerminalExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getASelectDependenceExpressionRule());
					}
					set(
						$current,
						"expr",
						lv_expr_3_0,
						"alpha.Alpha.AAlphabetsTerminalExpression");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleADependenceInArrayNotation
entryRuleADependenceInArrayNotation returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getADependenceInArrayNotationRule()); }
	iv_ruleADependenceInArrayNotation=ruleADependenceInArrayNotation
	{ $current=$iv_ruleADependenceInArrayNotation.current; }
	EOF;

// Rule ADependenceInArrayNotation
ruleADependenceInArrayNotation returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getADependenceInArrayNotationRule());
					}
				}
				otherlv_0=RULE_ID
				{
					newLeafNode(otherlv_0, grammarAccess.getADependenceInArrayNotationAccess().getVarAVariableCrossReference_0_0());
				}
			)
		)
		otherlv_1='['
		{
			newLeafNode(otherlv_1, grammarAccess.getADependenceInArrayNotationAccess().getLeftSquareBracketKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getADependenceInArrayNotationAccess().getDepAIndexAffineExpressionListParserRuleCall_2_0());
				}
				lv_dep_2_0=ruleAIndexAffineExpressionList
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getADependenceInArrayNotationRule());
					}
					set(
						$current,
						"dep",
						lv_dep_2_0,
						"alpha.Alpha.AIndexAffineExpressionList");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_3=']'
		{
			newLeafNode(otherlv_3, grammarAccess.getADependenceInArrayNotationAccess().getRightSquareBracketKeyword_3());
		}
	)
;

// Entry rule entryRuleAIfExpression
entryRuleAIfExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAIfExpressionRule()); }
	iv_ruleAIfExpression=ruleAIfExpression
	{ $current=$iv_ruleAIfExpression.current; }
	EOF;

// Rule AIfExpression
ruleAIfExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='if'
		{
			newLeafNode(otherlv_0, grammarAccess.getAIfExpressionAccess().getIfKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getAIfExpressionAccess().getCondAAlphaExpressionParserRuleCall_1_0());
				}
				lv_cond_1_0=ruleAAlphaExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getAIfExpressionRule());
					}
					set(
						$current,
						"cond",
						lv_cond_1_0,
						"alpha.Alpha.AAlphaExpression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2='then'
		{
			newLeafNode(otherlv_2, grammarAccess.getAIfExpressionAccess().getThenKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getAIfExpressionAccess().getThenAAlphaExpressionParserRuleCall_3_0());
				}
				lv_then_3_0=ruleAAlphaExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getAIfExpressionRule());
					}
					set(
						$current,
						"then",
						lv_then_3_0,
						"alpha.Alpha.AAlphaExpression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_4='else'
		{
			newLeafNode(otherlv_4, grammarAccess.getAIfExpressionAccess().getElseKeyword_4());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getAIfExpressionAccess().getElseAAlphaExpressionParserRuleCall_5_0());
				}
				lv_else_5_0=ruleAAlphaExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getAIfExpressionRule());
					}
					set(
						$current,
						"else",
						lv_else_5_0,
						"alpha.Alpha.AAlphaExpression");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleAIndexExpression
entryRuleAIndexExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAIndexExpressionRule()); }
	iv_ruleAIndexExpression=ruleAIndexExpression
	{ $current=$iv_ruleAIndexExpression.current; }
	EOF;

// Rule AIndexExpression
ruleAIndexExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='val('
		{
			newLeafNode(otherlv_0, grammarAccess.getAIndexExpressionAccess().getValKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getAIndexExpressionAccess().getIndexesAIndexListParserRuleCall_1_0());
				}
				lv_indexes_1_0=ruleAIndexList
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getAIndexExpressionRule());
					}
					set(
						$current,
						"indexes",
						lv_indexes_1_0,
						"alpha.Alpha.AIndexList");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2='->'
		{
			newLeafNode(otherlv_2, grammarAccess.getAIndexExpressionAccess().getHyphenMinusGreaterThanSignKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getAIndexExpressionAccess().getFuncIndexAffineExpressionTerminalParserRuleCall_3_0());
				}
				lv_func_3_0=ruleIndexAffineExpressionTerminal
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getAIndexExpressionRule());
					}
					set(
						$current,
						"func",
						lv_func_3_0,
						"alpha.Alpha.IndexAffineExpressionTerminal");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_4=')'
		{
			newLeafNode(otherlv_4, grammarAccess.getAIndexExpressionAccess().getRightParenthesisKeyword_4());
		}
	)
;

// Entry rule entryRuleAIndexExpressionInArrayNotation
entryRuleAIndexExpressionInArrayNotation returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAIndexExpressionInArrayNotationRule()); }
	iv_ruleAIndexExpressionInArrayNotation=ruleAIndexExpressionInArrayNotation
	{ $current=$iv_ruleAIndexExpressionInArrayNotation.current; }
	EOF;

// Rule AIndexExpressionInArrayNotation
ruleAIndexExpressionInArrayNotation returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='['
		{
			newLeafNode(otherlv_0, grammarAccess.getAIndexExpressionInArrayNotationAccess().getLeftSquareBracketKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getAIndexExpressionInArrayNotationAccess().getFuncIndexAffineExpressionTerminalParserRuleCall_1_0());
				}
				lv_func_1_0=ruleIndexAffineExpressionTerminal
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getAIndexExpressionInArrayNotationRule());
					}
					set(
						$current,
						"func",
						lv_func_1_0,
						"alpha.Alpha.IndexAffineExpressionTerminal");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2=']'
		{
			newLeafNode(otherlv_2, grammarAccess.getAIndexExpressionInArrayNotationAccess().getRightSquareBracketKeyword_2());
		}
	)
;

// Entry rule entryRuleAReduceExpression
entryRuleAReduceExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAReduceExpressionRule()); }
	iv_ruleAReduceExpression=ruleAReduceExpression
	{ $current=$iv_ruleAReduceExpression.current; }
	EOF;

// Rule AReduceExpression
ruleAReduceExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='reduce'
		{
			newLeafNode(otherlv_0, grammarAccess.getAReduceExpressionAccess().getReduceKeyword_0());
		}
		otherlv_1='('
		{
			newLeafNode(otherlv_1, grammarAccess.getAReduceExpressionAccess().getLeftParenthesisKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getAReduceExpressionAccess().getOpAReductionOperatorParserRuleCall_2_0());
				}
				lv_op_2_0=ruleAReductionOperator
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getAReduceExpressionRule());
					}
					set(
						$current,
						"op",
						lv_op_2_0,
						"alpha.Alpha.AReductionOperator");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_3=','
		{
			newLeafNode(otherlv_3, grammarAccess.getAReduceExpressionAccess().getCommaKeyword_3());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getAReduceExpressionAccess().getProjectionAFunctionParserRuleCall_4_0_0());
					}
					lv_projection_4_1=ruleAFunction
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getAReduceExpressionRule());
						}
						set(
							$current,
							"projection",
							lv_projection_4_1,
							"alpha.Alpha.AFunction");
						afterParserOrEnumRuleCall();
					}
					    |
					{
						newCompositeNode(grammarAccess.getAReduceExpressionAccess().getProjectionAFunctionInArrayNotationParserRuleCall_4_0_1());
					}
					lv_projection_4_2=ruleAFunctionInArrayNotation
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getAReduceExpressionRule());
						}
						set(
							$current,
							"projection",
							lv_projection_4_2,
							"alpha.Alpha.AFunctionInArrayNotation");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		otherlv_5=','
		{
			newLeafNode(otherlv_5, grammarAccess.getAReduceExpressionAccess().getCommaKeyword_5());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getAReduceExpressionAccess().getExprAAlphaExpressionParserRuleCall_6_0());
				}
				lv_expr_6_0=ruleAAlphaExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getAReduceExpressionRule());
					}
					set(
						$current,
						"expr",
						lv_expr_6_0,
						"alpha.Alpha.AAlphaExpression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_7=')'
		{
			newLeafNode(otherlv_7, grammarAccess.getAReduceExpressionAccess().getRightParenthesisKeyword_7());
		}
	)
;

// Entry rule entryRuleAArgReduceExpression
entryRuleAArgReduceExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAArgReduceExpressionRule()); }
	iv_ruleAArgReduceExpression=ruleAArgReduceExpression
	{ $current=$iv_ruleAArgReduceExpression.current; }
	EOF;

// Rule AArgReduceExpression
ruleAArgReduceExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='argreduce'
		{
			newLeafNode(otherlv_0, grammarAccess.getAArgReduceExpressionAccess().getArgreduceKeyword_0());
		}
		otherlv_1='('
		{
			newLeafNode(otherlv_1, grammarAccess.getAArgReduceExpressionAccess().getLeftParenthesisKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getAArgReduceExpressionAccess().getOpAReductionOperatorParserRuleCall_2_0());
				}
				lv_op_2_0=ruleAReductionOperator
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getAArgReduceExpressionRule());
					}
					set(
						$current,
						"op",
						lv_op_2_0,
						"alpha.Alpha.AReductionOperator");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_3=','
		{
			newLeafNode(otherlv_3, grammarAccess.getAArgReduceExpressionAccess().getCommaKeyword_3());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getAArgReduceExpressionAccess().getProjectionAFunctionParserRuleCall_4_0_0());
					}
					lv_projection_4_1=ruleAFunction
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getAArgReduceExpressionRule());
						}
						set(
							$current,
							"projection",
							lv_projection_4_1,
							"alpha.Alpha.AFunction");
						afterParserOrEnumRuleCall();
					}
					    |
					{
						newCompositeNode(grammarAccess.getAArgReduceExpressionAccess().getProjectionAFunctionInArrayNotationParserRuleCall_4_0_1());
					}
					lv_projection_4_2=ruleAFunctionInArrayNotation
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getAArgReduceExpressionRule());
						}
						set(
							$current,
							"projection",
							lv_projection_4_2,
							"alpha.Alpha.AFunctionInArrayNotation");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		otherlv_5=','
		{
			newLeafNode(otherlv_5, grammarAccess.getAArgReduceExpressionAccess().getCommaKeyword_5());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getAArgReduceExpressionAccess().getExprAAlphaExpressionParserRuleCall_6_0());
				}
				lv_expr_6_0=ruleAAlphaExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getAArgReduceExpressionRule());
					}
					set(
						$current,
						"expr",
						lv_expr_6_0,
						"alpha.Alpha.AAlphaExpression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_7=')'
		{
			newLeafNode(otherlv_7, grammarAccess.getAArgReduceExpressionAccess().getRightParenthesisKeyword_7());
		}
	)
;

// Entry rule entryRuleAConvExpression
entryRuleAConvExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAConvExpressionRule()); }
	iv_ruleAConvExpression=ruleAConvExpression
	{ $current=$iv_ruleAConvExpression.current; }
	EOF;

// Rule AConvExpression
ruleAConvExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='conv'
		{
			newLeafNode(otherlv_0, grammarAccess.getAConvExpressionAccess().getConvKeyword_0());
		}
		otherlv_1='('
		{
			newLeafNode(otherlv_1, grammarAccess.getAConvExpressionAccess().getLeftParenthesisKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getAConvExpressionAccess().getDomainAPolyhedralObjectExpressionParserRuleCall_2_0());
				}
				lv_domain_2_0=ruleAPolyhedralObjectExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getAConvExpressionRule());
					}
					set(
						$current,
						"domain",
						lv_domain_2_0,
						"alpha.Alpha.APolyhedralObjectExpression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_3=','
		{
			newLeafNode(otherlv_3, grammarAccess.getAConvExpressionAccess().getCommaKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getAConvExpressionAccess().getKernelAAlphaExpressionParserRuleCall_4_0());
				}
				lv_kernel_4_0=ruleAAlphaExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getAConvExpressionRule());
					}
					set(
						$current,
						"kernel",
						lv_kernel_4_0,
						"alpha.Alpha.AAlphaExpression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_5=','
		{
			newLeafNode(otherlv_5, grammarAccess.getAConvExpressionAccess().getCommaKeyword_5());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getAConvExpressionAccess().getDataAAlphaExpressionParserRuleCall_6_0());
				}
				lv_data_6_0=ruleAAlphaExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getAConvExpressionRule());
					}
					set(
						$current,
						"data",
						lv_data_6_0,
						"alpha.Alpha.AAlphaExpression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_7=')'
		{
			newLeafNode(otherlv_7, grammarAccess.getAConvExpressionAccess().getRightParenthesisKeyword_7());
		}
	)
;

// Entry rule entryRuleARestrictExpression
entryRuleARestrictExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getARestrictExpressionRule()); }
	iv_ruleARestrictExpression=ruleARestrictExpression
	{ $current=$iv_ruleARestrictExpression.current; }
	EOF;

// Rule ARestrictExpression
ruleARestrictExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getARestrictExpressionAccess().getDomainAPolyObjectInRestrictParserRuleCall_0_0());
				}
				lv_domain_0_0=ruleAPolyObjectInRestrict
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getARestrictExpressionRule());
					}
					set(
						$current,
						"domain",
						lv_domain_0_0,
						"alpha.Alpha.APolyObjectInRestrict");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_1=':'
		{
			newLeafNode(otherlv_1, grammarAccess.getARestrictExpressionAccess().getColonKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getARestrictExpressionAccess().getExprAAlphaExpressionParserRuleCall_2_0());
				}
				lv_expr_2_0=ruleAAlphaExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getARestrictExpressionRule());
					}
					set(
						$current,
						"expr",
						lv_expr_2_0,
						"alpha.Alpha.AAlphaExpression");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleAPolyObjectInRestrict
entryRuleAPolyObjectInRestrict returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAPolyObjectInRestrictRule()); }
	iv_ruleAPolyObjectInRestrict=ruleAPolyObjectInRestrict
	{ $current=$iv_ruleAPolyObjectInRestrict.current; }
	EOF;

// Rule APolyObjectInRestrict
ruleAPolyObjectInRestrict returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getAPolyObjectInRestrictAccess().getAISLSetParserRuleCall_0());
		}
		this_AISLSet_0=ruleAISLSet
		{
			$current = $this_AISLSet_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getAPolyObjectInRestrictAccess().getAISLRelationParserRuleCall_1());
		}
		this_AISLRelation_1=ruleAISLRelation
		{
			$current = $this_AISLRelation_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getAPolyObjectInRestrictAccess().getADeclaredObjectParserRuleCall_2());
		}
		this_ADeclaredObject_2=ruleADeclaredObject
		{
			$current = $this_ADeclaredObject_2.current;
			afterParserOrEnumRuleCall();
		}
		    |
		(
			(ruleAVariableDomain)=>
			{
				newCompositeNode(grammarAccess.getAPolyObjectInRestrictAccess().getAVariableDomainParserRuleCall_3());
			}
			this_AVariableDomain_3=ruleAVariableDomain
			{
				$current = $this_AVariableDomain_3.current;
				afterParserOrEnumRuleCall();
			}
		)
		    |
		(
			otherlv_4='{'
			{
				newLeafNode(otherlv_4, grammarAccess.getAPolyObjectInRestrictAccess().getLeftCurlyBracketKeyword_4_0());
			}
			{
				newCompositeNode(grammarAccess.getAPolyObjectInRestrictAccess().getAPolyhedralObjectExpressionParserRuleCall_4_1());
			}
			this_APolyhedralObjectExpression_5=ruleAPolyhedralObjectExpression
			{
				$current = $this_APolyhedralObjectExpression_5.current;
				afterParserOrEnumRuleCall();
			}
			otherlv_6='}'
			{
				newLeafNode(otherlv_6, grammarAccess.getAPolyObjectInRestrictAccess().getRightCurlyBracketKeyword_4_2());
			}
		)
	)
;

// Entry rule entryRuleAAutoRestrictExpression
entryRuleAAutoRestrictExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAAutoRestrictExpressionRule()); }
	iv_ruleAAutoRestrictExpression=ruleAAutoRestrictExpression
	{ $current=$iv_ruleAAutoRestrictExpression.current; }
	EOF;

// Rule AAutoRestrictExpression
ruleAAutoRestrictExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='auto'
		{
			newLeafNode(otherlv_0, grammarAccess.getAAutoRestrictExpressionAccess().getAutoKeyword_0());
		}
		otherlv_1=':'
		{
			newLeafNode(otherlv_1, grammarAccess.getAAutoRestrictExpressionAccess().getColonKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getAAutoRestrictExpressionAccess().getExprAAlphaExpressionParserRuleCall_2_0());
				}
				lv_expr_2_0=ruleAAlphaExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getAAutoRestrictExpressionRule());
					}
					set(
						$current,
						"expr",
						lv_expr_2_0,
						"alpha.Alpha.AAlphaExpression");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleAVariableExpression
entryRuleAVariableExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAVariableExpressionRule()); }
	iv_ruleAVariableExpression=ruleAVariableExpression
	{ $current=$iv_ruleAVariableExpression.current; }
	EOF;

// Rule AVariableExpression
ruleAVariableExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getAVariableExpressionRule());
				}
			}
			otherlv_0=RULE_ID
			{
				newLeafNode(otherlv_0, grammarAccess.getAVariableExpressionAccess().getVarAVariableCrossReference_0());
			}
		)
	)
;

// Entry rule entryRuleAConstantExpression
entryRuleAConstantExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAConstantExpressionRule()); }
	iv_ruleAConstantExpression=ruleAConstantExpression
	{ $current=$iv_ruleAConstantExpression.current; }
	EOF;

// Rule AConstantExpression
ruleAConstantExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getAConstantExpressionAccess().getABooleanExpressionParserRuleCall_0());
		}
		this_ABooleanExpression_0=ruleABooleanExpression
		{
			$current = $this_ABooleanExpression_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getAConstantExpressionAccess().getARealExpressionParserRuleCall_1());
		}
		this_ARealExpression_1=ruleARealExpression
		{
			$current = $this_ARealExpression_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getAConstantExpressionAccess().getAIntegerExpressionParserRuleCall_2());
		}
		this_AIntegerExpression_2=ruleAIntegerExpression
		{
			$current = $this_AIntegerExpression_2.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleABooleanExpression
entryRuleABooleanExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getABooleanExpressionRule()); }
	iv_ruleABooleanExpression=ruleABooleanExpression
	{ $current=$iv_ruleABooleanExpression.current; }
	EOF;

// Rule ABooleanExpression
ruleABooleanExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			lv_value_0_0=RULE_BOOLEAN
			{
				newLeafNode(lv_value_0_0, grammarAccess.getABooleanExpressionAccess().getValueBOOLEANTerminalRuleCall_0());
			}
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getABooleanExpressionRule());
				}
				setWithLastConsumed(
					$current,
					"value",
					lv_value_0_0,
					"alpha.Alpha.BOOLEAN");
			}
		)
	)
;

// Entry rule entryRuleAIntegerExpression
entryRuleAIntegerExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAIntegerExpressionRule()); }
	iv_ruleAIntegerExpression=ruleAIntegerExpression
	{ $current=$iv_ruleAIntegerExpression.current; }
	EOF;

// Rule AIntegerExpression
ruleAIntegerExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			lv_value_0_0=RULE_INT
			{
				newLeafNode(lv_value_0_0, grammarAccess.getAIntegerExpressionAccess().getValueINTTerminalRuleCall_0());
			}
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getAIntegerExpressionRule());
				}
				setWithLastConsumed(
					$current,
					"value",
					lv_value_0_0,
					"org.eclipse.xtext.common.Terminals.INT");
			}
		)
	)
;

// Entry rule entryRuleARealExpression
entryRuleARealExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getARealExpressionRule()); }
	iv_ruleARealExpression=ruleARealExpression
	{ $current=$iv_ruleARealExpression.current; }
	EOF;

// Rule ARealExpression
ruleARealExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			lv_value_0_0=RULE_REAL
			{
				newLeafNode(lv_value_0_0, grammarAccess.getARealExpressionAccess().getValueREALTerminalRuleCall_0());
			}
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getARealExpressionRule());
				}
				setWithLastConsumed(
					$current,
					"value",
					lv_value_0_0,
					"alpha.Alpha.REAL");
			}
		)
	)
;

// Entry rule entryRuleAMultiArgExpression
entryRuleAMultiArgExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAMultiArgExpressionRule()); }
	iv_ruleAMultiArgExpression=ruleAMultiArgExpression
	{ $current=$iv_ruleAMultiArgExpression.current; }
	EOF;

// Rule AMultiArgExpression
ruleAMultiArgExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getAMultiArgExpressionAccess().getAMultiArgArithmeticExpressionParserRuleCall_0());
		}
		this_AMultiArgArithmeticExpression_0=ruleAMultiArgArithmeticExpression
		{
			$current = $this_AMultiArgArithmeticExpression_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getAMultiArgExpressionAccess().getAMultiArgLogicalExpressionParserRuleCall_1());
		}
		this_AMultiArgLogicalExpression_1=ruleAMultiArgLogicalExpression
		{
			$current = $this_AMultiArgLogicalExpression_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getAMultiArgExpressionAccess().getAExternalFunctionCallParserRuleCall_2());
		}
		this_AExternalFunctionCall_2=ruleAExternalFunctionCall
		{
			$current = $this_AExternalFunctionCall_2.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleAMultiArgArithmeticExpression
entryRuleAMultiArgArithmeticExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAMultiArgArithmeticExpressionRule()); }
	iv_ruleAMultiArgArithmeticExpression=ruleAMultiArgArithmeticExpression
	{ $current=$iv_ruleAMultiArgArithmeticExpression.current; }
	EOF;

// Rule AMultiArgArithmeticExpression
ruleAMultiArgArithmeticExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getAMultiArgArithmeticExpressionAccess().getOpARITHMETIC_REDUCTION_OPParserRuleCall_0_0());
				}
				lv_op_0_0=ruleARITHMETIC_REDUCTION_OP
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getAMultiArgArithmeticExpressionRule());
					}
					set(
						$current,
						"op",
						lv_op_0_0,
						"alpha.Alpha.ARITHMETIC_REDUCTION_OP");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_1='('
		{
			newLeafNode(otherlv_1, grammarAccess.getAMultiArgArithmeticExpressionAccess().getLeftParenthesisKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getAMultiArgArithmeticExpressionAccess().getExprsAAlphaExpressionParserRuleCall_2_0());
				}
				lv_exprs_2_0=ruleAAlphaExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getAMultiArgArithmeticExpressionRule());
					}
					add(
						$current,
						"exprs",
						lv_exprs_2_0,
						"alpha.Alpha.AAlphaExpression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_3=','
			{
				newLeafNode(otherlv_3, grammarAccess.getAMultiArgArithmeticExpressionAccess().getCommaKeyword_3_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getAMultiArgArithmeticExpressionAccess().getExprsAAlphaExpressionParserRuleCall_3_1_0());
					}
					lv_exprs_4_0=ruleAAlphaExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getAMultiArgArithmeticExpressionRule());
						}
						add(
							$current,
							"exprs",
							lv_exprs_4_0,
							"alpha.Alpha.AAlphaExpression");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)+
		otherlv_5=')'
		{
			newLeafNode(otherlv_5, grammarAccess.getAMultiArgArithmeticExpressionAccess().getRightParenthesisKeyword_4());
		}
	)
;

// Entry rule entryRuleAMultiArgLogicalExpression
entryRuleAMultiArgLogicalExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAMultiArgLogicalExpressionRule()); }
	iv_ruleAMultiArgLogicalExpression=ruleAMultiArgLogicalExpression
	{ $current=$iv_ruleAMultiArgLogicalExpression.current; }
	EOF;

// Rule AMultiArgLogicalExpression
ruleAMultiArgLogicalExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getAMultiArgLogicalExpressionAccess().getOpLOGICAL_REDUCTION_OPParserRuleCall_0_0());
				}
				lv_op_0_0=ruleLOGICAL_REDUCTION_OP
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getAMultiArgLogicalExpressionRule());
					}
					set(
						$current,
						"op",
						lv_op_0_0,
						"alpha.Alpha.LOGICAL_REDUCTION_OP");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_1='('
		{
			newLeafNode(otherlv_1, grammarAccess.getAMultiArgLogicalExpressionAccess().getLeftParenthesisKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getAMultiArgLogicalExpressionAccess().getExprsAAlphaExpressionParserRuleCall_2_0());
				}
				lv_exprs_2_0=ruleAAlphaExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getAMultiArgLogicalExpressionRule());
					}
					add(
						$current,
						"exprs",
						lv_exprs_2_0,
						"alpha.Alpha.AAlphaExpression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_3=','
			{
				newLeafNode(otherlv_3, grammarAccess.getAMultiArgLogicalExpressionAccess().getCommaKeyword_3_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getAMultiArgLogicalExpressionAccess().getExprsAAlphaExpressionParserRuleCall_3_1_0());
					}
					lv_exprs_4_0=ruleAAlphaExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getAMultiArgLogicalExpressionRule());
						}
						add(
							$current,
							"exprs",
							lv_exprs_4_0,
							"alpha.Alpha.AAlphaExpression");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)+
		otherlv_5=')'
		{
			newLeafNode(otherlv_5, grammarAccess.getAMultiArgLogicalExpressionAccess().getRightParenthesisKeyword_4());
		}
	)
;

// Entry rule entryRuleAExternalFunctionCall
entryRuleAExternalFunctionCall returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAExternalFunctionCallRule()); }
	iv_ruleAExternalFunctionCall=ruleAExternalFunctionCall
	{ $current=$iv_ruleAExternalFunctionCall.current; }
	EOF;

// Rule AExternalFunctionCall
ruleAExternalFunctionCall returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getAExternalFunctionCallRule());
					}
				}
				otherlv_0=RULE_ID
				{
					newLeafNode(otherlv_0, grammarAccess.getAExternalFunctionCallAccess().getFuncAExternalFunctionCrossReference_0_0());
				}
			)
		)
		otherlv_1='('
		{
			newLeafNode(otherlv_1, grammarAccess.getAExternalFunctionCallAccess().getLeftParenthesisKeyword_1());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getAExternalFunctionCallAccess().getExprsAAlphaExpressionParserRuleCall_2_0_0());
					}
					lv_exprs_2_0=ruleAAlphaExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getAExternalFunctionCallRule());
						}
						add(
							$current,
							"exprs",
							lv_exprs_2_0,
							"alpha.Alpha.AAlphaExpression");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_3=','
				{
					newLeafNode(otherlv_3, grammarAccess.getAExternalFunctionCallAccess().getCommaKeyword_2_1_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getAExternalFunctionCallAccess().getExprsAAlphaExpressionParserRuleCall_2_1_1_0());
						}
						lv_exprs_4_0=ruleAAlphaExpression
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getAExternalFunctionCallRule());
							}
							add(
								$current,
								"exprs",
								lv_exprs_4_0,
								"alpha.Alpha.AAlphaExpression");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
		)?
		otherlv_5=')'
		{
			newLeafNode(otherlv_5, grammarAccess.getAExternalFunctionCallAccess().getRightParenthesisKeyword_3());
		}
	)
;

// Entry rule entryRuleIndexAffineExpression
entryRuleIndexAffineExpression returns [String current=null]:
	{ newCompositeNode(grammarAccess.getIndexAffineExpressionRule()); }
	iv_ruleIndexAffineExpression=ruleIndexAffineExpression
	{ $current=$iv_ruleIndexAffineExpression.current.getText(); }
	EOF;

// Rule IndexAffineExpression
ruleIndexAffineExpression returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getIndexAffineExpressionAccess().getIndexAffineExpressionTerminalParserRuleCall_0());
		}
		this_IndexAffineExpressionTerminal_0=ruleIndexAffineExpressionTerminal
		{
			$current.merge(this_IndexAffineExpressionTerminal_0);
		}
		{
			afterParserOrEnumRuleCall();
		}
		(
			(
				this_OP_PLUS_1=RULE_OP_PLUS
				{
					$current.merge(this_OP_PLUS_1);
				}
				{
					newLeafNode(this_OP_PLUS_1, grammarAccess.getIndexAffineExpressionAccess().getOP_PLUSTerminalRuleCall_1_0_0());
				}
				    |
				this_OP_MINUS_2=RULE_OP_MINUS
				{
					$current.merge(this_OP_MINUS_2);
				}
				{
					newLeafNode(this_OP_MINUS_2, grammarAccess.getIndexAffineExpressionAccess().getOP_MINUSTerminalRuleCall_1_0_1());
				}
			)
			{
				newCompositeNode(grammarAccess.getIndexAffineExpressionAccess().getIndexAffineExpressionTerminalParserRuleCall_1_1());
			}
			this_IndexAffineExpressionTerminal_3=ruleIndexAffineExpressionTerminal
			{
				$current.merge(this_IndexAffineExpressionTerminal_3);
			}
			{
				afterParserOrEnumRuleCall();
			}
		)*
	)
;

// Entry rule entryRuleIndexAffineExpressionTerminal
entryRuleIndexAffineExpressionTerminal returns [String current=null]:
	{ newCompositeNode(grammarAccess.getIndexAffineExpressionTerminalRule()); }
	iv_ruleIndexAffineExpressionTerminal=ruleIndexAffineExpressionTerminal
	{ $current=$iv_ruleIndexAffineExpressionTerminal.current.getText(); }
	EOF;

// Rule IndexAffineExpressionTerminal
ruleIndexAffineExpressionTerminal returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			this_OP_MINUS_0=RULE_OP_MINUS
			{
				$current.merge(this_OP_MINUS_0);
			}
			{
				newLeafNode(this_OP_MINUS_0, grammarAccess.getIndexAffineExpressionTerminalAccess().getOP_MINUSTerminalRuleCall_0());
			}
		)?
		(
			this_INT_1=RULE_INT
			{
				$current.merge(this_INT_1);
			}
			{
				newLeafNode(this_INT_1, grammarAccess.getIndexAffineExpressionTerminalAccess().getINTTerminalRuleCall_1_0());
			}
			    |
			(
				(
					this_INT_2=RULE_INT
					{
						$current.merge(this_INT_2);
					}
					{
						newLeafNode(this_INT_2, grammarAccess.getIndexAffineExpressionTerminalAccess().getINTTerminalRuleCall_1_1_0());
					}
				)?
				{
					newCompositeNode(grammarAccess.getIndexAffineExpressionTerminalAccess().getIndexNameParserRuleCall_1_1_1());
				}
				this_IndexName_3=ruleIndexName
				{
					$current.merge(this_IndexName_3);
				}
				{
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleAIndexAffineExpressionList
entryRuleAIndexAffineExpressionList returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAIndexAffineExpressionListRule()); }
	iv_ruleAIndexAffineExpressionList=ruleAIndexAffineExpressionList
	{ $current=$iv_ruleAIndexAffineExpressionList.current; }
	EOF;

// Rule AIndexAffineExpressionList
ruleAIndexAffineExpressionList returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getAIndexAffineExpressionListAccess().getAIndexAffineExpressionListAction_0(),
					$current);
			}
		)
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getAIndexAffineExpressionListAccess().getExprsIndexAffineExpressionParserRuleCall_1_0_0());
					}
					lv_exprs_1_0=ruleIndexAffineExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getAIndexAffineExpressionListRule());
						}
						add(
							$current,
							"exprs",
							lv_exprs_1_0,
							"alpha.Alpha.IndexAffineExpression");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_2=','
				{
					newLeafNode(otherlv_2, grammarAccess.getAIndexAffineExpressionListAccess().getCommaKeyword_1_1_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getAIndexAffineExpressionListAccess().getExprsIndexAffineExpressionParserRuleCall_1_1_1_0());
						}
						lv_exprs_3_0=ruleIndexAffineExpression
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getAIndexAffineExpressionListRule());
							}
							add(
								$current,
								"exprs",
								lv_exprs_3_0,
								"alpha.Alpha.IndexAffineExpression");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
		)?
	)
;

// Entry rule entryRuleAFunction
entryRuleAFunction returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAFunctionRule()); }
	iv_ruleAFunction=ruleAFunction
	{ $current=$iv_ruleAFunction.current; }
	EOF;

// Rule AFunction
ruleAFunction returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='('
		{
			newLeafNode(otherlv_0, grammarAccess.getAFunctionAccess().getLeftParenthesisKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getAFunctionAccess().getIndexesAIndexListParserRuleCall_1_0());
				}
				lv_indexes_1_0=ruleAIndexList
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getAFunctionRule());
					}
					set(
						$current,
						"indexes",
						lv_indexes_1_0,
						"alpha.Alpha.AIndexList");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2='->'
		{
			newLeafNode(otherlv_2, grammarAccess.getAFunctionAccess().getHyphenMinusGreaterThanSignKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getAFunctionAccess().getFuncAIndexAffineExpressionListParserRuleCall_3_0());
				}
				lv_func_3_0=ruleAIndexAffineExpressionList
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getAFunctionRule());
					}
					set(
						$current,
						"func",
						lv_func_3_0,
						"alpha.Alpha.AIndexAffineExpressionList");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_4=')'
		{
			newLeafNode(otherlv_4, grammarAccess.getAFunctionAccess().getRightParenthesisKeyword_4());
		}
	)
;

// Entry rule entryRuleAFunctionInArrayNotation
entryRuleAFunctionInArrayNotation returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAFunctionInArrayNotationRule()); }
	iv_ruleAFunctionInArrayNotation=ruleAFunctionInArrayNotation
	{ $current=$iv_ruleAFunctionInArrayNotation.current; }
	EOF;

// Rule AFunctionInArrayNotation
ruleAFunctionInArrayNotation returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='['
		{
			newLeafNode(otherlv_0, grammarAccess.getAFunctionInArrayNotationAccess().getLeftSquareBracketKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getAFunctionInArrayNotationAccess().getNewIdsAIndexAffineExpressionListParserRuleCall_1_0());
				}
				lv_newIds_1_0=ruleAIndexAffineExpressionList
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getAFunctionInArrayNotationRule());
					}
					set(
						$current,
						"newIds",
						lv_newIds_1_0,
						"alpha.Alpha.AIndexAffineExpressionList");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2=']'
		{
			newLeafNode(otherlv_2, grammarAccess.getAFunctionInArrayNotationAccess().getRightSquareBracketKeyword_2());
		}
	)
;

// Entry rule entryRuleAReductionOperator
entryRuleAReductionOperator returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAReductionOperatorRule()); }
	iv_ruleAReductionOperator=ruleAReductionOperator
	{ $current=$iv_ruleAReductionOperator.current; }
	EOF;

// Rule AReductionOperator
ruleAReductionOperator returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getAReductionOperatorRule());
					}
				}
				otherlv_0=RULE_ID
				{
					newLeafNode(otherlv_0, grammarAccess.getAReductionOperatorAccess().getOpAExternalFunctionCrossReference_0_0());
				}
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getAReductionOperatorAccess().getBuiltinREDUCTION_OPParserRuleCall_1_0());
				}
				lv_builtin_1_0=ruleREDUCTION_OP
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getAReductionOperatorRule());
					}
					set(
						$current,
						"builtin",
						lv_builtin_1_0,
						"alpha.Alpha.REDUCTION_OP");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleREDUCTION_OP
entryRuleREDUCTION_OP returns [String current=null]:
	{ newCompositeNode(grammarAccess.getREDUCTION_OPRule()); }
	iv_ruleREDUCTION_OP=ruleREDUCTION_OP
	{ $current=$iv_ruleREDUCTION_OP.current.getText(); }
	EOF;

// Rule REDUCTION_OP
ruleREDUCTION_OP returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getREDUCTION_OPAccess().getARITHMETIC_REDUCTION_OPParserRuleCall_0());
		}
		this_ARITHMETIC_REDUCTION_OP_0=ruleARITHMETIC_REDUCTION_OP
		{
			$current.merge(this_ARITHMETIC_REDUCTION_OP_0);
		}
		{
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getREDUCTION_OPAccess().getLOGICAL_REDUCTION_OPParserRuleCall_1());
		}
		this_LOGICAL_REDUCTION_OP_1=ruleLOGICAL_REDUCTION_OP
		{
			$current.merge(this_LOGICAL_REDUCTION_OP_1);
		}
		{
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleARITHMETIC_REDUCTION_OP
entryRuleARITHMETIC_REDUCTION_OP returns [String current=null]:
	{ newCompositeNode(grammarAccess.getARITHMETIC_REDUCTION_OPRule()); }
	iv_ruleARITHMETIC_REDUCTION_OP=ruleARITHMETIC_REDUCTION_OP
	{ $current=$iv_ruleARITHMETIC_REDUCTION_OP.current.getText(); }
	EOF;

// Rule ARITHMETIC_REDUCTION_OP
ruleARITHMETIC_REDUCTION_OP returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		this_OP_MAX_0=RULE_OP_MAX
		{
			$current.merge(this_OP_MAX_0);
		}
		{
			newLeafNode(this_OP_MAX_0, grammarAccess.getARITHMETIC_REDUCTION_OPAccess().getOP_MAXTerminalRuleCall_0());
		}
		    |
		this_OP_MIN_1=RULE_OP_MIN
		{
			$current.merge(this_OP_MIN_1);
		}
		{
			newLeafNode(this_OP_MIN_1, grammarAccess.getARITHMETIC_REDUCTION_OPAccess().getOP_MINTerminalRuleCall_1());
		}
		    |
		this_OP_MUL_2=RULE_OP_MUL
		{
			$current.merge(this_OP_MUL_2);
		}
		{
			newLeafNode(this_OP_MUL_2, grammarAccess.getARITHMETIC_REDUCTION_OPAccess().getOP_MULTerminalRuleCall_2());
		}
		    |
		this_OP_PLUS_3=RULE_OP_PLUS
		{
			$current.merge(this_OP_PLUS_3);
		}
		{
			newLeafNode(this_OP_PLUS_3, grammarAccess.getARITHMETIC_REDUCTION_OPAccess().getOP_PLUSTerminalRuleCall_3());
		}
	)
;

// Entry rule entryRuleLOGICAL_REDUCTION_OP
entryRuleLOGICAL_REDUCTION_OP returns [String current=null]:
	{ newCompositeNode(grammarAccess.getLOGICAL_REDUCTION_OPRule()); }
	iv_ruleLOGICAL_REDUCTION_OP=ruleLOGICAL_REDUCTION_OP
	{ $current=$iv_ruleLOGICAL_REDUCTION_OP.current.getText(); }
	EOF;

// Rule LOGICAL_REDUCTION_OP
ruleLOGICAL_REDUCTION_OP returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		this_OP_AND_0=RULE_OP_AND
		{
			$current.merge(this_OP_AND_0);
		}
		{
			newLeafNode(this_OP_AND_0, grammarAccess.getLOGICAL_REDUCTION_OPAccess().getOP_ANDTerminalRuleCall_0());
		}
		    |
		this_OP_OR_1=RULE_OP_OR
		{
			$current.merge(this_OP_OR_1);
		}
		{
			newLeafNode(this_OP_OR_1, grammarAccess.getLOGICAL_REDUCTION_OPAccess().getOP_ORTerminalRuleCall_1());
		}
		    |
		this_OP_XOR_2=RULE_OP_XOR
		{
			$current.merge(this_OP_XOR_2);
		}
		{
			newLeafNode(this_OP_XOR_2, grammarAccess.getLOGICAL_REDUCTION_OPAccess().getOP_XORTerminalRuleCall_2());
		}
	)
;

// Entry rule entryRuleARITHMETIC_NONREDUCTION_OP
entryRuleARITHMETIC_NONREDUCTION_OP returns [String current=null]:
	{ newCompositeNode(grammarAccess.getARITHMETIC_NONREDUCTION_OPRule()); }
	iv_ruleARITHMETIC_NONREDUCTION_OP=ruleARITHMETIC_NONREDUCTION_OP
	{ $current=$iv_ruleARITHMETIC_NONREDUCTION_OP.current.getText(); }
	EOF;

// Rule ARITHMETIC_NONREDUCTION_OP
ruleARITHMETIC_NONREDUCTION_OP returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		this_OP_MINUS_0=RULE_OP_MINUS
		{
			$current.merge(this_OP_MINUS_0);
		}
		{
			newLeafNode(this_OP_MINUS_0, grammarAccess.getARITHMETIC_NONREDUCTION_OPAccess().getOP_MINUSTerminalRuleCall_0());
		}
		    |
		this_OP_DIV_1=RULE_OP_DIV
		{
			$current.merge(this_OP_DIV_1);
		}
		{
			newLeafNode(this_OP_DIV_1, grammarAccess.getARITHMETIC_NONREDUCTION_OPAccess().getOP_DIVTerminalRuleCall_1());
		}
		    |
		this_OP_MOD_2=RULE_OP_MOD
		{
			$current.merge(this_OP_MOD_2);
		}
		{
			newLeafNode(this_OP_MOD_2, grammarAccess.getARITHMETIC_NONREDUCTION_OPAccess().getOP_MODTerminalRuleCall_2());
		}
	)
;

// Entry rule entryRuleLOGICAL_NONREDUCTION_OP
entryRuleLOGICAL_NONREDUCTION_OP returns [String current=null]:
	{ newCompositeNode(grammarAccess.getLOGICAL_NONREDUCTION_OPRule()); }
	iv_ruleLOGICAL_NONREDUCTION_OP=ruleLOGICAL_NONREDUCTION_OP
	{ $current=$iv_ruleLOGICAL_NONREDUCTION_OP.current.getText(); }
	EOF;

// Rule LOGICAL_NONREDUCTION_OP
ruleLOGICAL_NONREDUCTION_OP returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	this_OP_NAND_0=RULE_OP_NAND
	{
		$current.merge(this_OP_NAND_0);
	}
	{
		newLeafNode(this_OP_NAND_0, grammarAccess.getLOGICAL_NONREDUCTION_OPAccess().getOP_NANDTerminalRuleCall());
	}
;

// Entry rule entryRuleRELATIONAL_OP
entryRuleRELATIONAL_OP returns [String current=null]:
	{ newCompositeNode(grammarAccess.getRELATIONAL_OPRule()); }
	iv_ruleRELATIONAL_OP=ruleRELATIONAL_OP
	{ $current=$iv_ruleRELATIONAL_OP.current.getText(); }
	EOF;

// Rule RELATIONAL_OP
ruleRELATIONAL_OP returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		this_OP_EQ_0=RULE_OP_EQ
		{
			$current.merge(this_OP_EQ_0);
		}
		{
			newLeafNode(this_OP_EQ_0, grammarAccess.getRELATIONAL_OPAccess().getOP_EQTerminalRuleCall_0());
		}
		    |
		this_OP_GE_1=RULE_OP_GE
		{
			$current.merge(this_OP_GE_1);
		}
		{
			newLeafNode(this_OP_GE_1, grammarAccess.getRELATIONAL_OPAccess().getOP_GETerminalRuleCall_1());
		}
		    |
		this_OP_GT_2=RULE_OP_GT
		{
			$current.merge(this_OP_GT_2);
		}
		{
			newLeafNode(this_OP_GT_2, grammarAccess.getRELATIONAL_OPAccess().getOP_GTTerminalRuleCall_2());
		}
		    |
		this_OP_LE_3=RULE_OP_LE
		{
			$current.merge(this_OP_LE_3);
		}
		{
			newLeafNode(this_OP_LE_3, grammarAccess.getRELATIONAL_OPAccess().getOP_LETerminalRuleCall_3());
		}
		    |
		this_OP_LT_4=RULE_OP_LT
		{
			$current.merge(this_OP_LT_4);
		}
		{
			newLeafNode(this_OP_LT_4, grammarAccess.getRELATIONAL_OPAccess().getOP_LTTerminalRuleCall_4());
		}
		    |
		this_OP_NE_5=RULE_OP_NE
		{
			$current.merge(this_OP_NE_5);
		}
		{
			newLeafNode(this_OP_NE_5, grammarAccess.getRELATIONAL_OPAccess().getOP_NETerminalRuleCall_5());
		}
	)
;

RULE_OP_AND : 'and';

RULE_OP_MAX : 'max';

RULE_OP_MIN : 'min';

RULE_OP_MUL : '*';

RULE_OP_OR : 'or';

RULE_OP_XOR : 'xor';

RULE_OP_PLUS : '+';

RULE_OP_MINUS : '-';

RULE_OP_DIV : '/';

RULE_OP_MOD : '%';

RULE_OP_NAND : 'nand';

RULE_OP_EQ : '=';

RULE_OP_GE : '>=';

RULE_OP_GT : '>';

RULE_OP_LE : '<=';

RULE_OP_LT : '<';

RULE_OP_NE : '!=';

RULE_BOOLEAN : ('true'|'false');

RULE_REAL : ('0'..'9')+ '.' ('0'..'9')+;

RULE_INTERSECTION : '&&';

RULE_UNION : '||';

RULE_STRING : '"' ('\\' .|~(('\\'|'"')))* '"';

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
