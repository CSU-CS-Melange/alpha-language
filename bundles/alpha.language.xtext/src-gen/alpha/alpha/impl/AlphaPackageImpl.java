/**
 * generated by Xtext 2.13.0
 */
package alpha.alpha.impl;

import alpha.alpha.AAdditiveExpression;
import alpha.alpha.AAffineSystem;
import alpha.alpha.AAlphaExpression;
import alpha.alpha.AAndExpression;
import alpha.alpha.AArgReduceExpression;
import alpha.alpha.AAutoRestrictExpression;
import alpha.alpha.ABinaryPolyObjExpression;
import alpha.alpha.ABooleanExpression;
import alpha.alpha.ACaseExpression;
import alpha.alpha.AConstant;
import alpha.alpha.AConstantDeclaration;
import alpha.alpha.AConstantExpression;
import alpha.alpha.AConvExpression;
import alpha.alpha.ADeclaredObject;
import alpha.alpha.ADependenceExpression;
import alpha.alpha.ADependenceInArrayNotation;
import alpha.alpha.AEquation;
import alpha.alpha.AExternalFunction;
import alpha.alpha.AExternalFunctionCall;
import alpha.alpha.AExternalFunctionDeclaration;
import alpha.alpha.AFunction;
import alpha.alpha.AFunctionInArrayNotation;
import alpha.alpha.AFuzzyVariableDeclaration;
import alpha.alpha.AISLBasicRelation;
import alpha.alpha.AISLBasicSet;
import alpha.alpha.AISLRelation;
import alpha.alpha.AISLSet;
import alpha.alpha.AIfExpression;
import alpha.alpha.AImport;
import alpha.alpha.AIndexAffineExpressionList;
import alpha.alpha.AIndexExpression;
import alpha.alpha.AIndexExpressionInArrayNotation;
import alpha.alpha.AIntegerExpression;
import alpha.alpha.AMinMaxExpression;
import alpha.alpha.AMultiArgArithmeticExpression;
import alpha.alpha.AMultiArgExpression;
import alpha.alpha.AMultiArgLogicalExpression;
import alpha.alpha.AMultiplicativeExpression;
import alpha.alpha.ANegateExpression;
import alpha.alpha.ANotExpression;
import alpha.alpha.AOrExpression;
import alpha.alpha.APackageDeclaration;
import alpha.alpha.APolyObjectInRestrict;
import alpha.alpha.APolyhedralObjectExpression;
import alpha.alpha.ARealExpression;
import alpha.alpha.ARectangularDomain;
import alpha.alpha.AReduceExpression;
import alpha.alpha.AReductionOperator;
import alpha.alpha.ARelationalExpression;
import alpha.alpha.ARestrictExpression;
import alpha.alpha.ASelectDependenceExpression;
import alpha.alpha.AStart;
import alpha.alpha.AUseEquation;
import alpha.alpha.AVariable;
import alpha.alpha.AVariableDeclaration;
import alpha.alpha.AVariableDomain;
import alpha.alpha.AVariableExpression;
import alpha.alpha.AVariableList;
import alpha.alpha.AbstractElement;
import alpha.alpha.AlphaFactory;
import alpha.alpha.AlphaPackage;
import alpha.alpha.PolyhedralObject;

import org.eclipse.emf.ecore.EAttribute;
import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.EPackage;
import org.eclipse.emf.ecore.EReference;

import org.eclipse.emf.ecore.impl.EPackageImpl;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model <b>Package</b>.
 * <!-- end-user-doc -->
 * @generated
 */
public class AlphaPackageImpl extends EPackageImpl implements AlphaPackage
{
  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass aStartEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass abstractElementEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass aPackageDeclarationEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass aImportEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass aConstantDeclarationEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass aExternalFunctionDeclarationEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass aExternalFunctionEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass aConstantEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass aAffineSystemEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass aVariableDeclarationEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass aVariableListEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass aVariableEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass aFuzzyVariableDeclarationEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass polyhedralObjectEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass aPolyhedralObjectExpressionEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass aVariableDomainEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass aRectangularDomainEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass aDeclaredObjectEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass aislSetEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass aislBasicSetEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass aislRelationEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass aislBasicRelationEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass aEquationEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass aUseEquationEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass aAlphaExpressionEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass aNotExpressionEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass aNegateExpressionEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass aCaseExpressionEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass aDependenceExpressionEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass aSelectDependenceExpressionEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass aDependenceInArrayNotationEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass aIfExpressionEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass aIndexExpressionEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass aIndexExpressionInArrayNotationEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass aReduceExpressionEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass aArgReduceExpressionEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass aConvExpressionEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass aRestrictExpressionEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass aPolyObjectInRestrictEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass aAutoRestrictExpressionEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass aVariableExpressionEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass aConstantExpressionEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass aBooleanExpressionEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass aIntegerExpressionEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass aRealExpressionEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass aMultiArgExpressionEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass aMultiArgArithmeticExpressionEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass aMultiArgLogicalExpressionEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass aExternalFunctionCallEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass aIndexAffineExpressionListEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass aFunctionEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass aFunctionInArrayNotationEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass aReductionOperatorEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass aBinaryPolyObjExpressionEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass aOrExpressionEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass aAndExpressionEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass aRelationalExpressionEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass aAdditiveExpressionEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass aMultiplicativeExpressionEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass aMinMaxExpressionEClass = null;

  /**
   * Creates an instance of the model <b>Package</b>, registered with
   * {@link org.eclipse.emf.ecore.EPackage.Registry EPackage.Registry} by the package
   * package URI value.
   * <p>Note: the correct way to create the package is via the static
   * factory method {@link #init init()}, which also performs
   * initialization of the package, or returns the registered package,
   * if one already exists.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.eclipse.emf.ecore.EPackage.Registry
   * @see alpha.alpha.AlphaPackage#eNS_URI
   * @see #init()
   * @generated
   */
  private AlphaPackageImpl()
  {
    super(eNS_URI, AlphaFactory.eINSTANCE);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private static boolean isInited = false;

  /**
   * Creates, registers, and initializes the <b>Package</b> for this model, and for any others upon which it depends.
   * 
   * <p>This method is used to initialize {@link AlphaPackage#eINSTANCE} when that field is accessed.
   * Clients should not invoke it directly. Instead, they should simply access that field to obtain the package.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #eNS_URI
   * @see #createPackageContents()
   * @see #initializePackageContents()
   * @generated
   */
  public static AlphaPackage init()
  {
    if (isInited) return (AlphaPackage)EPackage.Registry.INSTANCE.getEPackage(AlphaPackage.eNS_URI);

    // Obtain or create and register package
    AlphaPackageImpl theAlphaPackage = (AlphaPackageImpl)(EPackage.Registry.INSTANCE.get(eNS_URI) instanceof AlphaPackageImpl ? EPackage.Registry.INSTANCE.get(eNS_URI) : new AlphaPackageImpl());

    isInited = true;

    // Create package meta-data objects
    theAlphaPackage.createPackageContents();

    // Initialize created meta-data
    theAlphaPackage.initializePackageContents();

    // Mark meta-data to indicate it can't be changed
    theAlphaPackage.freeze();

  
    // Update the registry and return the package
    EPackage.Registry.INSTANCE.put(AlphaPackage.eNS_URI, theAlphaPackage);
    return theAlphaPackage;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getAStart()
  {
    return aStartEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getAStart_Elements()
  {
    return (EReference)aStartEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getAbstractElement()
  {
    return abstractElementEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getAPackageDeclaration()
  {
    return aPackageDeclarationEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getAPackageDeclaration_Name()
  {
    return (EAttribute)aPackageDeclarationEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getAPackageDeclaration_Elements()
  {
    return (EReference)aPackageDeclarationEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getAImport()
  {
    return aImportEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getAImport_ImportedNamespace()
  {
    return (EAttribute)aImportEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getAConstantDeclaration()
  {
    return aConstantDeclarationEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getAExternalFunctionDeclaration()
  {
    return aExternalFunctionDeclarationEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getAExternalFunction()
  {
    return aExternalFunctionEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getAExternalFunction_Name()
  {
    return (EAttribute)aExternalFunctionEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getAExternalFunction_InputCardinarity()
  {
    return (EAttribute)aExternalFunctionEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getAConstant()
  {
    return aConstantEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getAConstant_Name()
  {
    return (EAttribute)aConstantEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getAConstant_Value()
  {
    return (EAttribute)aConstantEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getAAffineSystem()
  {
    return aAffineSystemEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getAAffineSystem_Name()
  {
    return (EAttribute)aAffineSystemEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getAAffineSystem_Parameters()
  {
    return (EAttribute)aAffineSystemEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getAAffineSystem_PolyObjects()
  {
    return (EReference)aAffineSystemEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getAAffineSystem_InputDeclarations()
  {
    return (EReference)aAffineSystemEClass.getEStructuralFeatures().get(3);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getAAffineSystem_OutputDeclarations()
  {
    return (EReference)aAffineSystemEClass.getEStructuralFeatures().get(4);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getAAffineSystem_LocalvarDeclarations()
  {
    return (EReference)aAffineSystemEClass.getEStructuralFeatures().get(5);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getAAffineSystem_FuzzyVariables()
  {
    return (EReference)aAffineSystemEClass.getEStructuralFeatures().get(6);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getAAffineSystem_WhileDomain()
  {
    return (EReference)aAffineSystemEClass.getEStructuralFeatures().get(7);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getAAffineSystem_While()
  {
    return (EAttribute)aAffineSystemEClass.getEStructuralFeatures().get(8);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getAAffineSystem_TestExpression()
  {
    return (EReference)aAffineSystemEClass.getEStructuralFeatures().get(9);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getAAffineSystem_UseEquations()
  {
    return (EReference)aAffineSystemEClass.getEStructuralFeatures().get(10);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getAAffineSystem_Equations()
  {
    return (EReference)aAffineSystemEClass.getEStructuralFeatures().get(11);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getAVariableDeclaration()
  {
    return aVariableDeclarationEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getAVariableDeclaration_VarList()
  {
    return (EReference)aVariableDeclarationEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getAVariableDeclaration_Domain()
  {
    return (EReference)aVariableDeclarationEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getAVariableList()
  {
    return aVariableListEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getAVariableList_Vars()
  {
    return (EReference)aVariableListEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getAVariable()
  {
    return aVariableEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getAVariable_Name()
  {
    return (EAttribute)aVariableEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getAFuzzyVariableDeclaration()
  {
    return aFuzzyVariableDeclarationEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getAFuzzyVariableDeclaration_VarList()
  {
    return (EReference)aFuzzyVariableDeclarationEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getAFuzzyVariableDeclaration_Relation()
  {
    return (EReference)aFuzzyVariableDeclarationEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getPolyhedralObject()
  {
    return polyhedralObjectEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getPolyhedralObject_Name()
  {
    return (EAttribute)polyhedralObjectEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getPolyhedralObject_Object()
  {
    return (EReference)polyhedralObjectEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getAPolyhedralObjectExpression()
  {
    return aPolyhedralObjectExpressionEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getAPolyhedralObjectExpression_Op()
  {
    return (EAttribute)aPolyhedralObjectExpressionEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getAPolyhedralObjectExpression_Expr()
  {
    return (EReference)aPolyhedralObjectExpressionEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getAVariableDomain()
  {
    return aVariableDomainEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getAVariableDomain_Var()
  {
    return (EReference)aVariableDomainEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getARectangularDomain()
  {
    return aRectangularDomainEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getARectangularDomain_Dimensions()
  {
    return (EAttribute)aRectangularDomainEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getARectangularDomain_Names()
  {
    return (EAttribute)aRectangularDomainEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getADeclaredObject()
  {
    return aDeclaredObjectEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getADeclaredObject_Object()
  {
    return (EReference)aDeclaredObjectEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getAISLSet()
  {
    return aislSetEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getAISLSet_Sets()
  {
    return (EReference)aislSetEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getAISLSet_Relations()
  {
    return (EReference)aislSetEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getAISLBasicSet()
  {
    return aislBasicSetEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getAISLBasicSet_Dims()
  {
    return (EAttribute)aislBasicSetEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getAISLBasicSet_ConstraintString()
  {
    return (EAttribute)aislBasicSetEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getAISLRelation()
  {
    return aislRelationEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getAISLRelation_Relations()
  {
    return (EReference)aislRelationEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getAISLBasicRelation()
  {
    return aislBasicRelationEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getAISLBasicRelation_InDims()
  {
    return (EAttribute)aislBasicRelationEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getAISLBasicRelation_OutDims()
  {
    return (EAttribute)aislBasicRelationEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getAISLBasicRelation_ConstraintStr()
  {
    return (EAttribute)aislBasicRelationEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getAEquation()
  {
    return aEquationEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getAEquation_Var()
  {
    return (EReference)aEquationEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getAEquation_Indexes()
  {
    return (EAttribute)aEquationEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getAEquation_Expr()
  {
    return (EReference)aEquationEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getAUseEquation()
  {
    return aUseEquationEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getAUseEquation_InstantiationDomain()
  {
    return (EReference)aUseEquationEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getAUseEquation_SubsystemDims()
  {
    return (EAttribute)aUseEquationEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getAUseEquation_OutputExprs()
  {
    return (EReference)aUseEquationEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getAUseEquation_System()
  {
    return (EReference)aUseEquationEClass.getEStructuralFeatures().get(3);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getAUseEquation_CallParams()
  {
    return (EReference)aUseEquationEClass.getEStructuralFeatures().get(4);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getAUseEquation_InputExprs()
  {
    return (EReference)aUseEquationEClass.getEStructuralFeatures().get(5);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getAAlphaExpression()
  {
    return aAlphaExpressionEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getANotExpression()
  {
    return aNotExpressionEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getANotExpression_Op()
  {
    return (EAttribute)aNotExpressionEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getANotExpression_Expr()
  {
    return (EReference)aNotExpressionEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getANegateExpression()
  {
    return aNegateExpressionEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getANegateExpression_Op()
  {
    return (EAttribute)aNegateExpressionEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getANegateExpression_Expr()
  {
    return (EReference)aNegateExpressionEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getACaseExpression()
  {
    return aCaseExpressionEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getACaseExpression_Name()
  {
    return (EAttribute)aCaseExpressionEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getACaseExpression_Exprs()
  {
    return (EReference)aCaseExpressionEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getADependenceExpression()
  {
    return aDependenceExpressionEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getADependenceExpression_Function()
  {
    return (EReference)aDependenceExpressionEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getADependenceExpression_Expr()
  {
    return (EReference)aDependenceExpressionEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getASelectDependenceExpression()
  {
    return aSelectDependenceExpressionEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getASelectDependenceExpression_Relation()
  {
    return (EReference)aSelectDependenceExpressionEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getASelectDependenceExpression_Expr()
  {
    return (EReference)aSelectDependenceExpressionEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getADependenceInArrayNotation()
  {
    return aDependenceInArrayNotationEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getADependenceInArrayNotation_Var()
  {
    return (EReference)aDependenceInArrayNotationEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getADependenceInArrayNotation_Dep()
  {
    return (EReference)aDependenceInArrayNotationEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getAIfExpression()
  {
    return aIfExpressionEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getAIfExpression_Cond()
  {
    return (EReference)aIfExpressionEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getAIfExpression_Then()
  {
    return (EReference)aIfExpressionEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getAIfExpression_Else()
  {
    return (EReference)aIfExpressionEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getAIndexExpression()
  {
    return aIndexExpressionEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getAIndexExpression_Indexes()
  {
    return (EAttribute)aIndexExpressionEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getAIndexExpression_Func()
  {
    return (EAttribute)aIndexExpressionEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getAIndexExpressionInArrayNotation()
  {
    return aIndexExpressionInArrayNotationEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getAIndexExpressionInArrayNotation_Func()
  {
    return (EAttribute)aIndexExpressionInArrayNotationEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getAReduceExpression()
  {
    return aReduceExpressionEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getAReduceExpression_Op()
  {
    return (EReference)aReduceExpressionEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getAReduceExpression_Projection()
  {
    return (EReference)aReduceExpressionEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getAReduceExpression_Expr()
  {
    return (EReference)aReduceExpressionEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getAArgReduceExpression()
  {
    return aArgReduceExpressionEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getAArgReduceExpression_Op()
  {
    return (EReference)aArgReduceExpressionEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getAArgReduceExpression_Projection()
  {
    return (EReference)aArgReduceExpressionEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getAArgReduceExpression_Expr()
  {
    return (EReference)aArgReduceExpressionEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getAConvExpression()
  {
    return aConvExpressionEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getAConvExpression_Domain()
  {
    return (EReference)aConvExpressionEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getAConvExpression_Kernel()
  {
    return (EReference)aConvExpressionEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getAConvExpression_Data()
  {
    return (EReference)aConvExpressionEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getARestrictExpression()
  {
    return aRestrictExpressionEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getARestrictExpression_Domain()
  {
    return (EReference)aRestrictExpressionEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getARestrictExpression_Expr()
  {
    return (EReference)aRestrictExpressionEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getAPolyObjectInRestrict()
  {
    return aPolyObjectInRestrictEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getAAutoRestrictExpression()
  {
    return aAutoRestrictExpressionEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getAAutoRestrictExpression_Expr()
  {
    return (EReference)aAutoRestrictExpressionEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getAVariableExpression()
  {
    return aVariableExpressionEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getAVariableExpression_Var()
  {
    return (EReference)aVariableExpressionEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getAConstantExpression()
  {
    return aConstantExpressionEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getABooleanExpression()
  {
    return aBooleanExpressionEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getABooleanExpression_Value()
  {
    return (EAttribute)aBooleanExpressionEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getAIntegerExpression()
  {
    return aIntegerExpressionEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getAIntegerExpression_Value()
  {
    return (EAttribute)aIntegerExpressionEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getARealExpression()
  {
    return aRealExpressionEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getARealExpression_Value()
  {
    return (EAttribute)aRealExpressionEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getAMultiArgExpression()
  {
    return aMultiArgExpressionEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getAMultiArgExpression_Exprs()
  {
    return (EReference)aMultiArgExpressionEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getAMultiArgArithmeticExpression()
  {
    return aMultiArgArithmeticExpressionEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getAMultiArgArithmeticExpression_Op()
  {
    return (EAttribute)aMultiArgArithmeticExpressionEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getAMultiArgLogicalExpression()
  {
    return aMultiArgLogicalExpressionEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getAMultiArgLogicalExpression_Op()
  {
    return (EAttribute)aMultiArgLogicalExpressionEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getAExternalFunctionCall()
  {
    return aExternalFunctionCallEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getAExternalFunctionCall_Func()
  {
    return (EReference)aExternalFunctionCallEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getAIndexAffineExpressionList()
  {
    return aIndexAffineExpressionListEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getAIndexAffineExpressionList_Exprs()
  {
    return (EAttribute)aIndexAffineExpressionListEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getAFunction()
  {
    return aFunctionEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getAFunction_Indexes()
  {
    return (EAttribute)aFunctionEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getAFunction_Func()
  {
    return (EReference)aFunctionEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getAFunctionInArrayNotation()
  {
    return aFunctionInArrayNotationEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getAFunctionInArrayNotation_NewIds()
  {
    return (EReference)aFunctionInArrayNotationEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getAReductionOperator()
  {
    return aReductionOperatorEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getAReductionOperator_Op()
  {
    return (EReference)aReductionOperatorEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getAReductionOperator_Builtin()
  {
    return (EAttribute)aReductionOperatorEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getABinaryPolyObjExpression()
  {
    return aBinaryPolyObjExpressionEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getABinaryPolyObjExpression_Left()
  {
    return (EReference)aBinaryPolyObjExpressionEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getABinaryPolyObjExpression_Operator()
  {
    return (EAttribute)aBinaryPolyObjExpressionEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getABinaryPolyObjExpression_Right()
  {
    return (EReference)aBinaryPolyObjExpressionEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getAOrExpression()
  {
    return aOrExpressionEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getAOrExpression_Left()
  {
    return (EReference)aOrExpressionEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getAOrExpression_Operator()
  {
    return (EAttribute)aOrExpressionEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getAOrExpression_Right()
  {
    return (EReference)aOrExpressionEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getAAndExpression()
  {
    return aAndExpressionEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getAAndExpression_Left()
  {
    return (EReference)aAndExpressionEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getAAndExpression_Operator()
  {
    return (EAttribute)aAndExpressionEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getAAndExpression_Right()
  {
    return (EReference)aAndExpressionEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getARelationalExpression()
  {
    return aRelationalExpressionEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getARelationalExpression_Left()
  {
    return (EReference)aRelationalExpressionEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getARelationalExpression_Operator()
  {
    return (EAttribute)aRelationalExpressionEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getARelationalExpression_Right()
  {
    return (EReference)aRelationalExpressionEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getAAdditiveExpression()
  {
    return aAdditiveExpressionEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getAAdditiveExpression_Left()
  {
    return (EReference)aAdditiveExpressionEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getAAdditiveExpression_Op()
  {
    return (EAttribute)aAdditiveExpressionEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getAAdditiveExpression_Right()
  {
    return (EReference)aAdditiveExpressionEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getAMultiplicativeExpression()
  {
    return aMultiplicativeExpressionEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getAMultiplicativeExpression_Left()
  {
    return (EReference)aMultiplicativeExpressionEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getAMultiplicativeExpression_Op()
  {
    return (EAttribute)aMultiplicativeExpressionEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getAMultiplicativeExpression_Right()
  {
    return (EReference)aMultiplicativeExpressionEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getAMinMaxExpression()
  {
    return aMinMaxExpressionEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getAMinMaxExpression_Left()
  {
    return (EReference)aMinMaxExpressionEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getAMinMaxExpression_Op()
  {
    return (EAttribute)aMinMaxExpressionEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getAMinMaxExpression_Right()
  {
    return (EReference)aMinMaxExpressionEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public AlphaFactory getAlphaFactory()
  {
    return (AlphaFactory)getEFactoryInstance();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private boolean isCreated = false;

  /**
   * Creates the meta-model objects for the package.  This method is
   * guarded to have no affect on any invocation but its first.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void createPackageContents()
  {
    if (isCreated) return;
    isCreated = true;

    // Create classes and their features
    aStartEClass = createEClass(ASTART);
    createEReference(aStartEClass, ASTART__ELEMENTS);

    abstractElementEClass = createEClass(ABSTRACT_ELEMENT);

    aPackageDeclarationEClass = createEClass(APACKAGE_DECLARATION);
    createEAttribute(aPackageDeclarationEClass, APACKAGE_DECLARATION__NAME);
    createEReference(aPackageDeclarationEClass, APACKAGE_DECLARATION__ELEMENTS);

    aImportEClass = createEClass(AIMPORT);
    createEAttribute(aImportEClass, AIMPORT__IMPORTED_NAMESPACE);

    aConstantDeclarationEClass = createEClass(ACONSTANT_DECLARATION);

    aExternalFunctionDeclarationEClass = createEClass(AEXTERNAL_FUNCTION_DECLARATION);

    aExternalFunctionEClass = createEClass(AEXTERNAL_FUNCTION);
    createEAttribute(aExternalFunctionEClass, AEXTERNAL_FUNCTION__NAME);
    createEAttribute(aExternalFunctionEClass, AEXTERNAL_FUNCTION__INPUT_CARDINARITY);

    aConstantEClass = createEClass(ACONSTANT);
    createEAttribute(aConstantEClass, ACONSTANT__NAME);
    createEAttribute(aConstantEClass, ACONSTANT__VALUE);

    aAffineSystemEClass = createEClass(AAFFINE_SYSTEM);
    createEAttribute(aAffineSystemEClass, AAFFINE_SYSTEM__NAME);
    createEAttribute(aAffineSystemEClass, AAFFINE_SYSTEM__PARAMETERS);
    createEReference(aAffineSystemEClass, AAFFINE_SYSTEM__POLY_OBJECTS);
    createEReference(aAffineSystemEClass, AAFFINE_SYSTEM__INPUT_DECLARATIONS);
    createEReference(aAffineSystemEClass, AAFFINE_SYSTEM__OUTPUT_DECLARATIONS);
    createEReference(aAffineSystemEClass, AAFFINE_SYSTEM__LOCALVAR_DECLARATIONS);
    createEReference(aAffineSystemEClass, AAFFINE_SYSTEM__FUZZY_VARIABLES);
    createEReference(aAffineSystemEClass, AAFFINE_SYSTEM__WHILE_DOMAIN);
    createEAttribute(aAffineSystemEClass, AAFFINE_SYSTEM__WHILE);
    createEReference(aAffineSystemEClass, AAFFINE_SYSTEM__TEST_EXPRESSION);
    createEReference(aAffineSystemEClass, AAFFINE_SYSTEM__USE_EQUATIONS);
    createEReference(aAffineSystemEClass, AAFFINE_SYSTEM__EQUATIONS);

    aVariableDeclarationEClass = createEClass(AVARIABLE_DECLARATION);
    createEReference(aVariableDeclarationEClass, AVARIABLE_DECLARATION__VAR_LIST);
    createEReference(aVariableDeclarationEClass, AVARIABLE_DECLARATION__DOMAIN);

    aVariableListEClass = createEClass(AVARIABLE_LIST);
    createEReference(aVariableListEClass, AVARIABLE_LIST__VARS);

    aVariableEClass = createEClass(AVARIABLE);
    createEAttribute(aVariableEClass, AVARIABLE__NAME);

    aFuzzyVariableDeclarationEClass = createEClass(AFUZZY_VARIABLE_DECLARATION);
    createEReference(aFuzzyVariableDeclarationEClass, AFUZZY_VARIABLE_DECLARATION__VAR_LIST);
    createEReference(aFuzzyVariableDeclarationEClass, AFUZZY_VARIABLE_DECLARATION__RELATION);

    polyhedralObjectEClass = createEClass(POLYHEDRAL_OBJECT);
    createEAttribute(polyhedralObjectEClass, POLYHEDRAL_OBJECT__NAME);
    createEReference(polyhedralObjectEClass, POLYHEDRAL_OBJECT__OBJECT);

    aPolyhedralObjectExpressionEClass = createEClass(APOLYHEDRAL_OBJECT_EXPRESSION);
    createEAttribute(aPolyhedralObjectExpressionEClass, APOLYHEDRAL_OBJECT_EXPRESSION__OP);
    createEReference(aPolyhedralObjectExpressionEClass, APOLYHEDRAL_OBJECT_EXPRESSION__EXPR);

    aVariableDomainEClass = createEClass(AVARIABLE_DOMAIN);
    createEReference(aVariableDomainEClass, AVARIABLE_DOMAIN__VAR);

    aRectangularDomainEClass = createEClass(ARECTANGULAR_DOMAIN);
    createEAttribute(aRectangularDomainEClass, ARECTANGULAR_DOMAIN__DIMENSIONS);
    createEAttribute(aRectangularDomainEClass, ARECTANGULAR_DOMAIN__NAMES);

    aDeclaredObjectEClass = createEClass(ADECLARED_OBJECT);
    createEReference(aDeclaredObjectEClass, ADECLARED_OBJECT__OBJECT);

    aislSetEClass = createEClass(AISL_SET);
    createEReference(aislSetEClass, AISL_SET__SETS);
    createEReference(aislSetEClass, AISL_SET__RELATIONS);

    aislBasicSetEClass = createEClass(AISL_BASIC_SET);
    createEAttribute(aislBasicSetEClass, AISL_BASIC_SET__DIMS);
    createEAttribute(aislBasicSetEClass, AISL_BASIC_SET__CONSTRAINT_STRING);

    aislRelationEClass = createEClass(AISL_RELATION);
    createEReference(aislRelationEClass, AISL_RELATION__RELATIONS);

    aislBasicRelationEClass = createEClass(AISL_BASIC_RELATION);
    createEAttribute(aislBasicRelationEClass, AISL_BASIC_RELATION__IN_DIMS);
    createEAttribute(aislBasicRelationEClass, AISL_BASIC_RELATION__OUT_DIMS);
    createEAttribute(aislBasicRelationEClass, AISL_BASIC_RELATION__CONSTRAINT_STR);

    aEquationEClass = createEClass(AEQUATION);
    createEReference(aEquationEClass, AEQUATION__VAR);
    createEAttribute(aEquationEClass, AEQUATION__INDEXES);
    createEReference(aEquationEClass, AEQUATION__EXPR);

    aUseEquationEClass = createEClass(AUSE_EQUATION);
    createEReference(aUseEquationEClass, AUSE_EQUATION__INSTANTIATION_DOMAIN);
    createEAttribute(aUseEquationEClass, AUSE_EQUATION__SUBSYSTEM_DIMS);
    createEReference(aUseEquationEClass, AUSE_EQUATION__OUTPUT_EXPRS);
    createEReference(aUseEquationEClass, AUSE_EQUATION__SYSTEM);
    createEReference(aUseEquationEClass, AUSE_EQUATION__CALL_PARAMS);
    createEReference(aUseEquationEClass, AUSE_EQUATION__INPUT_EXPRS);

    aAlphaExpressionEClass = createEClass(AALPHA_EXPRESSION);

    aNotExpressionEClass = createEClass(ANOT_EXPRESSION);
    createEAttribute(aNotExpressionEClass, ANOT_EXPRESSION__OP);
    createEReference(aNotExpressionEClass, ANOT_EXPRESSION__EXPR);

    aNegateExpressionEClass = createEClass(ANEGATE_EXPRESSION);
    createEAttribute(aNegateExpressionEClass, ANEGATE_EXPRESSION__OP);
    createEReference(aNegateExpressionEClass, ANEGATE_EXPRESSION__EXPR);

    aCaseExpressionEClass = createEClass(ACASE_EXPRESSION);
    createEAttribute(aCaseExpressionEClass, ACASE_EXPRESSION__NAME);
    createEReference(aCaseExpressionEClass, ACASE_EXPRESSION__EXPRS);

    aDependenceExpressionEClass = createEClass(ADEPENDENCE_EXPRESSION);
    createEReference(aDependenceExpressionEClass, ADEPENDENCE_EXPRESSION__FUNCTION);
    createEReference(aDependenceExpressionEClass, ADEPENDENCE_EXPRESSION__EXPR);

    aSelectDependenceExpressionEClass = createEClass(ASELECT_DEPENDENCE_EXPRESSION);
    createEReference(aSelectDependenceExpressionEClass, ASELECT_DEPENDENCE_EXPRESSION__RELATION);
    createEReference(aSelectDependenceExpressionEClass, ASELECT_DEPENDENCE_EXPRESSION__EXPR);

    aDependenceInArrayNotationEClass = createEClass(ADEPENDENCE_IN_ARRAY_NOTATION);
    createEReference(aDependenceInArrayNotationEClass, ADEPENDENCE_IN_ARRAY_NOTATION__VAR);
    createEReference(aDependenceInArrayNotationEClass, ADEPENDENCE_IN_ARRAY_NOTATION__DEP);

    aIfExpressionEClass = createEClass(AIF_EXPRESSION);
    createEReference(aIfExpressionEClass, AIF_EXPRESSION__COND);
    createEReference(aIfExpressionEClass, AIF_EXPRESSION__THEN);
    createEReference(aIfExpressionEClass, AIF_EXPRESSION__ELSE);

    aIndexExpressionEClass = createEClass(AINDEX_EXPRESSION);
    createEAttribute(aIndexExpressionEClass, AINDEX_EXPRESSION__INDEXES);
    createEAttribute(aIndexExpressionEClass, AINDEX_EXPRESSION__FUNC);

    aIndexExpressionInArrayNotationEClass = createEClass(AINDEX_EXPRESSION_IN_ARRAY_NOTATION);
    createEAttribute(aIndexExpressionInArrayNotationEClass, AINDEX_EXPRESSION_IN_ARRAY_NOTATION__FUNC);

    aReduceExpressionEClass = createEClass(AREDUCE_EXPRESSION);
    createEReference(aReduceExpressionEClass, AREDUCE_EXPRESSION__OP);
    createEReference(aReduceExpressionEClass, AREDUCE_EXPRESSION__PROJECTION);
    createEReference(aReduceExpressionEClass, AREDUCE_EXPRESSION__EXPR);

    aArgReduceExpressionEClass = createEClass(AARG_REDUCE_EXPRESSION);
    createEReference(aArgReduceExpressionEClass, AARG_REDUCE_EXPRESSION__OP);
    createEReference(aArgReduceExpressionEClass, AARG_REDUCE_EXPRESSION__PROJECTION);
    createEReference(aArgReduceExpressionEClass, AARG_REDUCE_EXPRESSION__EXPR);

    aConvExpressionEClass = createEClass(ACONV_EXPRESSION);
    createEReference(aConvExpressionEClass, ACONV_EXPRESSION__DOMAIN);
    createEReference(aConvExpressionEClass, ACONV_EXPRESSION__KERNEL);
    createEReference(aConvExpressionEClass, ACONV_EXPRESSION__DATA);

    aRestrictExpressionEClass = createEClass(ARESTRICT_EXPRESSION);
    createEReference(aRestrictExpressionEClass, ARESTRICT_EXPRESSION__DOMAIN);
    createEReference(aRestrictExpressionEClass, ARESTRICT_EXPRESSION__EXPR);

    aPolyObjectInRestrictEClass = createEClass(APOLY_OBJECT_IN_RESTRICT);

    aAutoRestrictExpressionEClass = createEClass(AAUTO_RESTRICT_EXPRESSION);
    createEReference(aAutoRestrictExpressionEClass, AAUTO_RESTRICT_EXPRESSION__EXPR);

    aVariableExpressionEClass = createEClass(AVARIABLE_EXPRESSION);
    createEReference(aVariableExpressionEClass, AVARIABLE_EXPRESSION__VAR);

    aConstantExpressionEClass = createEClass(ACONSTANT_EXPRESSION);

    aBooleanExpressionEClass = createEClass(ABOOLEAN_EXPRESSION);
    createEAttribute(aBooleanExpressionEClass, ABOOLEAN_EXPRESSION__VALUE);

    aIntegerExpressionEClass = createEClass(AINTEGER_EXPRESSION);
    createEAttribute(aIntegerExpressionEClass, AINTEGER_EXPRESSION__VALUE);

    aRealExpressionEClass = createEClass(AREAL_EXPRESSION);
    createEAttribute(aRealExpressionEClass, AREAL_EXPRESSION__VALUE);

    aMultiArgExpressionEClass = createEClass(AMULTI_ARG_EXPRESSION);
    createEReference(aMultiArgExpressionEClass, AMULTI_ARG_EXPRESSION__EXPRS);

    aMultiArgArithmeticExpressionEClass = createEClass(AMULTI_ARG_ARITHMETIC_EXPRESSION);
    createEAttribute(aMultiArgArithmeticExpressionEClass, AMULTI_ARG_ARITHMETIC_EXPRESSION__OP);

    aMultiArgLogicalExpressionEClass = createEClass(AMULTI_ARG_LOGICAL_EXPRESSION);
    createEAttribute(aMultiArgLogicalExpressionEClass, AMULTI_ARG_LOGICAL_EXPRESSION__OP);

    aExternalFunctionCallEClass = createEClass(AEXTERNAL_FUNCTION_CALL);
    createEReference(aExternalFunctionCallEClass, AEXTERNAL_FUNCTION_CALL__FUNC);

    aIndexAffineExpressionListEClass = createEClass(AINDEX_AFFINE_EXPRESSION_LIST);
    createEAttribute(aIndexAffineExpressionListEClass, AINDEX_AFFINE_EXPRESSION_LIST__EXPRS);

    aFunctionEClass = createEClass(AFUNCTION);
    createEAttribute(aFunctionEClass, AFUNCTION__INDEXES);
    createEReference(aFunctionEClass, AFUNCTION__FUNC);

    aFunctionInArrayNotationEClass = createEClass(AFUNCTION_IN_ARRAY_NOTATION);
    createEReference(aFunctionInArrayNotationEClass, AFUNCTION_IN_ARRAY_NOTATION__NEW_IDS);

    aReductionOperatorEClass = createEClass(AREDUCTION_OPERATOR);
    createEReference(aReductionOperatorEClass, AREDUCTION_OPERATOR__OP);
    createEAttribute(aReductionOperatorEClass, AREDUCTION_OPERATOR__BUILTIN);

    aBinaryPolyObjExpressionEClass = createEClass(ABINARY_POLY_OBJ_EXPRESSION);
    createEReference(aBinaryPolyObjExpressionEClass, ABINARY_POLY_OBJ_EXPRESSION__LEFT);
    createEAttribute(aBinaryPolyObjExpressionEClass, ABINARY_POLY_OBJ_EXPRESSION__OPERATOR);
    createEReference(aBinaryPolyObjExpressionEClass, ABINARY_POLY_OBJ_EXPRESSION__RIGHT);

    aOrExpressionEClass = createEClass(AOR_EXPRESSION);
    createEReference(aOrExpressionEClass, AOR_EXPRESSION__LEFT);
    createEAttribute(aOrExpressionEClass, AOR_EXPRESSION__OPERATOR);
    createEReference(aOrExpressionEClass, AOR_EXPRESSION__RIGHT);

    aAndExpressionEClass = createEClass(AAND_EXPRESSION);
    createEReference(aAndExpressionEClass, AAND_EXPRESSION__LEFT);
    createEAttribute(aAndExpressionEClass, AAND_EXPRESSION__OPERATOR);
    createEReference(aAndExpressionEClass, AAND_EXPRESSION__RIGHT);

    aRelationalExpressionEClass = createEClass(ARELATIONAL_EXPRESSION);
    createEReference(aRelationalExpressionEClass, ARELATIONAL_EXPRESSION__LEFT);
    createEAttribute(aRelationalExpressionEClass, ARELATIONAL_EXPRESSION__OPERATOR);
    createEReference(aRelationalExpressionEClass, ARELATIONAL_EXPRESSION__RIGHT);

    aAdditiveExpressionEClass = createEClass(AADDITIVE_EXPRESSION);
    createEReference(aAdditiveExpressionEClass, AADDITIVE_EXPRESSION__LEFT);
    createEAttribute(aAdditiveExpressionEClass, AADDITIVE_EXPRESSION__OP);
    createEReference(aAdditiveExpressionEClass, AADDITIVE_EXPRESSION__RIGHT);

    aMultiplicativeExpressionEClass = createEClass(AMULTIPLICATIVE_EXPRESSION);
    createEReference(aMultiplicativeExpressionEClass, AMULTIPLICATIVE_EXPRESSION__LEFT);
    createEAttribute(aMultiplicativeExpressionEClass, AMULTIPLICATIVE_EXPRESSION__OP);
    createEReference(aMultiplicativeExpressionEClass, AMULTIPLICATIVE_EXPRESSION__RIGHT);

    aMinMaxExpressionEClass = createEClass(AMIN_MAX_EXPRESSION);
    createEReference(aMinMaxExpressionEClass, AMIN_MAX_EXPRESSION__LEFT);
    createEAttribute(aMinMaxExpressionEClass, AMIN_MAX_EXPRESSION__OP);
    createEReference(aMinMaxExpressionEClass, AMIN_MAX_EXPRESSION__RIGHT);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private boolean isInitialized = false;

  /**
   * Complete the initialization of the package and its meta-model.  This
   * method is guarded to have no affect on any invocation but its first.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void initializePackageContents()
  {
    if (isInitialized) return;
    isInitialized = true;

    // Initialize package
    setName(eNAME);
    setNsPrefix(eNS_PREFIX);
    setNsURI(eNS_URI);

    // Create type parameters

    // Set bounds for type parameters

    // Add supertypes to classes
    aPackageDeclarationEClass.getESuperTypes().add(this.getAbstractElement());
    aImportEClass.getESuperTypes().add(this.getAbstractElement());
    aConstantDeclarationEClass.getESuperTypes().add(this.getAbstractElement());
    aExternalFunctionDeclarationEClass.getESuperTypes().add(this.getAbstractElement());
    aExternalFunctionEClass.getESuperTypes().add(this.getAExternalFunctionDeclaration());
    aConstantEClass.getESuperTypes().add(this.getAConstantDeclaration());
    aAffineSystemEClass.getESuperTypes().add(this.getAbstractElement());
    aPolyhedralObjectExpressionEClass.getESuperTypes().add(this.getAPolyObjectInRestrict());
    aVariableDomainEClass.getESuperTypes().add(this.getAPolyhedralObjectExpression());
    aVariableDomainEClass.getESuperTypes().add(this.getAPolyObjectInRestrict());
    aRectangularDomainEClass.getESuperTypes().add(this.getAPolyhedralObjectExpression());
    aDeclaredObjectEClass.getESuperTypes().add(this.getAPolyhedralObjectExpression());
    aDeclaredObjectEClass.getESuperTypes().add(this.getAPolyObjectInRestrict());
    aislSetEClass.getESuperTypes().add(this.getAPolyhedralObjectExpression());
    aislSetEClass.getESuperTypes().add(this.getAPolyObjectInRestrict());
    aislRelationEClass.getESuperTypes().add(this.getAPolyhedralObjectExpression());
    aislRelationEClass.getESuperTypes().add(this.getAPolyObjectInRestrict());
    aNotExpressionEClass.getESuperTypes().add(this.getAAlphaExpression());
    aNegateExpressionEClass.getESuperTypes().add(this.getAAlphaExpression());
    aCaseExpressionEClass.getESuperTypes().add(this.getAAlphaExpression());
    aDependenceExpressionEClass.getESuperTypes().add(this.getAAlphaExpression());
    aSelectDependenceExpressionEClass.getESuperTypes().add(this.getAAlphaExpression());
    aDependenceInArrayNotationEClass.getESuperTypes().add(this.getAAlphaExpression());
    aIfExpressionEClass.getESuperTypes().add(this.getAAlphaExpression());
    aIndexExpressionEClass.getESuperTypes().add(this.getAAlphaExpression());
    aIndexExpressionInArrayNotationEClass.getESuperTypes().add(this.getAAlphaExpression());
    aReduceExpressionEClass.getESuperTypes().add(this.getAAlphaExpression());
    aArgReduceExpressionEClass.getESuperTypes().add(this.getAAlphaExpression());
    aConvExpressionEClass.getESuperTypes().add(this.getAAlphaExpression());
    aRestrictExpressionEClass.getESuperTypes().add(this.getAAlphaExpression());
    aAutoRestrictExpressionEClass.getESuperTypes().add(this.getAAlphaExpression());
    aVariableExpressionEClass.getESuperTypes().add(this.getAAlphaExpression());
    aConstantExpressionEClass.getESuperTypes().add(this.getAAlphaExpression());
    aBooleanExpressionEClass.getESuperTypes().add(this.getAConstantExpression());
    aIntegerExpressionEClass.getESuperTypes().add(this.getAConstantExpression());
    aRealExpressionEClass.getESuperTypes().add(this.getAConstantExpression());
    aMultiArgExpressionEClass.getESuperTypes().add(this.getAAlphaExpression());
    aMultiArgArithmeticExpressionEClass.getESuperTypes().add(this.getAMultiArgExpression());
    aMultiArgLogicalExpressionEClass.getESuperTypes().add(this.getAMultiArgExpression());
    aExternalFunctionCallEClass.getESuperTypes().add(this.getAMultiArgExpression());
    aBinaryPolyObjExpressionEClass.getESuperTypes().add(this.getAPolyhedralObjectExpression());
    aOrExpressionEClass.getESuperTypes().add(this.getAAlphaExpression());
    aAndExpressionEClass.getESuperTypes().add(this.getAAlphaExpression());
    aRelationalExpressionEClass.getESuperTypes().add(this.getAAlphaExpression());
    aAdditiveExpressionEClass.getESuperTypes().add(this.getAAlphaExpression());
    aMultiplicativeExpressionEClass.getESuperTypes().add(this.getAAlphaExpression());
    aMinMaxExpressionEClass.getESuperTypes().add(this.getAAlphaExpression());

    // Initialize classes and features; add operations and parameters
    initEClass(aStartEClass, AStart.class, "AStart", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getAStart_Elements(), this.getAbstractElement(), null, "elements", null, 0, -1, AStart.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(abstractElementEClass, AbstractElement.class, "AbstractElement", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(aPackageDeclarationEClass, APackageDeclaration.class, "APackageDeclaration", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getAPackageDeclaration_Name(), ecorePackage.getEString(), "name", null, 0, 1, APackageDeclaration.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getAPackageDeclaration_Elements(), this.getAbstractElement(), null, "elements", null, 0, -1, APackageDeclaration.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(aImportEClass, AImport.class, "AImport", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getAImport_ImportedNamespace(), ecorePackage.getEString(), "importedNamespace", null, 0, 1, AImport.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(aConstantDeclarationEClass, AConstantDeclaration.class, "AConstantDeclaration", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(aExternalFunctionDeclarationEClass, AExternalFunctionDeclaration.class, "AExternalFunctionDeclaration", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(aExternalFunctionEClass, AExternalFunction.class, "AExternalFunction", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getAExternalFunction_Name(), ecorePackage.getEString(), "name", null, 0, 1, AExternalFunction.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getAExternalFunction_InputCardinarity(), ecorePackage.getEInt(), "inputCardinarity", null, 0, 1, AExternalFunction.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(aConstantEClass, AConstant.class, "AConstant", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getAConstant_Name(), ecorePackage.getEString(), "name", null, 0, 1, AConstant.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getAConstant_Value(), ecorePackage.getEInt(), "value", null, 0, 1, AConstant.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(aAffineSystemEClass, AAffineSystem.class, "AAffineSystem", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getAAffineSystem_Name(), ecorePackage.getEString(), "name", null, 0, 1, AAffineSystem.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getAAffineSystem_Parameters(), ecorePackage.getEString(), "parameters", null, 0, 1, AAffineSystem.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getAAffineSystem_PolyObjects(), this.getPolyhedralObject(), null, "polyObjects", null, 0, -1, AAffineSystem.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getAAffineSystem_InputDeclarations(), this.getAVariableDeclaration(), null, "inputDeclarations", null, 0, -1, AAffineSystem.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getAAffineSystem_OutputDeclarations(), this.getAVariableDeclaration(), null, "outputDeclarations", null, 0, -1, AAffineSystem.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getAAffineSystem_LocalvarDeclarations(), this.getAVariableDeclaration(), null, "localvarDeclarations", null, 0, -1, AAffineSystem.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getAAffineSystem_FuzzyVariables(), this.getAFuzzyVariableDeclaration(), null, "fuzzyVariables", null, 0, -1, AAffineSystem.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getAAffineSystem_WhileDomain(), this.getAPolyhedralObjectExpression(), null, "whileDomain", null, 0, 1, AAffineSystem.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getAAffineSystem_While(), ecorePackage.getEBoolean(), "while", null, 0, 1, AAffineSystem.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getAAffineSystem_TestExpression(), this.getAAlphaExpression(), null, "testExpression", null, 0, 1, AAffineSystem.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getAAffineSystem_UseEquations(), this.getAUseEquation(), null, "useEquations", null, 0, -1, AAffineSystem.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getAAffineSystem_Equations(), this.getAEquation(), null, "equations", null, 0, -1, AAffineSystem.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(aVariableDeclarationEClass, AVariableDeclaration.class, "AVariableDeclaration", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getAVariableDeclaration_VarList(), this.getAVariableList(), null, "varList", null, 0, 1, AVariableDeclaration.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getAVariableDeclaration_Domain(), this.getAPolyhedralObjectExpression(), null, "domain", null, 0, 1, AVariableDeclaration.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(aVariableListEClass, AVariableList.class, "AVariableList", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getAVariableList_Vars(), this.getAVariable(), null, "vars", null, 0, -1, AVariableList.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(aVariableEClass, AVariable.class, "AVariable", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getAVariable_Name(), ecorePackage.getEString(), "name", null, 0, 1, AVariable.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(aFuzzyVariableDeclarationEClass, AFuzzyVariableDeclaration.class, "AFuzzyVariableDeclaration", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getAFuzzyVariableDeclaration_VarList(), this.getAVariableList(), null, "varList", null, 0, 1, AFuzzyVariableDeclaration.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getAFuzzyVariableDeclaration_Relation(), this.getAPolyhedralObjectExpression(), null, "relation", null, 0, 1, AFuzzyVariableDeclaration.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(polyhedralObjectEClass, PolyhedralObject.class, "PolyhedralObject", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getPolyhedralObject_Name(), ecorePackage.getEString(), "name", null, 0, 1, PolyhedralObject.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getPolyhedralObject_Object(), this.getAPolyhedralObjectExpression(), null, "object", null, 0, 1, PolyhedralObject.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(aPolyhedralObjectExpressionEClass, APolyhedralObjectExpression.class, "APolyhedralObjectExpression", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getAPolyhedralObjectExpression_Op(), ecorePackage.getEString(), "op", null, 0, 1, APolyhedralObjectExpression.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getAPolyhedralObjectExpression_Expr(), this.getAPolyhedralObjectExpression(), null, "expr", null, 0, 1, APolyhedralObjectExpression.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(aVariableDomainEClass, AVariableDomain.class, "AVariableDomain", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getAVariableDomain_Var(), this.getAVariable(), null, "var", null, 0, 1, AVariableDomain.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(aRectangularDomainEClass, ARectangularDomain.class, "ARectangularDomain", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getARectangularDomain_Dimensions(), ecorePackage.getEString(), "dimensions", null, 0, -1, ARectangularDomain.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, !IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getARectangularDomain_Names(), ecorePackage.getEString(), "names", null, 0, -1, ARectangularDomain.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, !IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(aDeclaredObjectEClass, ADeclaredObject.class, "ADeclaredObject", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getADeclaredObject_Object(), this.getPolyhedralObject(), null, "object", null, 0, 1, ADeclaredObject.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(aislSetEClass, AISLSet.class, "AISLSet", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getAISLSet_Sets(), this.getAISLBasicSet(), null, "sets", null, 0, -1, AISLSet.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getAISLSet_Relations(), this.getAISLBasicSet(), null, "relations", null, 0, -1, AISLSet.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(aislBasicSetEClass, AISLBasicSet.class, "AISLBasicSet", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getAISLBasicSet_Dims(), ecorePackage.getEString(), "dims", null, 0, 1, AISLBasicSet.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getAISLBasicSet_ConstraintString(), ecorePackage.getEString(), "constraintString", null, 0, 1, AISLBasicSet.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(aislRelationEClass, AISLRelation.class, "AISLRelation", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getAISLRelation_Relations(), this.getAISLBasicRelation(), null, "relations", null, 0, -1, AISLRelation.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(aislBasicRelationEClass, AISLBasicRelation.class, "AISLBasicRelation", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getAISLBasicRelation_InDims(), ecorePackage.getEString(), "inDims", null, 0, 1, AISLBasicRelation.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getAISLBasicRelation_OutDims(), ecorePackage.getEString(), "outDims", null, 0, 1, AISLBasicRelation.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getAISLBasicRelation_ConstraintStr(), ecorePackage.getEString(), "constraintStr", null, 0, 1, AISLBasicRelation.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(aEquationEClass, AEquation.class, "AEquation", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getAEquation_Var(), this.getAVariable(), null, "var", null, 0, 1, AEquation.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getAEquation_Indexes(), ecorePackage.getEString(), "indexes", null, 0, 1, AEquation.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getAEquation_Expr(), this.getAAlphaExpression(), null, "expr", null, 0, 1, AEquation.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(aUseEquationEClass, AUseEquation.class, "AUseEquation", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getAUseEquation_InstantiationDomain(), this.getAPolyhedralObjectExpression(), null, "instantiationDomain", null, 0, 1, AUseEquation.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getAUseEquation_SubsystemDims(), ecorePackage.getEString(), "subsystemDims", null, 0, 1, AUseEquation.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getAUseEquation_OutputExprs(), this.getAAlphaExpression(), null, "outputExprs", null, 0, -1, AUseEquation.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getAUseEquation_System(), this.getAAffineSystem(), null, "system", null, 0, 1, AUseEquation.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getAUseEquation_CallParams(), this.getAIndexAffineExpressionList(), null, "callParams", null, 0, 1, AUseEquation.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getAUseEquation_InputExprs(), this.getAAlphaExpression(), null, "inputExprs", null, 0, -1, AUseEquation.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(aAlphaExpressionEClass, AAlphaExpression.class, "AAlphaExpression", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(aNotExpressionEClass, ANotExpression.class, "ANotExpression", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getANotExpression_Op(), ecorePackage.getEString(), "op", null, 0, 1, ANotExpression.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getANotExpression_Expr(), this.getAAlphaExpression(), null, "expr", null, 0, 1, ANotExpression.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(aNegateExpressionEClass, ANegateExpression.class, "ANegateExpression", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getANegateExpression_Op(), ecorePackage.getEString(), "op", null, 0, 1, ANegateExpression.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getANegateExpression_Expr(), this.getAAlphaExpression(), null, "expr", null, 0, 1, ANegateExpression.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(aCaseExpressionEClass, ACaseExpression.class, "ACaseExpression", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getACaseExpression_Name(), ecorePackage.getEString(), "name", null, 0, 1, ACaseExpression.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getACaseExpression_Exprs(), this.getAAlphaExpression(), null, "exprs", null, 0, -1, ACaseExpression.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(aDependenceExpressionEClass, ADependenceExpression.class, "ADependenceExpression", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getADependenceExpression_Function(), this.getAFunction(), null, "function", null, 0, 1, ADependenceExpression.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getADependenceExpression_Expr(), this.getAAlphaExpression(), null, "expr", null, 0, 1, ADependenceExpression.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(aSelectDependenceExpressionEClass, ASelectDependenceExpression.class, "ASelectDependenceExpression", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getASelectDependenceExpression_Relation(), this.getAPolyhedralObjectExpression(), null, "relation", null, 0, 1, ASelectDependenceExpression.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getASelectDependenceExpression_Expr(), this.getAAlphaExpression(), null, "expr", null, 0, 1, ASelectDependenceExpression.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(aDependenceInArrayNotationEClass, ADependenceInArrayNotation.class, "ADependenceInArrayNotation", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getADependenceInArrayNotation_Var(), this.getAVariable(), null, "var", null, 0, 1, ADependenceInArrayNotation.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getADependenceInArrayNotation_Dep(), this.getAIndexAffineExpressionList(), null, "dep", null, 0, 1, ADependenceInArrayNotation.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(aIfExpressionEClass, AIfExpression.class, "AIfExpression", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getAIfExpression_Cond(), this.getAAlphaExpression(), null, "cond", null, 0, 1, AIfExpression.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getAIfExpression_Then(), this.getAAlphaExpression(), null, "then", null, 0, 1, AIfExpression.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getAIfExpression_Else(), this.getAAlphaExpression(), null, "else", null, 0, 1, AIfExpression.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(aIndexExpressionEClass, AIndexExpression.class, "AIndexExpression", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getAIndexExpression_Indexes(), ecorePackage.getEString(), "indexes", null, 0, 1, AIndexExpression.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getAIndexExpression_Func(), ecorePackage.getEString(), "func", null, 0, 1, AIndexExpression.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(aIndexExpressionInArrayNotationEClass, AIndexExpressionInArrayNotation.class, "AIndexExpressionInArrayNotation", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getAIndexExpressionInArrayNotation_Func(), ecorePackage.getEString(), "func", null, 0, 1, AIndexExpressionInArrayNotation.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(aReduceExpressionEClass, AReduceExpression.class, "AReduceExpression", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getAReduceExpression_Op(), this.getAReductionOperator(), null, "op", null, 0, 1, AReduceExpression.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getAReduceExpression_Projection(), ecorePackage.getEObject(), null, "projection", null, 0, 1, AReduceExpression.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getAReduceExpression_Expr(), this.getAAlphaExpression(), null, "expr", null, 0, 1, AReduceExpression.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(aArgReduceExpressionEClass, AArgReduceExpression.class, "AArgReduceExpression", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getAArgReduceExpression_Op(), this.getAReductionOperator(), null, "op", null, 0, 1, AArgReduceExpression.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getAArgReduceExpression_Projection(), ecorePackage.getEObject(), null, "projection", null, 0, 1, AArgReduceExpression.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getAArgReduceExpression_Expr(), this.getAAlphaExpression(), null, "expr", null, 0, 1, AArgReduceExpression.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(aConvExpressionEClass, AConvExpression.class, "AConvExpression", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getAConvExpression_Domain(), this.getAPolyhedralObjectExpression(), null, "domain", null, 0, 1, AConvExpression.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getAConvExpression_Kernel(), this.getAAlphaExpression(), null, "kernel", null, 0, 1, AConvExpression.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getAConvExpression_Data(), this.getAAlphaExpression(), null, "data", null, 0, 1, AConvExpression.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(aRestrictExpressionEClass, ARestrictExpression.class, "ARestrictExpression", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getARestrictExpression_Domain(), this.getAPolyObjectInRestrict(), null, "domain", null, 0, 1, ARestrictExpression.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getARestrictExpression_Expr(), this.getAAlphaExpression(), null, "expr", null, 0, 1, ARestrictExpression.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(aPolyObjectInRestrictEClass, APolyObjectInRestrict.class, "APolyObjectInRestrict", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(aAutoRestrictExpressionEClass, AAutoRestrictExpression.class, "AAutoRestrictExpression", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getAAutoRestrictExpression_Expr(), this.getAAlphaExpression(), null, "expr", null, 0, 1, AAutoRestrictExpression.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(aVariableExpressionEClass, AVariableExpression.class, "AVariableExpression", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getAVariableExpression_Var(), this.getAVariable(), null, "var", null, 0, 1, AVariableExpression.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(aConstantExpressionEClass, AConstantExpression.class, "AConstantExpression", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(aBooleanExpressionEClass, ABooleanExpression.class, "ABooleanExpression", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getABooleanExpression_Value(), ecorePackage.getEString(), "value", null, 0, 1, ABooleanExpression.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(aIntegerExpressionEClass, AIntegerExpression.class, "AIntegerExpression", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getAIntegerExpression_Value(), ecorePackage.getEInt(), "value", null, 0, 1, AIntegerExpression.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(aRealExpressionEClass, ARealExpression.class, "ARealExpression", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getARealExpression_Value(), ecorePackage.getEString(), "value", null, 0, 1, ARealExpression.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(aMultiArgExpressionEClass, AMultiArgExpression.class, "AMultiArgExpression", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getAMultiArgExpression_Exprs(), this.getAAlphaExpression(), null, "exprs", null, 0, -1, AMultiArgExpression.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(aMultiArgArithmeticExpressionEClass, AMultiArgArithmeticExpression.class, "AMultiArgArithmeticExpression", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getAMultiArgArithmeticExpression_Op(), ecorePackage.getEString(), "op", null, 0, 1, AMultiArgArithmeticExpression.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(aMultiArgLogicalExpressionEClass, AMultiArgLogicalExpression.class, "AMultiArgLogicalExpression", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getAMultiArgLogicalExpression_Op(), ecorePackage.getEString(), "op", null, 0, 1, AMultiArgLogicalExpression.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(aExternalFunctionCallEClass, AExternalFunctionCall.class, "AExternalFunctionCall", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getAExternalFunctionCall_Func(), this.getAExternalFunction(), null, "func", null, 0, 1, AExternalFunctionCall.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(aIndexAffineExpressionListEClass, AIndexAffineExpressionList.class, "AIndexAffineExpressionList", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getAIndexAffineExpressionList_Exprs(), ecorePackage.getEString(), "exprs", null, 0, -1, AIndexAffineExpressionList.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, !IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(aFunctionEClass, AFunction.class, "AFunction", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getAFunction_Indexes(), ecorePackage.getEString(), "indexes", null, 0, 1, AFunction.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getAFunction_Func(), this.getAIndexAffineExpressionList(), null, "func", null, 0, 1, AFunction.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(aFunctionInArrayNotationEClass, AFunctionInArrayNotation.class, "AFunctionInArrayNotation", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getAFunctionInArrayNotation_NewIds(), this.getAIndexAffineExpressionList(), null, "newIds", null, 0, 1, AFunctionInArrayNotation.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(aReductionOperatorEClass, AReductionOperator.class, "AReductionOperator", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getAReductionOperator_Op(), this.getAExternalFunction(), null, "op", null, 0, 1, AReductionOperator.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getAReductionOperator_Builtin(), ecorePackage.getEString(), "builtin", null, 0, 1, AReductionOperator.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(aBinaryPolyObjExpressionEClass, ABinaryPolyObjExpression.class, "ABinaryPolyObjExpression", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getABinaryPolyObjExpression_Left(), this.getAPolyhedralObjectExpression(), null, "left", null, 0, 1, ABinaryPolyObjExpression.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getABinaryPolyObjExpression_Operator(), ecorePackage.getEString(), "operator", null, 0, 1, ABinaryPolyObjExpression.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getABinaryPolyObjExpression_Right(), this.getAPolyhedralObjectExpression(), null, "right", null, 0, 1, ABinaryPolyObjExpression.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(aOrExpressionEClass, AOrExpression.class, "AOrExpression", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getAOrExpression_Left(), this.getAAlphaExpression(), null, "left", null, 0, 1, AOrExpression.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getAOrExpression_Operator(), ecorePackage.getEString(), "operator", null, 0, 1, AOrExpression.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getAOrExpression_Right(), this.getAAlphaExpression(), null, "right", null, 0, 1, AOrExpression.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(aAndExpressionEClass, AAndExpression.class, "AAndExpression", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getAAndExpression_Left(), this.getAAlphaExpression(), null, "left", null, 0, 1, AAndExpression.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getAAndExpression_Operator(), ecorePackage.getEString(), "operator", null, 0, 1, AAndExpression.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getAAndExpression_Right(), this.getAAlphaExpression(), null, "right", null, 0, 1, AAndExpression.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(aRelationalExpressionEClass, ARelationalExpression.class, "ARelationalExpression", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getARelationalExpression_Left(), this.getAAlphaExpression(), null, "left", null, 0, 1, ARelationalExpression.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getARelationalExpression_Operator(), ecorePackage.getEString(), "operator", null, 0, 1, ARelationalExpression.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getARelationalExpression_Right(), this.getAAlphaExpression(), null, "right", null, 0, 1, ARelationalExpression.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(aAdditiveExpressionEClass, AAdditiveExpression.class, "AAdditiveExpression", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getAAdditiveExpression_Left(), this.getAAlphaExpression(), null, "left", null, 0, 1, AAdditiveExpression.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getAAdditiveExpression_Op(), ecorePackage.getEString(), "op", null, 0, 1, AAdditiveExpression.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getAAdditiveExpression_Right(), this.getAAlphaExpression(), null, "right", null, 0, 1, AAdditiveExpression.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(aMultiplicativeExpressionEClass, AMultiplicativeExpression.class, "AMultiplicativeExpression", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getAMultiplicativeExpression_Left(), this.getAAlphaExpression(), null, "left", null, 0, 1, AMultiplicativeExpression.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getAMultiplicativeExpression_Op(), ecorePackage.getEString(), "op", null, 0, 1, AMultiplicativeExpression.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getAMultiplicativeExpression_Right(), this.getAAlphaExpression(), null, "right", null, 0, 1, AMultiplicativeExpression.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(aMinMaxExpressionEClass, AMinMaxExpression.class, "AMinMaxExpression", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getAMinMaxExpression_Left(), this.getAAlphaExpression(), null, "left", null, 0, 1, AMinMaxExpression.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getAMinMaxExpression_Op(), ecorePackage.getEString(), "op", null, 0, 1, AMinMaxExpression.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getAMinMaxExpression_Right(), this.getAAlphaExpression(), null, "right", null, 0, 1, AMinMaxExpression.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    // Create resource
    createResource(eNS_URI);
  }

} //AlphaPackageImpl
