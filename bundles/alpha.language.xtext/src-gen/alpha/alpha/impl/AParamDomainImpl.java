/**
 * generated by Xtext 2.12.0
 */
package alpha.alpha.impl;

import alpha.alpha.AIndexList;
import alpha.alpha.AParamDomain;
import alpha.alpha.AlphaPackage;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>AParam Domain</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link alpha.alpha.impl.AParamDomainImpl#getDims <em>Dims</em>}</li>
 *   <li>{@link alpha.alpha.impl.AParamDomainImpl#getConstraintString <em>Constraint String</em>}</li>
 * </ul>
 *
 * @generated
 */
public class AParamDomainImpl extends MinimalEObjectImpl.Container implements AParamDomain
{
  /**
   * The cached value of the '{@link #getDims() <em>Dims</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getDims()
   * @generated
   * @ordered
   */
  protected AIndexList dims;

  /**
   * The default value of the '{@link #getConstraintString() <em>Constraint String</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getConstraintString()
   * @generated
   * @ordered
   */
  protected static final String CONSTRAINT_STRING_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getConstraintString() <em>Constraint String</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getConstraintString()
   * @generated
   * @ordered
   */
  protected String constraintString = CONSTRAINT_STRING_EDEFAULT;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected AParamDomainImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return AlphaPackage.Literals.APARAM_DOMAIN;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public AIndexList getDims()
  {
    return dims;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetDims(AIndexList newDims, NotificationChain msgs)
  {
    AIndexList oldDims = dims;
    dims = newDims;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, AlphaPackage.APARAM_DOMAIN__DIMS, oldDims, newDims);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setDims(AIndexList newDims)
  {
    if (newDims != dims)
    {
      NotificationChain msgs = null;
      if (dims != null)
        msgs = ((InternalEObject)dims).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - AlphaPackage.APARAM_DOMAIN__DIMS, null, msgs);
      if (newDims != null)
        msgs = ((InternalEObject)newDims).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - AlphaPackage.APARAM_DOMAIN__DIMS, null, msgs);
      msgs = basicSetDims(newDims, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, AlphaPackage.APARAM_DOMAIN__DIMS, newDims, newDims));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getConstraintString()
  {
    return constraintString;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setConstraintString(String newConstraintString)
  {
    String oldConstraintString = constraintString;
    constraintString = newConstraintString;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, AlphaPackage.APARAM_DOMAIN__CONSTRAINT_STRING, oldConstraintString, constraintString));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case AlphaPackage.APARAM_DOMAIN__DIMS:
        return basicSetDims(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case AlphaPackage.APARAM_DOMAIN__DIMS:
        return getDims();
      case AlphaPackage.APARAM_DOMAIN__CONSTRAINT_STRING:
        return getConstraintString();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case AlphaPackage.APARAM_DOMAIN__DIMS:
        setDims((AIndexList)newValue);
        return;
      case AlphaPackage.APARAM_DOMAIN__CONSTRAINT_STRING:
        setConstraintString((String)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case AlphaPackage.APARAM_DOMAIN__DIMS:
        setDims((AIndexList)null);
        return;
      case AlphaPackage.APARAM_DOMAIN__CONSTRAINT_STRING:
        setConstraintString(CONSTRAINT_STRING_EDEFAULT);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case AlphaPackage.APARAM_DOMAIN__DIMS:
        return dims != null;
      case AlphaPackage.APARAM_DOMAIN__CONSTRAINT_STRING:
        return CONSTRAINT_STRING_EDEFAULT == null ? constraintString != null : !CONSTRAINT_STRING_EDEFAULT.equals(constraintString);
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuffer result = new StringBuffer(super.toString());
    result.append(" (constraintString: ");
    result.append(constraintString);
    result.append(')');
    return result.toString();
  }

} //AParamDomainImpl
