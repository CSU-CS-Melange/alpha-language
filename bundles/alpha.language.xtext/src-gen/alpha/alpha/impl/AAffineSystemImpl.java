/**
 * generated by Xtext 2.12.0
 */
package alpha.alpha.impl;

import alpha.alpha.AAffineSystem;
import alpha.alpha.AEquation;
import alpha.alpha.AFuzzyVariableDeclaration;
import alpha.alpha.AParamDomain;
import alpha.alpha.AUseEquation;
import alpha.alpha.AVariableDeclaration;
import alpha.alpha.AlphaPackage;

import java.util.Collection;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;

import org.eclipse.emf.ecore.util.EObjectContainmentEList;
import org.eclipse.emf.ecore.util.InternalEList;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>AAffine System</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link alpha.alpha.impl.AAffineSystemImpl#getName <em>Name</em>}</li>
 *   <li>{@link alpha.alpha.impl.AAffineSystemImpl#getParameters <em>Parameters</em>}</li>
 *   <li>{@link alpha.alpha.impl.AAffineSystemImpl#getInputDeclarations <em>Input Declarations</em>}</li>
 *   <li>{@link alpha.alpha.impl.AAffineSystemImpl#getOutputDeclarations <em>Output Declarations</em>}</li>
 *   <li>{@link alpha.alpha.impl.AAffineSystemImpl#getLocalvarDeclarations <em>Localvar Declarations</em>}</li>
 *   <li>{@link alpha.alpha.impl.AAffineSystemImpl#getFuzzyVariables <em>Fuzzy Variables</em>}</li>
 *   <li>{@link alpha.alpha.impl.AAffineSystemImpl#getUseEquations <em>Use Equations</em>}</li>
 *   <li>{@link alpha.alpha.impl.AAffineSystemImpl#getEquations <em>Equations</em>}</li>
 * </ul>
 *
 * @generated
 */
public class AAffineSystemImpl extends AbstractElementImpl implements AAffineSystem
{
  /**
   * The default value of the '{@link #getName() <em>Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getName()
   * @generated
   * @ordered
   */
  protected static final String NAME_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getName() <em>Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getName()
   * @generated
   * @ordered
   */
  protected String name = NAME_EDEFAULT;

  /**
   * The cached value of the '{@link #getParameters() <em>Parameters</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getParameters()
   * @generated
   * @ordered
   */
  protected AParamDomain parameters;

  /**
   * The cached value of the '{@link #getInputDeclarations() <em>Input Declarations</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getInputDeclarations()
   * @generated
   * @ordered
   */
  protected EList<AVariableDeclaration> inputDeclarations;

  /**
   * The cached value of the '{@link #getOutputDeclarations() <em>Output Declarations</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getOutputDeclarations()
   * @generated
   * @ordered
   */
  protected EList<AVariableDeclaration> outputDeclarations;

  /**
   * The cached value of the '{@link #getLocalvarDeclarations() <em>Localvar Declarations</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getLocalvarDeclarations()
   * @generated
   * @ordered
   */
  protected EList<AVariableDeclaration> localvarDeclarations;

  /**
   * The cached value of the '{@link #getFuzzyVariables() <em>Fuzzy Variables</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getFuzzyVariables()
   * @generated
   * @ordered
   */
  protected EList<AFuzzyVariableDeclaration> fuzzyVariables;

  /**
   * The cached value of the '{@link #getUseEquations() <em>Use Equations</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getUseEquations()
   * @generated
   * @ordered
   */
  protected EList<AUseEquation> useEquations;

  /**
   * The cached value of the '{@link #getEquations() <em>Equations</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getEquations()
   * @generated
   * @ordered
   */
  protected EList<AEquation> equations;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected AAffineSystemImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return AlphaPackage.Literals.AAFFINE_SYSTEM;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getName()
  {
    return name;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setName(String newName)
  {
    String oldName = name;
    name = newName;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, AlphaPackage.AAFFINE_SYSTEM__NAME, oldName, name));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public AParamDomain getParameters()
  {
    return parameters;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetParameters(AParamDomain newParameters, NotificationChain msgs)
  {
    AParamDomain oldParameters = parameters;
    parameters = newParameters;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, AlphaPackage.AAFFINE_SYSTEM__PARAMETERS, oldParameters, newParameters);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setParameters(AParamDomain newParameters)
  {
    if (newParameters != parameters)
    {
      NotificationChain msgs = null;
      if (parameters != null)
        msgs = ((InternalEObject)parameters).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - AlphaPackage.AAFFINE_SYSTEM__PARAMETERS, null, msgs);
      if (newParameters != null)
        msgs = ((InternalEObject)newParameters).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - AlphaPackage.AAFFINE_SYSTEM__PARAMETERS, null, msgs);
      msgs = basicSetParameters(newParameters, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, AlphaPackage.AAFFINE_SYSTEM__PARAMETERS, newParameters, newParameters));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EList<AVariableDeclaration> getInputDeclarations()
  {
    if (inputDeclarations == null)
    {
      inputDeclarations = new EObjectContainmentEList<AVariableDeclaration>(AVariableDeclaration.class, this, AlphaPackage.AAFFINE_SYSTEM__INPUT_DECLARATIONS);
    }
    return inputDeclarations;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EList<AVariableDeclaration> getOutputDeclarations()
  {
    if (outputDeclarations == null)
    {
      outputDeclarations = new EObjectContainmentEList<AVariableDeclaration>(AVariableDeclaration.class, this, AlphaPackage.AAFFINE_SYSTEM__OUTPUT_DECLARATIONS);
    }
    return outputDeclarations;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EList<AVariableDeclaration> getLocalvarDeclarations()
  {
    if (localvarDeclarations == null)
    {
      localvarDeclarations = new EObjectContainmentEList<AVariableDeclaration>(AVariableDeclaration.class, this, AlphaPackage.AAFFINE_SYSTEM__LOCALVAR_DECLARATIONS);
    }
    return localvarDeclarations;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EList<AFuzzyVariableDeclaration> getFuzzyVariables()
  {
    if (fuzzyVariables == null)
    {
      fuzzyVariables = new EObjectContainmentEList<AFuzzyVariableDeclaration>(AFuzzyVariableDeclaration.class, this, AlphaPackage.AAFFINE_SYSTEM__FUZZY_VARIABLES);
    }
    return fuzzyVariables;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EList<AUseEquation> getUseEquations()
  {
    if (useEquations == null)
    {
      useEquations = new EObjectContainmentEList<AUseEquation>(AUseEquation.class, this, AlphaPackage.AAFFINE_SYSTEM__USE_EQUATIONS);
    }
    return useEquations;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EList<AEquation> getEquations()
  {
    if (equations == null)
    {
      equations = new EObjectContainmentEList<AEquation>(AEquation.class, this, AlphaPackage.AAFFINE_SYSTEM__EQUATIONS);
    }
    return equations;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case AlphaPackage.AAFFINE_SYSTEM__PARAMETERS:
        return basicSetParameters(null, msgs);
      case AlphaPackage.AAFFINE_SYSTEM__INPUT_DECLARATIONS:
        return ((InternalEList<?>)getInputDeclarations()).basicRemove(otherEnd, msgs);
      case AlphaPackage.AAFFINE_SYSTEM__OUTPUT_DECLARATIONS:
        return ((InternalEList<?>)getOutputDeclarations()).basicRemove(otherEnd, msgs);
      case AlphaPackage.AAFFINE_SYSTEM__LOCALVAR_DECLARATIONS:
        return ((InternalEList<?>)getLocalvarDeclarations()).basicRemove(otherEnd, msgs);
      case AlphaPackage.AAFFINE_SYSTEM__FUZZY_VARIABLES:
        return ((InternalEList<?>)getFuzzyVariables()).basicRemove(otherEnd, msgs);
      case AlphaPackage.AAFFINE_SYSTEM__USE_EQUATIONS:
        return ((InternalEList<?>)getUseEquations()).basicRemove(otherEnd, msgs);
      case AlphaPackage.AAFFINE_SYSTEM__EQUATIONS:
        return ((InternalEList<?>)getEquations()).basicRemove(otherEnd, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case AlphaPackage.AAFFINE_SYSTEM__NAME:
        return getName();
      case AlphaPackage.AAFFINE_SYSTEM__PARAMETERS:
        return getParameters();
      case AlphaPackage.AAFFINE_SYSTEM__INPUT_DECLARATIONS:
        return getInputDeclarations();
      case AlphaPackage.AAFFINE_SYSTEM__OUTPUT_DECLARATIONS:
        return getOutputDeclarations();
      case AlphaPackage.AAFFINE_SYSTEM__LOCALVAR_DECLARATIONS:
        return getLocalvarDeclarations();
      case AlphaPackage.AAFFINE_SYSTEM__FUZZY_VARIABLES:
        return getFuzzyVariables();
      case AlphaPackage.AAFFINE_SYSTEM__USE_EQUATIONS:
        return getUseEquations();
      case AlphaPackage.AAFFINE_SYSTEM__EQUATIONS:
        return getEquations();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @SuppressWarnings("unchecked")
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case AlphaPackage.AAFFINE_SYSTEM__NAME:
        setName((String)newValue);
        return;
      case AlphaPackage.AAFFINE_SYSTEM__PARAMETERS:
        setParameters((AParamDomain)newValue);
        return;
      case AlphaPackage.AAFFINE_SYSTEM__INPUT_DECLARATIONS:
        getInputDeclarations().clear();
        getInputDeclarations().addAll((Collection<? extends AVariableDeclaration>)newValue);
        return;
      case AlphaPackage.AAFFINE_SYSTEM__OUTPUT_DECLARATIONS:
        getOutputDeclarations().clear();
        getOutputDeclarations().addAll((Collection<? extends AVariableDeclaration>)newValue);
        return;
      case AlphaPackage.AAFFINE_SYSTEM__LOCALVAR_DECLARATIONS:
        getLocalvarDeclarations().clear();
        getLocalvarDeclarations().addAll((Collection<? extends AVariableDeclaration>)newValue);
        return;
      case AlphaPackage.AAFFINE_SYSTEM__FUZZY_VARIABLES:
        getFuzzyVariables().clear();
        getFuzzyVariables().addAll((Collection<? extends AFuzzyVariableDeclaration>)newValue);
        return;
      case AlphaPackage.AAFFINE_SYSTEM__USE_EQUATIONS:
        getUseEquations().clear();
        getUseEquations().addAll((Collection<? extends AUseEquation>)newValue);
        return;
      case AlphaPackage.AAFFINE_SYSTEM__EQUATIONS:
        getEquations().clear();
        getEquations().addAll((Collection<? extends AEquation>)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case AlphaPackage.AAFFINE_SYSTEM__NAME:
        setName(NAME_EDEFAULT);
        return;
      case AlphaPackage.AAFFINE_SYSTEM__PARAMETERS:
        setParameters((AParamDomain)null);
        return;
      case AlphaPackage.AAFFINE_SYSTEM__INPUT_DECLARATIONS:
        getInputDeclarations().clear();
        return;
      case AlphaPackage.AAFFINE_SYSTEM__OUTPUT_DECLARATIONS:
        getOutputDeclarations().clear();
        return;
      case AlphaPackage.AAFFINE_SYSTEM__LOCALVAR_DECLARATIONS:
        getLocalvarDeclarations().clear();
        return;
      case AlphaPackage.AAFFINE_SYSTEM__FUZZY_VARIABLES:
        getFuzzyVariables().clear();
        return;
      case AlphaPackage.AAFFINE_SYSTEM__USE_EQUATIONS:
        getUseEquations().clear();
        return;
      case AlphaPackage.AAFFINE_SYSTEM__EQUATIONS:
        getEquations().clear();
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case AlphaPackage.AAFFINE_SYSTEM__NAME:
        return NAME_EDEFAULT == null ? name != null : !NAME_EDEFAULT.equals(name);
      case AlphaPackage.AAFFINE_SYSTEM__PARAMETERS:
        return parameters != null;
      case AlphaPackage.AAFFINE_SYSTEM__INPUT_DECLARATIONS:
        return inputDeclarations != null && !inputDeclarations.isEmpty();
      case AlphaPackage.AAFFINE_SYSTEM__OUTPUT_DECLARATIONS:
        return outputDeclarations != null && !outputDeclarations.isEmpty();
      case AlphaPackage.AAFFINE_SYSTEM__LOCALVAR_DECLARATIONS:
        return localvarDeclarations != null && !localvarDeclarations.isEmpty();
      case AlphaPackage.AAFFINE_SYSTEM__FUZZY_VARIABLES:
        return fuzzyVariables != null && !fuzzyVariables.isEmpty();
      case AlphaPackage.AAFFINE_SYSTEM__USE_EQUATIONS:
        return useEquations != null && !useEquations.isEmpty();
      case AlphaPackage.AAFFINE_SYSTEM__EQUATIONS:
        return equations != null && !equations.isEmpty();
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuffer result = new StringBuffer(super.toString());
    result.append(" (name: ");
    result.append(name);
    result.append(')');
    return result.toString();
  }

} //AAffineSystemImpl
