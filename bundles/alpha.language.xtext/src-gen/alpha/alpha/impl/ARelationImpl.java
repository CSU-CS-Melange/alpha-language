/**
 * generated by Xtext 2.12.0
 */
package alpha.alpha.impl;

import alpha.alpha.AIndexList;
import alpha.alpha.ARelation;
import alpha.alpha.AlphaPackage;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>ARelation</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link alpha.alpha.impl.ARelationImpl#getInDims <em>In Dims</em>}</li>
 *   <li>{@link alpha.alpha.impl.ARelationImpl#getOutDims <em>Out Dims</em>}</li>
 *   <li>{@link alpha.alpha.impl.ARelationImpl#getConstraintStr <em>Constraint Str</em>}</li>
 * </ul>
 *
 * @generated
 */
public class ARelationImpl extends MinimalEObjectImpl.Container implements ARelation
{
  /**
   * The cached value of the '{@link #getInDims() <em>In Dims</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getInDims()
   * @generated
   * @ordered
   */
  protected AIndexList inDims;

  /**
   * The cached value of the '{@link #getOutDims() <em>Out Dims</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getOutDims()
   * @generated
   * @ordered
   */
  protected AIndexList outDims;

  /**
   * The default value of the '{@link #getConstraintStr() <em>Constraint Str</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getConstraintStr()
   * @generated
   * @ordered
   */
  protected static final String CONSTRAINT_STR_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getConstraintStr() <em>Constraint Str</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getConstraintStr()
   * @generated
   * @ordered
   */
  protected String constraintStr = CONSTRAINT_STR_EDEFAULT;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected ARelationImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return AlphaPackage.Literals.ARELATION;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public AIndexList getInDims()
  {
    return inDims;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetInDims(AIndexList newInDims, NotificationChain msgs)
  {
    AIndexList oldInDims = inDims;
    inDims = newInDims;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, AlphaPackage.ARELATION__IN_DIMS, oldInDims, newInDims);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setInDims(AIndexList newInDims)
  {
    if (newInDims != inDims)
    {
      NotificationChain msgs = null;
      if (inDims != null)
        msgs = ((InternalEObject)inDims).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - AlphaPackage.ARELATION__IN_DIMS, null, msgs);
      if (newInDims != null)
        msgs = ((InternalEObject)newInDims).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - AlphaPackage.ARELATION__IN_DIMS, null, msgs);
      msgs = basicSetInDims(newInDims, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, AlphaPackage.ARELATION__IN_DIMS, newInDims, newInDims));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public AIndexList getOutDims()
  {
    return outDims;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetOutDims(AIndexList newOutDims, NotificationChain msgs)
  {
    AIndexList oldOutDims = outDims;
    outDims = newOutDims;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, AlphaPackage.ARELATION__OUT_DIMS, oldOutDims, newOutDims);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setOutDims(AIndexList newOutDims)
  {
    if (newOutDims != outDims)
    {
      NotificationChain msgs = null;
      if (outDims != null)
        msgs = ((InternalEObject)outDims).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - AlphaPackage.ARELATION__OUT_DIMS, null, msgs);
      if (newOutDims != null)
        msgs = ((InternalEObject)newOutDims).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - AlphaPackage.ARELATION__OUT_DIMS, null, msgs);
      msgs = basicSetOutDims(newOutDims, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, AlphaPackage.ARELATION__OUT_DIMS, newOutDims, newOutDims));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getConstraintStr()
  {
    return constraintStr;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setConstraintStr(String newConstraintStr)
  {
    String oldConstraintStr = constraintStr;
    constraintStr = newConstraintStr;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, AlphaPackage.ARELATION__CONSTRAINT_STR, oldConstraintStr, constraintStr));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case AlphaPackage.ARELATION__IN_DIMS:
        return basicSetInDims(null, msgs);
      case AlphaPackage.ARELATION__OUT_DIMS:
        return basicSetOutDims(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case AlphaPackage.ARELATION__IN_DIMS:
        return getInDims();
      case AlphaPackage.ARELATION__OUT_DIMS:
        return getOutDims();
      case AlphaPackage.ARELATION__CONSTRAINT_STR:
        return getConstraintStr();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case AlphaPackage.ARELATION__IN_DIMS:
        setInDims((AIndexList)newValue);
        return;
      case AlphaPackage.ARELATION__OUT_DIMS:
        setOutDims((AIndexList)newValue);
        return;
      case AlphaPackage.ARELATION__CONSTRAINT_STR:
        setConstraintStr((String)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case AlphaPackage.ARELATION__IN_DIMS:
        setInDims((AIndexList)null);
        return;
      case AlphaPackage.ARELATION__OUT_DIMS:
        setOutDims((AIndexList)null);
        return;
      case AlphaPackage.ARELATION__CONSTRAINT_STR:
        setConstraintStr(CONSTRAINT_STR_EDEFAULT);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case AlphaPackage.ARELATION__IN_DIMS:
        return inDims != null;
      case AlphaPackage.ARELATION__OUT_DIMS:
        return outDims != null;
      case AlphaPackage.ARELATION__CONSTRAINT_STR:
        return CONSTRAINT_STR_EDEFAULT == null ? constraintStr != null : !CONSTRAINT_STR_EDEFAULT.equals(constraintStr);
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuffer result = new StringBuffer(super.toString());
    result.append(" (constraintStr: ");
    result.append(constraintStr);
    result.append(')');
    return result.toString();
  }

} //ARelationImpl
