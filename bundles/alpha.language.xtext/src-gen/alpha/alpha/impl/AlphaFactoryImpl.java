/**
 * generated by Xtext 2.12.0
 */
package alpha.alpha.impl;

import alpha.alpha.*;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.ecore.EPackage;

import org.eclipse.emf.ecore.impl.EFactoryImpl;

import org.eclipse.emf.ecore.plugin.EcorePlugin;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model <b>Factory</b>.
 * <!-- end-user-doc -->
 * @generated
 */
public class AlphaFactoryImpl extends EFactoryImpl implements AlphaFactory
{
  /**
   * Creates the default factory implementation.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static AlphaFactory init()
  {
    try
    {
      AlphaFactory theAlphaFactory = (AlphaFactory)EPackage.Registry.INSTANCE.getEFactory(AlphaPackage.eNS_URI);
      if (theAlphaFactory != null)
      {
        return theAlphaFactory;
      }
    }
    catch (Exception exception)
    {
      EcorePlugin.INSTANCE.log(exception);
    }
    return new AlphaFactoryImpl();
  }

  /**
   * Creates an instance of the factory.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public AlphaFactoryImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EObject create(EClass eClass)
  {
    switch (eClass.getClassifierID())
    {
      case AlphaPackage.ASTART: return createAStart();
      case AlphaPackage.ABSTRACT_ELEMENT: return createAbstractElement();
      case AlphaPackage.APACKAGE_DECLARATION: return createAPackageDeclaration();
      case AlphaPackage.AIMPORT: return createAImport();
      case AlphaPackage.AEXTERNAL_FUNCTION_DECLARATION: return createAExternalFunctionDeclaration();
      case AlphaPackage.AEXTERNAL_FUNCTION: return createAExternalFunction();
      case AlphaPackage.AAFFINE_SYSTEM: return createAAffineSystem();
      case AlphaPackage.AVARIABLE_DECLARATION: return createAVariableDeclaration();
      case AlphaPackage.AVARIABLE_LIST: return createAVariableList();
      case AlphaPackage.AVARIABLE: return createAVariable();
      case AlphaPackage.AFUZZY_VARIABLE_DECLARATION: return createAFuzzyVariableDeclaration();
      case AlphaPackage.AINDEX_DIMENSION: return createAIndexDimension();
      case AlphaPackage.AINDEX_LIST: return createAIndexList();
      case AlphaPackage.ADOMAIN_EXPRESSION: return createADomainExpression();
      case AlphaPackage.ADOMAIN_TERMINAL: return createADomainTerminal();
      case AlphaPackage.AISL_DOMAIN: return createAISLDomain();
      case AlphaPackage.AVARIABLE_DOMAIN: return createAVariableDomain();
      case AlphaPackage.ADOMAIN_PRODUCT: return createADomainProduct();
      case AlphaPackage.ADOMAIN: return createADomain();
      case AlphaPackage.APARAM_DOMAIN: return createAParamDomain();
      case AlphaPackage.ARELATION: return createARelation();
      case AlphaPackage.AEQUATION: return createAEquation();
      case AlphaPackage.AUSE_EQUATION: return createAUseEquation();
      case AlphaPackage.AALPHA_EXPRESSION: return createAAlphaExpression();
      case AlphaPackage.ANOT_EXPRESSION: return createANotExpression();
      case AlphaPackage.ANEGATE_EXPRESSION: return createANegateExpression();
      case AlphaPackage.ACASE_EXPRESSION: return createACaseExpression();
      case AlphaPackage.ADEPENDENCE_EXPRESSION: return createADependenceExpression();
      case AlphaPackage.ADEPENDENCE_IN_ARRAY_NOTATION: return createADependenceInArrayNotation();
      case AlphaPackage.AIF_EXPRESSION: return createAIfExpression();
      case AlphaPackage.AINDEX_EXPRESSION: return createAIndexExpression();
      case AlphaPackage.AREDUCE_EXPRESSION: return createAReduceExpression();
      case AlphaPackage.AARG_REDUCE_EXPRESSION: return createAArgReduceExpression();
      case AlphaPackage.ARESTRICT_EXPRESSION: return createARestrictExpression();
      case AlphaPackage.AVARIABLE_EXPRESSION: return createAVariableExpression();
      case AlphaPackage.ACONSTANT_EXPRESSION: return createAConstantExpression();
      case AlphaPackage.ABOOLEAN_EXPRESSION: return createABooleanExpression();
      case AlphaPackage.AINTEGER_EXPRESSION: return createAIntegerExpression();
      case AlphaPackage.AREAL_EXPRESSION: return createARealExpression();
      case AlphaPackage.AMULTI_ARG_EXPRESSION: return createAMultiArgExpression();
      case AlphaPackage.AMULTI_ARG_ARITHMETIC_EXPRESSION: return createAMultiArgArithmeticExpression();
      case AlphaPackage.AMULTI_ARG_LOGICAL_EXPRESSION: return createAMultiArgLogicalExpression();
      case AlphaPackage.AEXTERNAL_FUNCTION_CALL: return createAExternalFunctionCall();
      case AlphaPackage.AINDEX_AFFINE_EXPRESSION_LIST: return createAIndexAffineExpressionList();
      case AlphaPackage.AFUNCTION: return createAFunction();
      case AlphaPackage.AFUNCTION_IN_ARRAY_NOTATION: return createAFunctionInArrayNotation();
      case AlphaPackage.AREDUCTION_OPERATOR: return createAReductionOperator();
      case AlphaPackage.AOR_EXPRESSION: return createAOrExpression();
      case AlphaPackage.AAND_EXPRESSION: return createAAndExpression();
      case AlphaPackage.ARELATIONAL_EXPRESSION: return createARelationalExpression();
      case AlphaPackage.AADDITIVE_EXPRESSION: return createAAdditiveExpression();
      case AlphaPackage.AMULTIPLICATIVE_EXPRESSION: return createAMultiplicativeExpression();
      case AlphaPackage.AMIN_MAX_EXPRESSION: return createAMinMaxExpression();
      default:
        throw new IllegalArgumentException("The class '" + eClass.getName() + "' is not a valid classifier");
    }
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public AStart createAStart()
  {
    AStartImpl aStart = new AStartImpl();
    return aStart;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public AbstractElement createAbstractElement()
  {
    AbstractElementImpl abstractElement = new AbstractElementImpl();
    return abstractElement;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public APackageDeclaration createAPackageDeclaration()
  {
    APackageDeclarationImpl aPackageDeclaration = new APackageDeclarationImpl();
    return aPackageDeclaration;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public AImport createAImport()
  {
    AImportImpl aImport = new AImportImpl();
    return aImport;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public AExternalFunctionDeclaration createAExternalFunctionDeclaration()
  {
    AExternalFunctionDeclarationImpl aExternalFunctionDeclaration = new AExternalFunctionDeclarationImpl();
    return aExternalFunctionDeclaration;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public AExternalFunction createAExternalFunction()
  {
    AExternalFunctionImpl aExternalFunction = new AExternalFunctionImpl();
    return aExternalFunction;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public AAffineSystem createAAffineSystem()
  {
    AAffineSystemImpl aAffineSystem = new AAffineSystemImpl();
    return aAffineSystem;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public AVariableDeclaration createAVariableDeclaration()
  {
    AVariableDeclarationImpl aVariableDeclaration = new AVariableDeclarationImpl();
    return aVariableDeclaration;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public AVariableList createAVariableList()
  {
    AVariableListImpl aVariableList = new AVariableListImpl();
    return aVariableList;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public AVariable createAVariable()
  {
    AVariableImpl aVariable = new AVariableImpl();
    return aVariable;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public AFuzzyVariableDeclaration createAFuzzyVariableDeclaration()
  {
    AFuzzyVariableDeclarationImpl aFuzzyVariableDeclaration = new AFuzzyVariableDeclarationImpl();
    return aFuzzyVariableDeclaration;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public AIndexDimension createAIndexDimension()
  {
    AIndexDimensionImpl aIndexDimension = new AIndexDimensionImpl();
    return aIndexDimension;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public AIndexList createAIndexList()
  {
    AIndexListImpl aIndexList = new AIndexListImpl();
    return aIndexList;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public ADomainExpression createADomainExpression()
  {
    ADomainExpressionImpl aDomainExpression = new ADomainExpressionImpl();
    return aDomainExpression;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public ADomainTerminal createADomainTerminal()
  {
    ADomainTerminalImpl aDomainTerminal = new ADomainTerminalImpl();
    return aDomainTerminal;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public AISLDomain createAISLDomain()
  {
    AISLDomainImpl aislDomain = new AISLDomainImpl();
    return aislDomain;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public AVariableDomain createAVariableDomain()
  {
    AVariableDomainImpl aVariableDomain = new AVariableDomainImpl();
    return aVariableDomain;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public ADomainProduct createADomainProduct()
  {
    ADomainProductImpl aDomainProduct = new ADomainProductImpl();
    return aDomainProduct;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public ADomain createADomain()
  {
    ADomainImpl aDomain = new ADomainImpl();
    return aDomain;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public AParamDomain createAParamDomain()
  {
    AParamDomainImpl aParamDomain = new AParamDomainImpl();
    return aParamDomain;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public ARelation createARelation()
  {
    ARelationImpl aRelation = new ARelationImpl();
    return aRelation;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public AEquation createAEquation()
  {
    AEquationImpl aEquation = new AEquationImpl();
    return aEquation;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public AUseEquation createAUseEquation()
  {
    AUseEquationImpl aUseEquation = new AUseEquationImpl();
    return aUseEquation;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public AAlphaExpression createAAlphaExpression()
  {
    AAlphaExpressionImpl aAlphaExpression = new AAlphaExpressionImpl();
    return aAlphaExpression;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public ANotExpression createANotExpression()
  {
    ANotExpressionImpl aNotExpression = new ANotExpressionImpl();
    return aNotExpression;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public ANegateExpression createANegateExpression()
  {
    ANegateExpressionImpl aNegateExpression = new ANegateExpressionImpl();
    return aNegateExpression;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public ACaseExpression createACaseExpression()
  {
    ACaseExpressionImpl aCaseExpression = new ACaseExpressionImpl();
    return aCaseExpression;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public ADependenceExpression createADependenceExpression()
  {
    ADependenceExpressionImpl aDependenceExpression = new ADependenceExpressionImpl();
    return aDependenceExpression;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public ADependenceInArrayNotation createADependenceInArrayNotation()
  {
    ADependenceInArrayNotationImpl aDependenceInArrayNotation = new ADependenceInArrayNotationImpl();
    return aDependenceInArrayNotation;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public AIfExpression createAIfExpression()
  {
    AIfExpressionImpl aIfExpression = new AIfExpressionImpl();
    return aIfExpression;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public AIndexExpression createAIndexExpression()
  {
    AIndexExpressionImpl aIndexExpression = new AIndexExpressionImpl();
    return aIndexExpression;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public AReduceExpression createAReduceExpression()
  {
    AReduceExpressionImpl aReduceExpression = new AReduceExpressionImpl();
    return aReduceExpression;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public AArgReduceExpression createAArgReduceExpression()
  {
    AArgReduceExpressionImpl aArgReduceExpression = new AArgReduceExpressionImpl();
    return aArgReduceExpression;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public ARestrictExpression createARestrictExpression()
  {
    ARestrictExpressionImpl aRestrictExpression = new ARestrictExpressionImpl();
    return aRestrictExpression;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public AVariableExpression createAVariableExpression()
  {
    AVariableExpressionImpl aVariableExpression = new AVariableExpressionImpl();
    return aVariableExpression;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public AConstantExpression createAConstantExpression()
  {
    AConstantExpressionImpl aConstantExpression = new AConstantExpressionImpl();
    return aConstantExpression;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public ABooleanExpression createABooleanExpression()
  {
    ABooleanExpressionImpl aBooleanExpression = new ABooleanExpressionImpl();
    return aBooleanExpression;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public AIntegerExpression createAIntegerExpression()
  {
    AIntegerExpressionImpl aIntegerExpression = new AIntegerExpressionImpl();
    return aIntegerExpression;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public ARealExpression createARealExpression()
  {
    ARealExpressionImpl aRealExpression = new ARealExpressionImpl();
    return aRealExpression;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public AMultiArgExpression createAMultiArgExpression()
  {
    AMultiArgExpressionImpl aMultiArgExpression = new AMultiArgExpressionImpl();
    return aMultiArgExpression;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public AMultiArgArithmeticExpression createAMultiArgArithmeticExpression()
  {
    AMultiArgArithmeticExpressionImpl aMultiArgArithmeticExpression = new AMultiArgArithmeticExpressionImpl();
    return aMultiArgArithmeticExpression;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public AMultiArgLogicalExpression createAMultiArgLogicalExpression()
  {
    AMultiArgLogicalExpressionImpl aMultiArgLogicalExpression = new AMultiArgLogicalExpressionImpl();
    return aMultiArgLogicalExpression;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public AExternalFunctionCall createAExternalFunctionCall()
  {
    AExternalFunctionCallImpl aExternalFunctionCall = new AExternalFunctionCallImpl();
    return aExternalFunctionCall;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public AIndexAffineExpressionList createAIndexAffineExpressionList()
  {
    AIndexAffineExpressionListImpl aIndexAffineExpressionList = new AIndexAffineExpressionListImpl();
    return aIndexAffineExpressionList;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public AFunction createAFunction()
  {
    AFunctionImpl aFunction = new AFunctionImpl();
    return aFunction;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public AFunctionInArrayNotation createAFunctionInArrayNotation()
  {
    AFunctionInArrayNotationImpl aFunctionInArrayNotation = new AFunctionInArrayNotationImpl();
    return aFunctionInArrayNotation;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public AReductionOperator createAReductionOperator()
  {
    AReductionOperatorImpl aReductionOperator = new AReductionOperatorImpl();
    return aReductionOperator;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public AOrExpression createAOrExpression()
  {
    AOrExpressionImpl aOrExpression = new AOrExpressionImpl();
    return aOrExpression;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public AAndExpression createAAndExpression()
  {
    AAndExpressionImpl aAndExpression = new AAndExpressionImpl();
    return aAndExpression;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public ARelationalExpression createARelationalExpression()
  {
    ARelationalExpressionImpl aRelationalExpression = new ARelationalExpressionImpl();
    return aRelationalExpression;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public AAdditiveExpression createAAdditiveExpression()
  {
    AAdditiveExpressionImpl aAdditiveExpression = new AAdditiveExpressionImpl();
    return aAdditiveExpression;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public AMultiplicativeExpression createAMultiplicativeExpression()
  {
    AMultiplicativeExpressionImpl aMultiplicativeExpression = new AMultiplicativeExpressionImpl();
    return aMultiplicativeExpression;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public AMinMaxExpression createAMinMaxExpression()
  {
    AMinMaxExpressionImpl aMinMaxExpression = new AMinMaxExpressionImpl();
    return aMinMaxExpression;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public AlphaPackage getAlphaPackage()
  {
    return (AlphaPackage)getEPackage();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @deprecated
   * @generated
   */
  @Deprecated
  public static AlphaPackage getPackage()
  {
    return AlphaPackage.eINSTANCE;
  }

} //AlphaFactoryImpl
