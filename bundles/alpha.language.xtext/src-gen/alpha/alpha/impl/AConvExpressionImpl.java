/**
 * generated by Xtext 2.12.0
 */
package alpha.alpha.impl;

import alpha.alpha.AAlphaExpression;
import alpha.alpha.AConvExpression;
import alpha.alpha.APolyhedralObjectExpression;
import alpha.alpha.AlphaPackage;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>AConv Expression</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link alpha.alpha.impl.AConvExpressionImpl#getDomain <em>Domain</em>}</li>
 *   <li>{@link alpha.alpha.impl.AConvExpressionImpl#getKernel <em>Kernel</em>}</li>
 *   <li>{@link alpha.alpha.impl.AConvExpressionImpl#getData <em>Data</em>}</li>
 * </ul>
 *
 * @generated
 */
public class AConvExpressionImpl extends AAlphaExpressionImpl implements AConvExpression
{
  /**
   * The cached value of the '{@link #getDomain() <em>Domain</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getDomain()
   * @generated
   * @ordered
   */
  protected APolyhedralObjectExpression domain;

  /**
   * The cached value of the '{@link #getKernel() <em>Kernel</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getKernel()
   * @generated
   * @ordered
   */
  protected AAlphaExpression kernel;

  /**
   * The cached value of the '{@link #getData() <em>Data</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getData()
   * @generated
   * @ordered
   */
  protected AAlphaExpression data;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected AConvExpressionImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return AlphaPackage.Literals.ACONV_EXPRESSION;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public APolyhedralObjectExpression getDomain()
  {
    return domain;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetDomain(APolyhedralObjectExpression newDomain, NotificationChain msgs)
  {
    APolyhedralObjectExpression oldDomain = domain;
    domain = newDomain;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, AlphaPackage.ACONV_EXPRESSION__DOMAIN, oldDomain, newDomain);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setDomain(APolyhedralObjectExpression newDomain)
  {
    if (newDomain != domain)
    {
      NotificationChain msgs = null;
      if (domain != null)
        msgs = ((InternalEObject)domain).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - AlphaPackage.ACONV_EXPRESSION__DOMAIN, null, msgs);
      if (newDomain != null)
        msgs = ((InternalEObject)newDomain).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - AlphaPackage.ACONV_EXPRESSION__DOMAIN, null, msgs);
      msgs = basicSetDomain(newDomain, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, AlphaPackage.ACONV_EXPRESSION__DOMAIN, newDomain, newDomain));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public AAlphaExpression getKernel()
  {
    return kernel;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetKernel(AAlphaExpression newKernel, NotificationChain msgs)
  {
    AAlphaExpression oldKernel = kernel;
    kernel = newKernel;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, AlphaPackage.ACONV_EXPRESSION__KERNEL, oldKernel, newKernel);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setKernel(AAlphaExpression newKernel)
  {
    if (newKernel != kernel)
    {
      NotificationChain msgs = null;
      if (kernel != null)
        msgs = ((InternalEObject)kernel).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - AlphaPackage.ACONV_EXPRESSION__KERNEL, null, msgs);
      if (newKernel != null)
        msgs = ((InternalEObject)newKernel).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - AlphaPackage.ACONV_EXPRESSION__KERNEL, null, msgs);
      msgs = basicSetKernel(newKernel, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, AlphaPackage.ACONV_EXPRESSION__KERNEL, newKernel, newKernel));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public AAlphaExpression getData()
  {
    return data;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetData(AAlphaExpression newData, NotificationChain msgs)
  {
    AAlphaExpression oldData = data;
    data = newData;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, AlphaPackage.ACONV_EXPRESSION__DATA, oldData, newData);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setData(AAlphaExpression newData)
  {
    if (newData != data)
    {
      NotificationChain msgs = null;
      if (data != null)
        msgs = ((InternalEObject)data).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - AlphaPackage.ACONV_EXPRESSION__DATA, null, msgs);
      if (newData != null)
        msgs = ((InternalEObject)newData).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - AlphaPackage.ACONV_EXPRESSION__DATA, null, msgs);
      msgs = basicSetData(newData, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, AlphaPackage.ACONV_EXPRESSION__DATA, newData, newData));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case AlphaPackage.ACONV_EXPRESSION__DOMAIN:
        return basicSetDomain(null, msgs);
      case AlphaPackage.ACONV_EXPRESSION__KERNEL:
        return basicSetKernel(null, msgs);
      case AlphaPackage.ACONV_EXPRESSION__DATA:
        return basicSetData(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case AlphaPackage.ACONV_EXPRESSION__DOMAIN:
        return getDomain();
      case AlphaPackage.ACONV_EXPRESSION__KERNEL:
        return getKernel();
      case AlphaPackage.ACONV_EXPRESSION__DATA:
        return getData();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case AlphaPackage.ACONV_EXPRESSION__DOMAIN:
        setDomain((APolyhedralObjectExpression)newValue);
        return;
      case AlphaPackage.ACONV_EXPRESSION__KERNEL:
        setKernel((AAlphaExpression)newValue);
        return;
      case AlphaPackage.ACONV_EXPRESSION__DATA:
        setData((AAlphaExpression)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case AlphaPackage.ACONV_EXPRESSION__DOMAIN:
        setDomain((APolyhedralObjectExpression)null);
        return;
      case AlphaPackage.ACONV_EXPRESSION__KERNEL:
        setKernel((AAlphaExpression)null);
        return;
      case AlphaPackage.ACONV_EXPRESSION__DATA:
        setData((AAlphaExpression)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case AlphaPackage.ACONV_EXPRESSION__DOMAIN:
        return domain != null;
      case AlphaPackage.ACONV_EXPRESSION__KERNEL:
        return kernel != null;
      case AlphaPackage.ACONV_EXPRESSION__DATA:
        return data != null;
    }
    return super.eIsSet(featureID);
  }

} //AConvExpressionImpl
