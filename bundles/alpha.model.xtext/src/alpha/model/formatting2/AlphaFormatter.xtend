/*
 * generated by Xtext 2.13.0
 */
package alpha.model.formatting2

import alpha.model.AlphaPackage
import alpha.model.AlphaRoot
import alpha.model.services.AlphaGrammarAccess
import com.google.inject.Inject
import org.eclipse.xtext.formatting2.AbstractFormatter2
import org.eclipse.xtext.formatting2.IFormattableDocument

class AlphaFormatter extends AbstractFormatter2 {
	
	@Inject extension AlphaGrammarAccess

	def dispatch void format(AlphaRoot alphaRoot, extension IFormattableDocument document) {
		// TODO: format HiddenRegions around keywords, attributes, cross references, etc. 
//		for (AbstractElement abstractElement : alphaRoot.getElements()) {
//			abstractElement.format;
//		}
	}

	def dispatch void format(AlphaPackage alphaPackage, extension IFormattableDocument document) {
		// TODO: format HiddenRegions around keywords, attributes, cross references, etc. 
//		for (AbstractElement abstractElement : alphaPackage.getElements()) {
//			abstractElement.format;
//		}
	}
	
	// TODO: implement for AffineSystem
}
