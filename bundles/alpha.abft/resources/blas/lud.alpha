affine lud [N]->{:N>0}
 inputs
	A : {[i,j] : 0<=i,j<N}
 outputs
	L : {[i,j] : 0<=i<N and 0<=j<=i}
	U : {[i,j] : 0<=j<N and 0<=i<=j}
 let
	U[i,j] = case {
		{: 0 = i}      : A[i,j];
		{: 0 < i <= j} : A[i,j] - reduce(+, [k], {: 0<=k<i} : L[i,k]*U[k,j]);
	};
	
	L[i,j] = case {
		{: 0 = j} : (A[i,j] / U[j,j]);
   		{: 0 < j} : (A[i,j] - reduce(+, [k], {: 0<=k<j} : L[i,k]*U[k,j])) / U[j,j];
	};
.