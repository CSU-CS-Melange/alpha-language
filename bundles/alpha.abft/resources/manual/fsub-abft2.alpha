affine fsub_abft [N]->{: N>0}
 inputs
 	L 			 : {[i,j] : i < N and 0<=j<=i}
 	b 			 : {[i]   : 0<=i<N}
 outputs
 	x 			 : {[i]   : 0<=i<N}
 	Inv_x_c 	 : {[s]   : s=0}
 	
 locals
	x_c_0, x_c_1 : {[s]	 : s=0}

 let
 	x[i] = case {
 		{: 0 = i}   :  b / L[i,i];
 		{: 0 < i}   : (b - reduce(+, (i,j->i), {: 0<=j<i} : L * x[j])) / L[i,i];
 	};
 	 	
 	x_c_0[s]   = reduce (+, [i], x[i]);
 	
 	x_c_1[s]   = reduce (+, [i], 
 		case {
 			{: 0 = i}   :  b[i] / L[i,i];
 			{: 0 < i}   : (b[i] - reduce(+, [j], {: 0<=j<i} : L[i,j] * x[j])) / L[i,i];
 		}
 	);
 	
 	Inv_x_c[s] = (x_c_0 - x_c_1)/x_c_0;
.