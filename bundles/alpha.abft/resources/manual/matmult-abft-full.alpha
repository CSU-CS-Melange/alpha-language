affine matmult_abft_full [N]->{: N>0}
inputs
	A, B : {[i,j] : 0<=i,j<N}
outputs
	C : {[i,j] : 0<=i,j<N}
	Inv_C_i : {[i] : 0<=i<N}
	Inv_C_j : {[j] : 0<=j<N}
	
locals
	C_C_i_0, C_C_i_1: {[i] : 0<=i<N}
	C_C_j_0, C_C_j_1: {[j] : 0<=j<N}
	
let
	C[i,j] = reduce(+, [k], A[i,k]*B[k,j]);
  
	C_C_i_0[i] = reduce(+, [j], C[i,j]);
	
	C_C_i_1[i] = reduce(+, [j,k], A[i,k]*B[k,j]);
 
	C_C_j_0[j] = reduce(+, [i], C[i,j]);
  
	C_C_j_1[j] = reduce(+, [i,k], A[i,k]*B[k,j]);
  
  	Inv_C_i[i] = (C_C_i_0 - C_C_i_1) / C_C_i_0;
  	Inv_C_j[j] = (C_C_j_0 - C_C_j_1) / C_C_j_0;
.