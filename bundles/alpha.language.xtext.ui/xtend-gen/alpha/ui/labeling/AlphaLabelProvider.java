/**
 * generated by Xtext 2.12.0
 */
package alpha.ui.labeling;

import alpha.alpha.AAffineSystem;
import alpha.alpha.AParamDomain;
import alpha.alpha.AVariableDeclaration;
import com.google.inject.Inject;
import org.eclipse.emf.common.util.EList;
import org.eclipse.emf.edit.ui.provider.AdapterFactoryLabelProvider;
import org.eclipse.xtend2.lib.StringConcatenation;
import org.eclipse.xtext.ui.label.DefaultEObjectLabelProvider;

/**
 * Provides labels for EObjects.
 * 
 * See https://www.eclipse.org/Xtext/documentation/304_ide_concepts.html#label-provider
 */
@SuppressWarnings("all")
public class AlphaLabelProvider extends DefaultEObjectLabelProvider {
  @Inject
  public AlphaLabelProvider(final AdapterFactoryLabelProvider delegate) {
    super(delegate);
  }
  
  public CharSequence text(final AAffineSystem system) {
    StringConcatenation _builder = new StringConcatenation();
    String _name = system.getName();
    _builder.append(_name);
    _builder.append(" ");
    AParamDomain _parameters = system.getParameters();
    _builder.append(_parameters);
    _builder.newLineIfNotEmpty();
    _builder.append("inputs");
    _builder.newLine();
    _builder.append("\t");
    EList<AVariableDeclaration> _inputDeclarations = system.getInputDeclarations();
    _builder.append(_inputDeclarations, "\t");
    _builder.newLineIfNotEmpty();
    _builder.append("outputs");
    _builder.newLine();
    _builder.append("\t");
    EList<AVariableDeclaration> _outputDeclarations = system.getOutputDeclarations();
    _builder.append(_outputDeclarations, "\t");
    _builder.newLineIfNotEmpty();
    return _builder;
  }
}
