/*
 * generated by Xtext 2.12.0
 */
grammar InternalAlpha;

options {
	superClass=AbstractInternalContentAssistParser;
	backtrack=true;
}

@lexer::header {
package alpha.ide.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package alpha.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import alpha.services.AlphaGrammarAccess;

}
@parser::members {
	private AlphaGrammarAccess grammarAccess;

	public void setGrammarAccess(AlphaGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		return tokenName;
	}
}

// Entry rule entryRuleAStart
entryRuleAStart
:
{ before(grammarAccess.getAStartRule()); }
	 ruleAStart
{ after(grammarAccess.getAStartRule()); } 
	 EOF 
;

// Rule AStart
ruleAStart 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAStartAccess().getElementsAssignment()); }
		(rule__AStart__ElementsAssignment)*
		{ after(grammarAccess.getAStartAccess().getElementsAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAbstractElement
entryRuleAbstractElement
:
{ before(grammarAccess.getAbstractElementRule()); }
	 ruleAbstractElement
{ after(grammarAccess.getAbstractElementRule()); } 
	 EOF 
;

// Rule AbstractElement
ruleAbstractElement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAbstractElementAccess().getAlternatives()); }
		(rule__AbstractElement__Alternatives)
		{ after(grammarAccess.getAbstractElementAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAPackageDeclaration
entryRuleAPackageDeclaration
:
{ before(grammarAccess.getAPackageDeclarationRule()); }
	 ruleAPackageDeclaration
{ after(grammarAccess.getAPackageDeclarationRule()); } 
	 EOF 
;

// Rule APackageDeclaration
ruleAPackageDeclaration 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAPackageDeclarationAccess().getGroup()); }
		(rule__APackageDeclaration__Group__0)
		{ after(grammarAccess.getAPackageDeclarationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAImport
entryRuleAImport
:
{ before(grammarAccess.getAImportRule()); }
	 ruleAImport
{ after(grammarAccess.getAImportRule()); } 
	 EOF 
;

// Rule AImport
ruleAImport 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAImportAccess().getGroup()); }
		(rule__AImport__Group__0)
		{ after(grammarAccess.getAImportAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAConstantDeclaration
entryRuleAConstantDeclaration
:
{ before(grammarAccess.getAConstantDeclarationRule()); }
	 ruleAConstantDeclaration
{ after(grammarAccess.getAConstantDeclarationRule()); } 
	 EOF 
;

// Rule AConstantDeclaration
ruleAConstantDeclaration 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAConstantDeclarationAccess().getGroup()); }
		(rule__AConstantDeclaration__Group__0)
		{ after(grammarAccess.getAConstantDeclarationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAExternalFunctionDeclaration
entryRuleAExternalFunctionDeclaration
:
{ before(grammarAccess.getAExternalFunctionDeclarationRule()); }
	 ruleAExternalFunctionDeclaration
{ after(grammarAccess.getAExternalFunctionDeclarationRule()); } 
	 EOF 
;

// Rule AExternalFunctionDeclaration
ruleAExternalFunctionDeclaration 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAExternalFunctionDeclarationAccess().getGroup()); }
		(rule__AExternalFunctionDeclaration__Group__0)
		{ after(grammarAccess.getAExternalFunctionDeclarationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAExternalFunction
entryRuleAExternalFunction
:
{ before(grammarAccess.getAExternalFunctionRule()); }
	 ruleAExternalFunction
{ after(grammarAccess.getAExternalFunctionRule()); } 
	 EOF 
;

// Rule AExternalFunction
ruleAExternalFunction 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAExternalFunctionAccess().getGroup()); }
		(rule__AExternalFunction__Group__0)
		{ after(grammarAccess.getAExternalFunctionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAConstant
entryRuleAConstant
:
{ before(grammarAccess.getAConstantRule()); }
	 ruleAConstant
{ after(grammarAccess.getAConstantRule()); } 
	 EOF 
;

// Rule AConstant
ruleAConstant 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAConstantAccess().getGroup()); }
		(rule__AConstant__Group__0)
		{ after(grammarAccess.getAConstantAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAAffineSystem
entryRuleAAffineSystem
:
{ before(grammarAccess.getAAffineSystemRule()); }
	 ruleAAffineSystem
{ after(grammarAccess.getAAffineSystemRule()); } 
	 EOF 
;

// Rule AAffineSystem
ruleAAffineSystem 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAAffineSystemAccess().getGroup()); }
		(rule__AAffineSystem__Group__0)
		{ after(grammarAccess.getAAffineSystemAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAVariableDeclaration
entryRuleAVariableDeclaration
:
{ before(grammarAccess.getAVariableDeclarationRule()); }
	 ruleAVariableDeclaration
{ after(grammarAccess.getAVariableDeclarationRule()); } 
	 EOF 
;

// Rule AVariableDeclaration
ruleAVariableDeclaration 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAVariableDeclarationAccess().getGroup()); }
		(rule__AVariableDeclaration__Group__0)
		{ after(grammarAccess.getAVariableDeclarationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAVariableList
entryRuleAVariableList
:
{ before(grammarAccess.getAVariableListRule()); }
	 ruleAVariableList
{ after(grammarAccess.getAVariableListRule()); } 
	 EOF 
;

// Rule AVariableList
ruleAVariableList 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAVariableListAccess().getGroup()); }
		(rule__AVariableList__Group__0)
		{ after(grammarAccess.getAVariableListAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAVariable
entryRuleAVariable
:
{ before(grammarAccess.getAVariableRule()); }
	 ruleAVariable
{ after(grammarAccess.getAVariableRule()); } 
	 EOF 
;

// Rule AVariable
ruleAVariable 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAVariableAccess().getNameAssignment()); }
		(rule__AVariable__NameAssignment)
		{ after(grammarAccess.getAVariableAccess().getNameAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAFuzzyVariableDeclaration
entryRuleAFuzzyVariableDeclaration
:
{ before(grammarAccess.getAFuzzyVariableDeclarationRule()); }
	 ruleAFuzzyVariableDeclaration
{ after(grammarAccess.getAFuzzyVariableDeclarationRule()); } 
	 EOF 
;

// Rule AFuzzyVariableDeclaration
ruleAFuzzyVariableDeclaration 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAFuzzyVariableDeclarationAccess().getGroup()); }
		(rule__AFuzzyVariableDeclaration__Group__0)
		{ after(grammarAccess.getAFuzzyVariableDeclarationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleQualifiedName
entryRuleQualifiedName
:
{ before(grammarAccess.getQualifiedNameRule()); }
	 ruleQualifiedName
{ after(grammarAccess.getQualifiedNameRule()); } 
	 EOF 
;

// Rule QualifiedName
ruleQualifiedName 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getQualifiedNameAccess().getGroup()); }
		(rule__QualifiedName__Group__0)
		{ after(grammarAccess.getQualifiedNameAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleQualifiedNameWithWildcard
entryRuleQualifiedNameWithWildcard
:
{ before(grammarAccess.getQualifiedNameWithWildcardRule()); }
	 ruleQualifiedNameWithWildcard
{ after(grammarAccess.getQualifiedNameWithWildcardRule()); } 
	 EOF 
;

// Rule QualifiedNameWithWildcard
ruleQualifiedNameWithWildcard 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getQualifiedNameWithWildcardAccess().getGroup()); }
		(rule__QualifiedNameWithWildcard__Group__0)
		{ after(grammarAccess.getQualifiedNameWithWildcardAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSystemName
entryRuleSystemName
:
{ before(grammarAccess.getSystemNameRule()); }
	 ruleSystemName
{ after(grammarAccess.getSystemNameRule()); } 
	 EOF 
;

// Rule SystemName
ruleSystemName 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSystemNameAccess().getIDTerminalRuleCall()); }
		RULE_ID
		{ after(grammarAccess.getSystemNameAccess().getIDTerminalRuleCall()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleIndexName
entryRuleIndexName
:
{ before(grammarAccess.getIndexNameRule()); }
	 ruleIndexName
{ after(grammarAccess.getIndexNameRule()); } 
	 EOF 
;

// Rule IndexName
ruleIndexName 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getIndexNameAccess().getGroup()); }
		(rule__IndexName__Group__0)
		{ after(grammarAccess.getIndexNameAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAIndexDimension
entryRuleAIndexDimension
:
{ before(grammarAccess.getAIndexDimensionRule()); }
	 ruleAIndexDimension
{ after(grammarAccess.getAIndexDimensionRule()); } 
	 EOF 
;

// Rule AIndexDimension
ruleAIndexDimension 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAIndexDimensionAccess().getIndexNameParserRuleCall()); }
		ruleIndexName
		{ after(grammarAccess.getAIndexDimensionAccess().getIndexNameParserRuleCall()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAIndexList
entryRuleAIndexList
:
{ before(grammarAccess.getAIndexListRule()); }
	 ruleAIndexList
{ after(grammarAccess.getAIndexListRule()); } 
	 EOF 
;

// Rule AIndexList
ruleAIndexList 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAIndexListAccess().getGroup()); }
		(rule__AIndexList__Group__0)?
		{ after(grammarAccess.getAIndexListAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePolyhedralObject
entryRulePolyhedralObject
:
{ before(grammarAccess.getPolyhedralObjectRule()); }
	 rulePolyhedralObject
{ after(grammarAccess.getPolyhedralObjectRule()); } 
	 EOF 
;

// Rule PolyhedralObject
rulePolyhedralObject 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPolyhedralObjectAccess().getGroup()); }
		(rule__PolyhedralObject__Group__0)
		{ after(grammarAccess.getPolyhedralObjectAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAPolyhedralObjectExpression
entryRuleAPolyhedralObjectExpression
:
{ before(grammarAccess.getAPolyhedralObjectExpressionRule()); }
	 ruleAPolyhedralObjectExpression
{ after(grammarAccess.getAPolyhedralObjectExpressionRule()); } 
	 EOF 
;

// Rule APolyhedralObjectExpression
ruleAPolyhedralObjectExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAPolyhedralObjectExpressionAccess().getGroup()); }
		(rule__APolyhedralObjectExpression__Group__0)
		{ after(grammarAccess.getAPolyhedralObjectExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAUnaryOrTerminalPolyObjExpression
entryRuleAUnaryOrTerminalPolyObjExpression
:
{ before(grammarAccess.getAUnaryOrTerminalPolyObjExpressionRule()); }
	 ruleAUnaryOrTerminalPolyObjExpression
{ after(grammarAccess.getAUnaryOrTerminalPolyObjExpressionRule()); } 
	 EOF 
;

// Rule AUnaryOrTerminalPolyObjExpression
ruleAUnaryOrTerminalPolyObjExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAUnaryOrTerminalPolyObjExpressionAccess().getAlternatives()); }
		(rule__AUnaryOrTerminalPolyObjExpression__Alternatives)
		{ after(grammarAccess.getAUnaryOrTerminalPolyObjExpressionAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAPolyObjTerminal
entryRuleAPolyObjTerminal
:
{ before(grammarAccess.getAPolyObjTerminalRule()); }
	 ruleAPolyObjTerminal
{ after(grammarAccess.getAPolyObjTerminalRule()); } 
	 EOF 
;

// Rule APolyObjTerminal
ruleAPolyObjTerminal 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAPolyObjTerminalAccess().getAlternatives()); }
		(rule__APolyObjTerminal__Alternatives)
		{ after(grammarAccess.getAPolyObjTerminalAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAUnaryPolyObjExpression
entryRuleAUnaryPolyObjExpression
:
{ before(grammarAccess.getAUnaryPolyObjExpressionRule()); }
	 ruleAUnaryPolyObjExpression
{ after(grammarAccess.getAUnaryPolyObjExpressionRule()); } 
	 EOF 
;

// Rule AUnaryPolyObjExpression
ruleAUnaryPolyObjExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAUnaryPolyObjExpressionAccess().getGroup()); }
		(rule__AUnaryPolyObjExpression__Group__0)
		{ after(grammarAccess.getAUnaryPolyObjExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAVariableDomain
entryRuleAVariableDomain
:
{ before(grammarAccess.getAVariableDomainRule()); }
	 ruleAVariableDomain
{ after(grammarAccess.getAVariableDomainRule()); } 
	 EOF 
;

// Rule AVariableDomain
ruleAVariableDomain 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAVariableDomainAccess().getGroup()); }
		(rule__AVariableDomain__Group__0)
		{ after(grammarAccess.getAVariableDomainAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleARectangularDomain
entryRuleARectangularDomain
:
{ before(grammarAccess.getARectangularDomainRule()); }
	 ruleARectangularDomain
{ after(grammarAccess.getARectangularDomainRule()); } 
	 EOF 
;

// Rule ARectangularDomain
ruleARectangularDomain 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getARectangularDomainAccess().getGroup()); }
		(rule__ARectangularDomain__Group__0)
		{ after(grammarAccess.getARectangularDomainAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleADeclaredObject
entryRuleADeclaredObject
:
{ before(grammarAccess.getADeclaredObjectRule()); }
	 ruleADeclaredObject
{ after(grammarAccess.getADeclaredObjectRule()); } 
	 EOF 
;

// Rule ADeclaredObject
ruleADeclaredObject 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getADeclaredObjectAccess().getObjectAssignment()); }
		(rule__ADeclaredObject__ObjectAssignment)
		{ after(grammarAccess.getADeclaredObjectAccess().getObjectAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAISLSet
entryRuleAISLSet
:
{ before(grammarAccess.getAISLSetRule()); }
	 ruleAISLSet
{ after(grammarAccess.getAISLSetRule()); } 
	 EOF 
;

// Rule AISLSet
ruleAISLSet 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAISLSetAccess().getGroup()); }
		(rule__AISLSet__Group__0)
		{ after(grammarAccess.getAISLSetAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAISLBasicSet
entryRuleAISLBasicSet
:
{ before(grammarAccess.getAISLBasicSetRule()); }
	 ruleAISLBasicSet
{ after(grammarAccess.getAISLBasicSetRule()); } 
	 EOF 
;

// Rule AISLBasicSet
ruleAISLBasicSet 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAISLBasicSetAccess().getGroup()); }
		(rule__AISLBasicSet__Group__0)
		{ after(grammarAccess.getAISLBasicSetAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAISLRelation
entryRuleAISLRelation
:
{ before(grammarAccess.getAISLRelationRule()); }
	 ruleAISLRelation
{ after(grammarAccess.getAISLRelationRule()); } 
	 EOF 
;

// Rule AISLRelation
ruleAISLRelation 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAISLRelationAccess().getGroup()); }
		(rule__AISLRelation__Group__0)
		{ after(grammarAccess.getAISLRelationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAISLBasicRelation
entryRuleAISLBasicRelation
:
{ before(grammarAccess.getAISLBasicRelationRule()); }
	 ruleAISLBasicRelation
{ after(grammarAccess.getAISLBasicRelationRule()); } 
	 EOF 
;

// Rule AISLBasicRelation
ruleAISLBasicRelation 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAISLBasicRelationAccess().getGroup()); }
		(rule__AISLBasicRelation__Group__0)
		{ after(grammarAccess.getAISLBasicRelationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAParamDomain
entryRuleAParamDomain
:
{ before(grammarAccess.getAParamDomainRule()); }
	 ruleAParamDomain
{ after(grammarAccess.getAParamDomainRule()); } 
	 EOF 
;

// Rule AParamDomain
ruleAParamDomain 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAParamDomainAccess().getGroup()); }
		(rule__AParamDomain__Group__0)
		{ after(grammarAccess.getAParamDomainAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleISLString
entryRuleISLString
:
{ before(grammarAccess.getISLStringRule()); }
	 ruleISLString
{ after(grammarAccess.getISLStringRule()); } 
	 EOF 
;

// Rule ISLString
ruleISLString 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getISLStringAccess().getAlternatives()); }
		(rule__ISLString__Alternatives)*
		{ after(grammarAccess.getISLStringAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAEquation
entryRuleAEquation
:
{ before(grammarAccess.getAEquationRule()); }
	 ruleAEquation
{ after(grammarAccess.getAEquationRule()); } 
	 EOF 
;

// Rule AEquation
ruleAEquation 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAEquationAccess().getGroup()); }
		(rule__AEquation__Group__0)
		{ after(grammarAccess.getAEquationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAUseEquation
entryRuleAUseEquation
:
{ before(grammarAccess.getAUseEquationRule()); }
	 ruleAUseEquation
{ after(grammarAccess.getAUseEquationRule()); } 
	 EOF 
;

// Rule AUseEquation
ruleAUseEquation 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAUseEquationAccess().getGroup()); }
		(rule__AUseEquation__Group__0)
		{ after(grammarAccess.getAUseEquationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAAlphaExpression
entryRuleAAlphaExpression
:
{ before(grammarAccess.getAAlphaExpressionRule()); }
	 ruleAAlphaExpression
{ after(grammarAccess.getAAlphaExpressionRule()); } 
	 EOF 
;

// Rule AAlphaExpression
ruleAAlphaExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAAlphaExpressionAccess().getAlternatives()); }
		(rule__AAlphaExpression__Alternatives)
		{ after(grammarAccess.getAAlphaExpressionAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAAlphabetsTerminalExpression
entryRuleAAlphabetsTerminalExpression
:
{ before(grammarAccess.getAAlphabetsTerminalExpressionRule()); }
	 ruleAAlphabetsTerminalExpression
{ after(grammarAccess.getAAlphabetsTerminalExpressionRule()); } 
	 EOF 
;

// Rule AAlphabetsTerminalExpression
ruleAAlphabetsTerminalExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAAlphabetsTerminalExpressionAccess().getAlternatives()); }
		(rule__AAlphabetsTerminalExpression__Alternatives)
		{ after(grammarAccess.getAAlphabetsTerminalExpressionAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAParanthesizedAlphabetsExpression
entryRuleAParanthesizedAlphabetsExpression
:
{ before(grammarAccess.getAParanthesizedAlphabetsExpressionRule()); }
	 ruleAParanthesizedAlphabetsExpression
{ after(grammarAccess.getAParanthesizedAlphabetsExpressionRule()); } 
	 EOF 
;

// Rule AParanthesizedAlphabetsExpression
ruleAParanthesizedAlphabetsExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAParanthesizedAlphabetsExpressionAccess().getGroup()); }
		(rule__AParanthesizedAlphabetsExpression__Group__0)
		{ after(grammarAccess.getAParanthesizedAlphabetsExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAOrExpression
entryRuleAOrExpression
:
{ before(grammarAccess.getAOrExpressionRule()); }
	 ruleAOrExpression
{ after(grammarAccess.getAOrExpressionRule()); } 
	 EOF 
;

// Rule AOrExpression
ruleAOrExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAOrExpressionAccess().getGroup()); }
		(rule__AOrExpression__Group__0)
		{ after(grammarAccess.getAOrExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAAndExpression
entryRuleAAndExpression
:
{ before(grammarAccess.getAAndExpressionRule()); }
	 ruleAAndExpression
{ after(grammarAccess.getAAndExpressionRule()); } 
	 EOF 
;

// Rule AAndExpression
ruleAAndExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAAndExpressionAccess().getGroup()); }
		(rule__AAndExpression__Group__0)
		{ after(grammarAccess.getAAndExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleARelationalExpression
entryRuleARelationalExpression
:
{ before(grammarAccess.getARelationalExpressionRule()); }
	 ruleARelationalExpression
{ after(grammarAccess.getARelationalExpressionRule()); } 
	 EOF 
;

// Rule ARelationalExpression
ruleARelationalExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getARelationalExpressionAccess().getGroup()); }
		(rule__ARelationalExpression__Group__0)
		{ after(grammarAccess.getARelationalExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAAdditiveExpression
entryRuleAAdditiveExpression
:
{ before(grammarAccess.getAAdditiveExpressionRule()); }
	 ruleAAdditiveExpression
{ after(grammarAccess.getAAdditiveExpressionRule()); } 
	 EOF 
;

// Rule AAdditiveExpression
ruleAAdditiveExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAAdditiveExpressionAccess().getGroup()); }
		(rule__AAdditiveExpression__Group__0)
		{ after(grammarAccess.getAAdditiveExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAMultiplicativeExpression
entryRuleAMultiplicativeExpression
:
{ before(grammarAccess.getAMultiplicativeExpressionRule()); }
	 ruleAMultiplicativeExpression
{ after(grammarAccess.getAMultiplicativeExpressionRule()); } 
	 EOF 
;

// Rule AMultiplicativeExpression
ruleAMultiplicativeExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAMultiplicativeExpressionAccess().getGroup()); }
		(rule__AMultiplicativeExpression__Group__0)
		{ after(grammarAccess.getAMultiplicativeExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAMinMaxExpression
entryRuleAMinMaxExpression
:
{ before(grammarAccess.getAMinMaxExpressionRule()); }
	 ruleAMinMaxExpression
{ after(grammarAccess.getAMinMaxExpressionRule()); } 
	 EOF 
;

// Rule AMinMaxExpression
ruleAMinMaxExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAMinMaxExpressionAccess().getGroup()); }
		(rule__AMinMaxExpression__Group__0)
		{ after(grammarAccess.getAMinMaxExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAUnaryOrTerminalExpression
entryRuleAUnaryOrTerminalExpression
:
{ before(grammarAccess.getAUnaryOrTerminalExpressionRule()); }
	 ruleAUnaryOrTerminalExpression
{ after(grammarAccess.getAUnaryOrTerminalExpressionRule()); } 
	 EOF 
;

// Rule AUnaryOrTerminalExpression
ruleAUnaryOrTerminalExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAUnaryOrTerminalExpressionAccess().getAlternatives()); }
		(rule__AUnaryOrTerminalExpression__Alternatives)
		{ after(grammarAccess.getAUnaryOrTerminalExpressionAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAUnaryExpression
entryRuleAUnaryExpression
:
{ before(grammarAccess.getAUnaryExpressionRule()); }
	 ruleAUnaryExpression
{ after(grammarAccess.getAUnaryExpressionRule()); } 
	 EOF 
;

// Rule AUnaryExpression
ruleAUnaryExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAUnaryExpressionAccess().getAlternatives()); }
		(rule__AUnaryExpression__Alternatives)
		{ after(grammarAccess.getAUnaryExpressionAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleANotExpression
entryRuleANotExpression
:
{ before(grammarAccess.getANotExpressionRule()); }
	 ruleANotExpression
{ after(grammarAccess.getANotExpressionRule()); } 
	 EOF 
;

// Rule ANotExpression
ruleANotExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getANotExpressionAccess().getGroup()); }
		(rule__ANotExpression__Group__0)
		{ after(grammarAccess.getANotExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleANegateExpression
entryRuleANegateExpression
:
{ before(grammarAccess.getANegateExpressionRule()); }
	 ruleANegateExpression
{ after(grammarAccess.getANegateExpressionRule()); } 
	 EOF 
;

// Rule ANegateExpression
ruleANegateExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getANegateExpressionAccess().getGroup()); }
		(rule__ANegateExpression__Group__0)
		{ after(grammarAccess.getANegateExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleACaseExpression
entryRuleACaseExpression
:
{ before(grammarAccess.getACaseExpressionRule()); }
	 ruleACaseExpression
{ after(grammarAccess.getACaseExpressionRule()); } 
	 EOF 
;

// Rule ACaseExpression
ruleACaseExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getACaseExpressionAccess().getGroup()); }
		(rule__ACaseExpression__Group__0)
		{ after(grammarAccess.getACaseExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleADependenceExpression
entryRuleADependenceExpression
:
{ before(grammarAccess.getADependenceExpressionRule()); }
	 ruleADependenceExpression
{ after(grammarAccess.getADependenceExpressionRule()); } 
	 EOF 
;

// Rule ADependenceExpression
ruleADependenceExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getADependenceExpressionAccess().getGroup()); }
		(rule__ADependenceExpression__Group__0)
		{ after(grammarAccess.getADependenceExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleASelectDependenceExpression
entryRuleASelectDependenceExpression
:
{ before(grammarAccess.getASelectDependenceExpressionRule()); }
	 ruleASelectDependenceExpression
{ after(grammarAccess.getASelectDependenceExpressionRule()); } 
	 EOF 
;

// Rule ASelectDependenceExpression
ruleASelectDependenceExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getASelectDependenceExpressionAccess().getGroup()); }
		(rule__ASelectDependenceExpression__Group__0)
		{ after(grammarAccess.getASelectDependenceExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleADependenceInArrayNotation
entryRuleADependenceInArrayNotation
:
{ before(grammarAccess.getADependenceInArrayNotationRule()); }
	 ruleADependenceInArrayNotation
{ after(grammarAccess.getADependenceInArrayNotationRule()); } 
	 EOF 
;

// Rule ADependenceInArrayNotation
ruleADependenceInArrayNotation 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getADependenceInArrayNotationAccess().getGroup()); }
		(rule__ADependenceInArrayNotation__Group__0)
		{ after(grammarAccess.getADependenceInArrayNotationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAIfExpression
entryRuleAIfExpression
:
{ before(grammarAccess.getAIfExpressionRule()); }
	 ruleAIfExpression
{ after(grammarAccess.getAIfExpressionRule()); } 
	 EOF 
;

// Rule AIfExpression
ruleAIfExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAIfExpressionAccess().getGroup()); }
		(rule__AIfExpression__Group__0)
		{ after(grammarAccess.getAIfExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAIndexExpression
entryRuleAIndexExpression
:
{ before(grammarAccess.getAIndexExpressionRule()); }
	 ruleAIndexExpression
{ after(grammarAccess.getAIndexExpressionRule()); } 
	 EOF 
;

// Rule AIndexExpression
ruleAIndexExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAIndexExpressionAccess().getGroup()); }
		(rule__AIndexExpression__Group__0)
		{ after(grammarAccess.getAIndexExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAIndexExpressionInArrayNotation
entryRuleAIndexExpressionInArrayNotation
:
{ before(grammarAccess.getAIndexExpressionInArrayNotationRule()); }
	 ruleAIndexExpressionInArrayNotation
{ after(grammarAccess.getAIndexExpressionInArrayNotationRule()); } 
	 EOF 
;

// Rule AIndexExpressionInArrayNotation
ruleAIndexExpressionInArrayNotation 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAIndexExpressionInArrayNotationAccess().getGroup()); }
		(rule__AIndexExpressionInArrayNotation__Group__0)
		{ after(grammarAccess.getAIndexExpressionInArrayNotationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAReduceExpression
entryRuleAReduceExpression
:
{ before(grammarAccess.getAReduceExpressionRule()); }
	 ruleAReduceExpression
{ after(grammarAccess.getAReduceExpressionRule()); } 
	 EOF 
;

// Rule AReduceExpression
ruleAReduceExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAReduceExpressionAccess().getGroup()); }
		(rule__AReduceExpression__Group__0)
		{ after(grammarAccess.getAReduceExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAArgReduceExpression
entryRuleAArgReduceExpression
:
{ before(grammarAccess.getAArgReduceExpressionRule()); }
	 ruleAArgReduceExpression
{ after(grammarAccess.getAArgReduceExpressionRule()); } 
	 EOF 
;

// Rule AArgReduceExpression
ruleAArgReduceExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAArgReduceExpressionAccess().getGroup()); }
		(rule__AArgReduceExpression__Group__0)
		{ after(grammarAccess.getAArgReduceExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAConvExpression
entryRuleAConvExpression
:
{ before(grammarAccess.getAConvExpressionRule()); }
	 ruleAConvExpression
{ after(grammarAccess.getAConvExpressionRule()); } 
	 EOF 
;

// Rule AConvExpression
ruleAConvExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAConvExpressionAccess().getGroup()); }
		(rule__AConvExpression__Group__0)
		{ after(grammarAccess.getAConvExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleARestrictExpression
entryRuleARestrictExpression
:
{ before(grammarAccess.getARestrictExpressionRule()); }
	 ruleARestrictExpression
{ after(grammarAccess.getARestrictExpressionRule()); } 
	 EOF 
;

// Rule ARestrictExpression
ruleARestrictExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getARestrictExpressionAccess().getGroup()); }
		(rule__ARestrictExpression__Group__0)
		{ after(grammarAccess.getARestrictExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAPolyObjectInRestrict
entryRuleAPolyObjectInRestrict
:
{ before(grammarAccess.getAPolyObjectInRestrictRule()); }
	 ruleAPolyObjectInRestrict
{ after(grammarAccess.getAPolyObjectInRestrictRule()); } 
	 EOF 
;

// Rule APolyObjectInRestrict
ruleAPolyObjectInRestrict 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAPolyObjectInRestrictAccess().getAlternatives()); }
		(rule__APolyObjectInRestrict__Alternatives)
		{ after(grammarAccess.getAPolyObjectInRestrictAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAAutoRestrictExpression
entryRuleAAutoRestrictExpression
:
{ before(grammarAccess.getAAutoRestrictExpressionRule()); }
	 ruleAAutoRestrictExpression
{ after(grammarAccess.getAAutoRestrictExpressionRule()); } 
	 EOF 
;

// Rule AAutoRestrictExpression
ruleAAutoRestrictExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAAutoRestrictExpressionAccess().getGroup()); }
		(rule__AAutoRestrictExpression__Group__0)
		{ after(grammarAccess.getAAutoRestrictExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAVariableExpression
entryRuleAVariableExpression
:
{ before(grammarAccess.getAVariableExpressionRule()); }
	 ruleAVariableExpression
{ after(grammarAccess.getAVariableExpressionRule()); } 
	 EOF 
;

// Rule AVariableExpression
ruleAVariableExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAVariableExpressionAccess().getVarAssignment()); }
		(rule__AVariableExpression__VarAssignment)
		{ after(grammarAccess.getAVariableExpressionAccess().getVarAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAConstantExpression
entryRuleAConstantExpression
:
{ before(grammarAccess.getAConstantExpressionRule()); }
	 ruleAConstantExpression
{ after(grammarAccess.getAConstantExpressionRule()); } 
	 EOF 
;

// Rule AConstantExpression
ruleAConstantExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAConstantExpressionAccess().getAlternatives()); }
		(rule__AConstantExpression__Alternatives)
		{ after(grammarAccess.getAConstantExpressionAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleABooleanExpression
entryRuleABooleanExpression
:
{ before(grammarAccess.getABooleanExpressionRule()); }
	 ruleABooleanExpression
{ after(grammarAccess.getABooleanExpressionRule()); } 
	 EOF 
;

// Rule ABooleanExpression
ruleABooleanExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getABooleanExpressionAccess().getValueAssignment()); }
		(rule__ABooleanExpression__ValueAssignment)
		{ after(grammarAccess.getABooleanExpressionAccess().getValueAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAIntegerExpression
entryRuleAIntegerExpression
:
{ before(grammarAccess.getAIntegerExpressionRule()); }
	 ruleAIntegerExpression
{ after(grammarAccess.getAIntegerExpressionRule()); } 
	 EOF 
;

// Rule AIntegerExpression
ruleAIntegerExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAIntegerExpressionAccess().getValueAssignment()); }
		(rule__AIntegerExpression__ValueAssignment)
		{ after(grammarAccess.getAIntegerExpressionAccess().getValueAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleARealExpression
entryRuleARealExpression
:
{ before(grammarAccess.getARealExpressionRule()); }
	 ruleARealExpression
{ after(grammarAccess.getARealExpressionRule()); } 
	 EOF 
;

// Rule ARealExpression
ruleARealExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getARealExpressionAccess().getValueAssignment()); }
		(rule__ARealExpression__ValueAssignment)
		{ after(grammarAccess.getARealExpressionAccess().getValueAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAMultiArgExpression
entryRuleAMultiArgExpression
:
{ before(grammarAccess.getAMultiArgExpressionRule()); }
	 ruleAMultiArgExpression
{ after(grammarAccess.getAMultiArgExpressionRule()); } 
	 EOF 
;

// Rule AMultiArgExpression
ruleAMultiArgExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAMultiArgExpressionAccess().getAlternatives()); }
		(rule__AMultiArgExpression__Alternatives)
		{ after(grammarAccess.getAMultiArgExpressionAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAMultiArgArithmeticExpression
entryRuleAMultiArgArithmeticExpression
:
{ before(grammarAccess.getAMultiArgArithmeticExpressionRule()); }
	 ruleAMultiArgArithmeticExpression
{ after(grammarAccess.getAMultiArgArithmeticExpressionRule()); } 
	 EOF 
;

// Rule AMultiArgArithmeticExpression
ruleAMultiArgArithmeticExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAMultiArgArithmeticExpressionAccess().getGroup()); }
		(rule__AMultiArgArithmeticExpression__Group__0)
		{ after(grammarAccess.getAMultiArgArithmeticExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAMultiArgLogicalExpression
entryRuleAMultiArgLogicalExpression
:
{ before(grammarAccess.getAMultiArgLogicalExpressionRule()); }
	 ruleAMultiArgLogicalExpression
{ after(grammarAccess.getAMultiArgLogicalExpressionRule()); } 
	 EOF 
;

// Rule AMultiArgLogicalExpression
ruleAMultiArgLogicalExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAMultiArgLogicalExpressionAccess().getGroup()); }
		(rule__AMultiArgLogicalExpression__Group__0)
		{ after(grammarAccess.getAMultiArgLogicalExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAExternalFunctionCall
entryRuleAExternalFunctionCall
:
{ before(grammarAccess.getAExternalFunctionCallRule()); }
	 ruleAExternalFunctionCall
{ after(grammarAccess.getAExternalFunctionCallRule()); } 
	 EOF 
;

// Rule AExternalFunctionCall
ruleAExternalFunctionCall 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAExternalFunctionCallAccess().getGroup()); }
		(rule__AExternalFunctionCall__Group__0)
		{ after(grammarAccess.getAExternalFunctionCallAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleIndexAffineExpression
entryRuleIndexAffineExpression
:
{ before(grammarAccess.getIndexAffineExpressionRule()); }
	 ruleIndexAffineExpression
{ after(grammarAccess.getIndexAffineExpressionRule()); } 
	 EOF 
;

// Rule IndexAffineExpression
ruleIndexAffineExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getIndexAffineExpressionAccess().getGroup()); }
		(rule__IndexAffineExpression__Group__0)
		{ after(grammarAccess.getIndexAffineExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleIndexAffineExpressionTerminal
entryRuleIndexAffineExpressionTerminal
:
{ before(grammarAccess.getIndexAffineExpressionTerminalRule()); }
	 ruleIndexAffineExpressionTerminal
{ after(grammarAccess.getIndexAffineExpressionTerminalRule()); } 
	 EOF 
;

// Rule IndexAffineExpressionTerminal
ruleIndexAffineExpressionTerminal 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getIndexAffineExpressionTerminalAccess().getGroup()); }
		(rule__IndexAffineExpressionTerminal__Group__0)
		{ after(grammarAccess.getIndexAffineExpressionTerminalAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAIndexAffineExpressionList
entryRuleAIndexAffineExpressionList
:
{ before(grammarAccess.getAIndexAffineExpressionListRule()); }
	 ruleAIndexAffineExpressionList
{ after(grammarAccess.getAIndexAffineExpressionListRule()); } 
	 EOF 
;

// Rule AIndexAffineExpressionList
ruleAIndexAffineExpressionList 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAIndexAffineExpressionListAccess().getGroup()); }
		(rule__AIndexAffineExpressionList__Group__0)
		{ after(grammarAccess.getAIndexAffineExpressionListAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAFunction
entryRuleAFunction
:
{ before(grammarAccess.getAFunctionRule()); }
	 ruleAFunction
{ after(grammarAccess.getAFunctionRule()); } 
	 EOF 
;

// Rule AFunction
ruleAFunction 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAFunctionAccess().getGroup()); }
		(rule__AFunction__Group__0)
		{ after(grammarAccess.getAFunctionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAFunctionInArrayNotation
entryRuleAFunctionInArrayNotation
:
{ before(grammarAccess.getAFunctionInArrayNotationRule()); }
	 ruleAFunctionInArrayNotation
{ after(grammarAccess.getAFunctionInArrayNotationRule()); } 
	 EOF 
;

// Rule AFunctionInArrayNotation
ruleAFunctionInArrayNotation 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAFunctionInArrayNotationAccess().getGroup()); }
		(rule__AFunctionInArrayNotation__Group__0)
		{ after(grammarAccess.getAFunctionInArrayNotationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAReductionOperator
entryRuleAReductionOperator
:
{ before(grammarAccess.getAReductionOperatorRule()); }
	 ruleAReductionOperator
{ after(grammarAccess.getAReductionOperatorRule()); } 
	 EOF 
;

// Rule AReductionOperator
ruleAReductionOperator 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAReductionOperatorAccess().getAlternatives()); }
		(rule__AReductionOperator__Alternatives)
		{ after(grammarAccess.getAReductionOperatorAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleREDUCTION_OP
entryRuleREDUCTION_OP
:
{ before(grammarAccess.getREDUCTION_OPRule()); }
	 ruleREDUCTION_OP
{ after(grammarAccess.getREDUCTION_OPRule()); } 
	 EOF 
;

// Rule REDUCTION_OP
ruleREDUCTION_OP 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getREDUCTION_OPAccess().getAlternatives()); }
		(rule__REDUCTION_OP__Alternatives)
		{ after(grammarAccess.getREDUCTION_OPAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleARITHMETIC_REDUCTION_OP
entryRuleARITHMETIC_REDUCTION_OP
:
{ before(grammarAccess.getARITHMETIC_REDUCTION_OPRule()); }
	 ruleARITHMETIC_REDUCTION_OP
{ after(grammarAccess.getARITHMETIC_REDUCTION_OPRule()); } 
	 EOF 
;

// Rule ARITHMETIC_REDUCTION_OP
ruleARITHMETIC_REDUCTION_OP 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getARITHMETIC_REDUCTION_OPAccess().getAlternatives()); }
		(rule__ARITHMETIC_REDUCTION_OP__Alternatives)
		{ after(grammarAccess.getARITHMETIC_REDUCTION_OPAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleLOGICAL_REDUCTION_OP
entryRuleLOGICAL_REDUCTION_OP
:
{ before(grammarAccess.getLOGICAL_REDUCTION_OPRule()); }
	 ruleLOGICAL_REDUCTION_OP
{ after(grammarAccess.getLOGICAL_REDUCTION_OPRule()); } 
	 EOF 
;

// Rule LOGICAL_REDUCTION_OP
ruleLOGICAL_REDUCTION_OP 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getLOGICAL_REDUCTION_OPAccess().getAlternatives()); }
		(rule__LOGICAL_REDUCTION_OP__Alternatives)
		{ after(grammarAccess.getLOGICAL_REDUCTION_OPAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleARITHMETIC_NONREDUCTION_OP
entryRuleARITHMETIC_NONREDUCTION_OP
:
{ before(grammarAccess.getARITHMETIC_NONREDUCTION_OPRule()); }
	 ruleARITHMETIC_NONREDUCTION_OP
{ after(grammarAccess.getARITHMETIC_NONREDUCTION_OPRule()); } 
	 EOF 
;

// Rule ARITHMETIC_NONREDUCTION_OP
ruleARITHMETIC_NONREDUCTION_OP 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getARITHMETIC_NONREDUCTION_OPAccess().getAlternatives()); }
		(rule__ARITHMETIC_NONREDUCTION_OP__Alternatives)
		{ after(grammarAccess.getARITHMETIC_NONREDUCTION_OPAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleLOGICAL_NONREDUCTION_OP
entryRuleLOGICAL_NONREDUCTION_OP
:
{ before(grammarAccess.getLOGICAL_NONREDUCTION_OPRule()); }
	 ruleLOGICAL_NONREDUCTION_OP
{ after(grammarAccess.getLOGICAL_NONREDUCTION_OPRule()); } 
	 EOF 
;

// Rule LOGICAL_NONREDUCTION_OP
ruleLOGICAL_NONREDUCTION_OP 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getLOGICAL_NONREDUCTION_OPAccess().getOP_NANDTerminalRuleCall()); }
		RULE_OP_NAND
		{ after(grammarAccess.getLOGICAL_NONREDUCTION_OPAccess().getOP_NANDTerminalRuleCall()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleRELATIONAL_OP
entryRuleRELATIONAL_OP
:
{ before(grammarAccess.getRELATIONAL_OPRule()); }
	 ruleRELATIONAL_OP
{ after(grammarAccess.getRELATIONAL_OPRule()); } 
	 EOF 
;

// Rule RELATIONAL_OP
ruleRELATIONAL_OP 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRELATIONAL_OPAccess().getAlternatives()); }
		(rule__RELATIONAL_OP__Alternatives)
		{ after(grammarAccess.getRELATIONAL_OPAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AbstractElement__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAbstractElementAccess().getAPackageDeclarationParserRuleCall_0()); }
		ruleAPackageDeclaration
		{ after(grammarAccess.getAbstractElementAccess().getAPackageDeclarationParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getAbstractElementAccess().getAAffineSystemParserRuleCall_1()); }
		ruleAAffineSystem
		{ after(grammarAccess.getAbstractElementAccess().getAAffineSystemParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getAbstractElementAccess().getAImportParserRuleCall_2()); }
		ruleAImport
		{ after(grammarAccess.getAbstractElementAccess().getAImportParserRuleCall_2()); }
	)
	|
	(
		{ before(grammarAccess.getAbstractElementAccess().getAExternalFunctionDeclarationParserRuleCall_3()); }
		ruleAExternalFunctionDeclaration
		{ after(grammarAccess.getAbstractElementAccess().getAExternalFunctionDeclarationParserRuleCall_3()); }
	)
	|
	(
		{ before(grammarAccess.getAbstractElementAccess().getAConstantDeclarationParserRuleCall_4()); }
		ruleAConstantDeclaration
		{ after(grammarAccess.getAbstractElementAccess().getAConstantDeclarationParserRuleCall_4()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__APolyhedralObjectExpression__OperatorAlternatives_1_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAPolyhedralObjectExpressionAccess().getOperatorCrossKeyword_1_1_0_0()); }
		'cross'
		{ after(grammarAccess.getAPolyhedralObjectExpressionAccess().getOperatorCrossKeyword_1_1_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getAPolyhedralObjectExpressionAccess().getOperatorOP_PLUSTerminalRuleCall_1_1_0_1()); }
		RULE_OP_PLUS
		{ after(grammarAccess.getAPolyhedralObjectExpressionAccess().getOperatorOP_PLUSTerminalRuleCall_1_1_0_1()); }
	)
	|
	(
		{ before(grammarAccess.getAPolyhedralObjectExpressionAccess().getOperatorOP_MINUSTerminalRuleCall_1_1_0_2()); }
		RULE_OP_MINUS
		{ after(grammarAccess.getAPolyhedralObjectExpressionAccess().getOperatorOP_MINUSTerminalRuleCall_1_1_0_2()); }
	)
	|
	(
		{ before(grammarAccess.getAPolyhedralObjectExpressionAccess().getOperatorOP_MULTerminalRuleCall_1_1_0_3()); }
		RULE_OP_MUL
		{ after(grammarAccess.getAPolyhedralObjectExpressionAccess().getOperatorOP_MULTerminalRuleCall_1_1_0_3()); }
	)
	|
	(
		{ before(grammarAccess.getAPolyhedralObjectExpressionAccess().getOperatorCommercialAtKeyword_1_1_0_4()); }
		'@'
		{ after(grammarAccess.getAPolyhedralObjectExpressionAccess().getOperatorCommercialAtKeyword_1_1_0_4()); }
	)
	|
	(
		{ before(grammarAccess.getAPolyhedralObjectExpressionAccess().getOperatorHyphenMinusGreaterThanSignHyphenMinusKeyword_1_1_0_5()); }
		'->-'
		{ after(grammarAccess.getAPolyhedralObjectExpressionAccess().getOperatorHyphenMinusGreaterThanSignHyphenMinusKeyword_1_1_0_5()); }
	)
	|
	(
		{ before(grammarAccess.getAPolyhedralObjectExpressionAccess().getOperatorHyphenMinusGreaterThanSignAsteriskKeyword_1_1_0_6()); }
		'->*'
		{ after(grammarAccess.getAPolyhedralObjectExpressionAccess().getOperatorHyphenMinusGreaterThanSignAsteriskKeyword_1_1_0_6()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AUnaryOrTerminalPolyObjExpression__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAUnaryOrTerminalPolyObjExpressionAccess().getAUnaryPolyObjExpressionParserRuleCall_0()); }
		ruleAUnaryPolyObjExpression
		{ after(grammarAccess.getAUnaryOrTerminalPolyObjExpressionAccess().getAUnaryPolyObjExpressionParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getAUnaryOrTerminalPolyObjExpressionAccess().getAPolyObjTerminalParserRuleCall_1()); }
		ruleAPolyObjTerminal
		{ after(grammarAccess.getAUnaryOrTerminalPolyObjExpressionAccess().getAPolyObjTerminalParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__APolyObjTerminal__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAPolyObjTerminalAccess().getAISLSetParserRuleCall_0()); }
		ruleAISLSet
		{ after(grammarAccess.getAPolyObjTerminalAccess().getAISLSetParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getAPolyObjTerminalAccess().getAISLRelationParserRuleCall_1()); }
		ruleAISLRelation
		{ after(grammarAccess.getAPolyObjTerminalAccess().getAISLRelationParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getAPolyObjTerminalAccess().getADeclaredObjectParserRuleCall_2()); }
		ruleADeclaredObject
		{ after(grammarAccess.getAPolyObjTerminalAccess().getADeclaredObjectParserRuleCall_2()); }
	)
	|
	(
		{ before(grammarAccess.getAPolyObjTerminalAccess().getARectangularDomainParserRuleCall_3()); }
		ruleARectangularDomain
		{ after(grammarAccess.getAPolyObjTerminalAccess().getARectangularDomainParserRuleCall_3()); }
	)
	|
	(
		{ before(grammarAccess.getAPolyObjTerminalAccess().getAVariableDomainParserRuleCall_4()); }
		ruleAVariableDomain
		{ after(grammarAccess.getAPolyObjTerminalAccess().getAVariableDomainParserRuleCall_4()); }
	)
	|
	(
		{ before(grammarAccess.getAPolyObjTerminalAccess().getGroup_5()); }
		(rule__APolyObjTerminal__Group_5__0)
		{ after(grammarAccess.getAPolyObjTerminalAccess().getGroup_5()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AUnaryPolyObjExpression__OpAlternatives_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAUnaryPolyObjExpressionAccess().getOpDomainKeyword_0_0_0()); }
		'domain'
		{ after(grammarAccess.getAUnaryPolyObjExpressionAccess().getOpDomainKeyword_0_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getAUnaryPolyObjExpressionAccess().getOpRangeKeyword_0_0_1()); }
		'range'
		{ after(grammarAccess.getAUnaryPolyObjExpressionAccess().getOpRangeKeyword_0_0_1()); }
	)
	|
	(
		{ before(grammarAccess.getAUnaryPolyObjExpressionAccess().getOpComplementKeyword_0_0_2()); }
		'complement'
		{ after(grammarAccess.getAUnaryPolyObjExpressionAccess().getOpComplementKeyword_0_0_2()); }
	)
	|
	(
		{ before(grammarAccess.getAUnaryPolyObjExpressionAccess().getOpPolyHullKeyword_0_0_3()); }
		'poly-hull'
		{ after(grammarAccess.getAUnaryPolyObjExpressionAccess().getOpPolyHullKeyword_0_0_3()); }
	)
	|
	(
		{ before(grammarAccess.getAUnaryPolyObjExpressionAccess().getOpAffineHullKeyword_0_0_4()); }
		'affine-hull'
		{ after(grammarAccess.getAUnaryPolyObjExpressionAccess().getOpAffineHullKeyword_0_0_4()); }
	)
	|
	(
		{ before(grammarAccess.getAUnaryPolyObjExpressionAccess().getOpReverseKeyword_0_0_5()); }
		'reverse'
		{ after(grammarAccess.getAUnaryPolyObjExpressionAccess().getOpReverseKeyword_0_0_5()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ISLString__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getISLStringAccess().getIndexNameParserRuleCall_0()); }
		ruleIndexName
		{ after(grammarAccess.getISLStringAccess().getIndexNameParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getISLStringAccess().getINTTerminalRuleCall_1()); }
		RULE_INT
		{ after(grammarAccess.getISLStringAccess().getINTTerminalRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getISLStringAccess().getOP_PLUSTerminalRuleCall_2()); }
		RULE_OP_PLUS
		{ after(grammarAccess.getISLStringAccess().getOP_PLUSTerminalRuleCall_2()); }
	)
	|
	(
		{ before(grammarAccess.getISLStringAccess().getOP_MINUSTerminalRuleCall_3()); }
		RULE_OP_MINUS
		{ after(grammarAccess.getISLStringAccess().getOP_MINUSTerminalRuleCall_3()); }
	)
	|
	(
		{ before(grammarAccess.getISLStringAccess().getOP_MULTerminalRuleCall_4()); }
		RULE_OP_MUL
		{ after(grammarAccess.getISLStringAccess().getOP_MULTerminalRuleCall_4()); }
	)
	|
	(
		{ before(grammarAccess.getISLStringAccess().getOP_DIVTerminalRuleCall_5()); }
		RULE_OP_DIV
		{ after(grammarAccess.getISLStringAccess().getOP_DIVTerminalRuleCall_5()); }
	)
	|
	(
		{ before(grammarAccess.getISLStringAccess().getOP_MODTerminalRuleCall_6()); }
		RULE_OP_MOD
		{ after(grammarAccess.getISLStringAccess().getOP_MODTerminalRuleCall_6()); }
	)
	|
	(
		{ before(grammarAccess.getISLStringAccess().getOP_ANDTerminalRuleCall_7()); }
		RULE_OP_AND
		{ after(grammarAccess.getISLStringAccess().getOP_ANDTerminalRuleCall_7()); }
	)
	|
	(
		{ before(grammarAccess.getISLStringAccess().getOP_ORTerminalRuleCall_8()); }
		RULE_OP_OR
		{ after(grammarAccess.getISLStringAccess().getOP_ORTerminalRuleCall_8()); }
	)
	|
	(
		{ before(grammarAccess.getISLStringAccess().getLeftSquareBracketKeyword_9()); }
		'['
		{ after(grammarAccess.getISLStringAccess().getLeftSquareBracketKeyword_9()); }
	)
	|
	(
		{ before(grammarAccess.getISLStringAccess().getRightSquareBracketKeyword_10()); }
		']'
		{ after(grammarAccess.getISLStringAccess().getRightSquareBracketKeyword_10()); }
	)
	|
	(
		{ before(grammarAccess.getISLStringAccess().getLeftParenthesisKeyword_11()); }
		'('
		{ after(grammarAccess.getISLStringAccess().getLeftParenthesisKeyword_11()); }
	)
	|
	(
		{ before(grammarAccess.getISLStringAccess().getRightParenthesisKeyword_12()); }
		')'
		{ after(grammarAccess.getISLStringAccess().getRightParenthesisKeyword_12()); }
	)
	|
	(
		{ before(grammarAccess.getISLStringAccess().getCommaKeyword_13()); }
		','
		{ after(grammarAccess.getISLStringAccess().getCommaKeyword_13()); }
	)
	|
	(
		{ before(grammarAccess.getISLStringAccess().getColonKeyword_14()); }
		':'
		{ after(grammarAccess.getISLStringAccess().getColonKeyword_14()); }
	)
	|
	(
		{ before(grammarAccess.getISLStringAccess().getINTERSECTIONTerminalRuleCall_15()); }
		RULE_INTERSECTION
		{ after(grammarAccess.getISLStringAccess().getINTERSECTIONTerminalRuleCall_15()); }
	)
	|
	(
		{ before(grammarAccess.getISLStringAccess().getUNIONTerminalRuleCall_16()); }
		RULE_UNION
		{ after(grammarAccess.getISLStringAccess().getUNIONTerminalRuleCall_16()); }
	)
	|
	(
		{ before(grammarAccess.getISLStringAccess().getWSTerminalRuleCall_17()); }
		RULE_WS
		{ after(grammarAccess.getISLStringAccess().getWSTerminalRuleCall_17()); }
	)
	|
	(
		{ before(grammarAccess.getISLStringAccess().getRELATIONAL_OPParserRuleCall_18()); }
		ruleRELATIONAL_OP
		{ after(grammarAccess.getISLStringAccess().getRELATIONAL_OPParserRuleCall_18()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AAlphaExpression__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAAlphaExpressionAccess().getAIfExpressionParserRuleCall_0()); }
		ruleAIfExpression
		{ after(grammarAccess.getAAlphaExpressionAccess().getAIfExpressionParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getAAlphaExpressionAccess().getARestrictExpressionParserRuleCall_1()); }
		ruleARestrictExpression
		{ after(grammarAccess.getAAlphaExpressionAccess().getARestrictExpressionParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getAAlphaExpressionAccess().getAAutoRestrictExpressionParserRuleCall_2()); }
		ruleAAutoRestrictExpression
		{ after(grammarAccess.getAAlphaExpressionAccess().getAAutoRestrictExpressionParserRuleCall_2()); }
	)
	|
	(
		{ before(grammarAccess.getAAlphaExpressionAccess().getAOrExpressionParserRuleCall_3()); }
		ruleAOrExpression
		{ after(grammarAccess.getAAlphaExpressionAccess().getAOrExpressionParserRuleCall_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AAlphabetsTerminalExpression__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAAlphabetsTerminalExpressionAccess().getAParanthesizedAlphabetsExpressionParserRuleCall_0()); }
		ruleAParanthesizedAlphabetsExpression
		{ after(grammarAccess.getAAlphabetsTerminalExpressionAccess().getAParanthesizedAlphabetsExpressionParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getAAlphabetsTerminalExpressionAccess().getACaseExpressionParserRuleCall_1()); }
		ruleACaseExpression
		{ after(grammarAccess.getAAlphabetsTerminalExpressionAccess().getACaseExpressionParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getAAlphabetsTerminalExpressionAccess().getAReduceExpressionParserRuleCall_2()); }
		ruleAReduceExpression
		{ after(grammarAccess.getAAlphabetsTerminalExpressionAccess().getAReduceExpressionParserRuleCall_2()); }
	)
	|
	(
		{ before(grammarAccess.getAAlphabetsTerminalExpressionAccess().getAArgReduceExpressionParserRuleCall_3()); }
		ruleAArgReduceExpression
		{ after(grammarAccess.getAAlphabetsTerminalExpressionAccess().getAArgReduceExpressionParserRuleCall_3()); }
	)
	|
	(
		{ before(grammarAccess.getAAlphabetsTerminalExpressionAccess().getAConvExpressionParserRuleCall_4()); }
		ruleAConvExpression
		{ after(grammarAccess.getAAlphabetsTerminalExpressionAccess().getAConvExpressionParserRuleCall_4()); }
	)
	|
	(
		{ before(grammarAccess.getAAlphabetsTerminalExpressionAccess().getAMultiArgExpressionParserRuleCall_5()); }
		ruleAMultiArgExpression
		{ after(grammarAccess.getAAlphabetsTerminalExpressionAccess().getAMultiArgExpressionParserRuleCall_5()); }
	)
	|
	(
		{ before(grammarAccess.getAAlphabetsTerminalExpressionAccess().getAConstantExpressionParserRuleCall_6()); }
		ruleAConstantExpression
		{ after(grammarAccess.getAAlphabetsTerminalExpressionAccess().getAConstantExpressionParserRuleCall_6()); }
	)
	|
	(
		{ before(grammarAccess.getAAlphabetsTerminalExpressionAccess().getAVariableExpressionParserRuleCall_7()); }
		ruleAVariableExpression
		{ after(grammarAccess.getAAlphabetsTerminalExpressionAccess().getAVariableExpressionParserRuleCall_7()); }
	)
	|
	(
		{ before(grammarAccess.getAAlphabetsTerminalExpressionAccess().getAIndexExpressionParserRuleCall_8()); }
		ruleAIndexExpression
		{ after(grammarAccess.getAAlphabetsTerminalExpressionAccess().getAIndexExpressionParserRuleCall_8()); }
	)
	|
	(
		{ before(grammarAccess.getAAlphabetsTerminalExpressionAccess().getAIndexExpressionInArrayNotationParserRuleCall_9()); }
		ruleAIndexExpressionInArrayNotation
		{ after(grammarAccess.getAAlphabetsTerminalExpressionAccess().getAIndexExpressionInArrayNotationParserRuleCall_9()); }
	)
	|
	(
		{ before(grammarAccess.getAAlphabetsTerminalExpressionAccess().getADependenceExpressionParserRuleCall_10()); }
		ruleADependenceExpression
		{ after(grammarAccess.getAAlphabetsTerminalExpressionAccess().getADependenceExpressionParserRuleCall_10()); }
	)
	|
	(
		{ before(grammarAccess.getAAlphabetsTerminalExpressionAccess().getADependenceInArrayNotationParserRuleCall_11()); }
		ruleADependenceInArrayNotation
		{ after(grammarAccess.getAAlphabetsTerminalExpressionAccess().getADependenceInArrayNotationParserRuleCall_11()); }
	)
	|
	(
		{ before(grammarAccess.getAAlphabetsTerminalExpressionAccess().getASelectDependenceExpressionParserRuleCall_12()); }
		ruleASelectDependenceExpression
		{ after(grammarAccess.getAAlphabetsTerminalExpressionAccess().getASelectDependenceExpressionParserRuleCall_12()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AOrExpression__OperatorAlternatives_1_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAOrExpressionAccess().getOperatorOP_ORTerminalRuleCall_1_1_0_0()); }
		RULE_OP_OR
		{ after(grammarAccess.getAOrExpressionAccess().getOperatorOP_ORTerminalRuleCall_1_1_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getAOrExpressionAccess().getOperatorOP_XORTerminalRuleCall_1_1_0_1()); }
		RULE_OP_XOR
		{ after(grammarAccess.getAOrExpressionAccess().getOperatorOP_XORTerminalRuleCall_1_1_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AAndExpression__OperatorAlternatives_1_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAAndExpressionAccess().getOperatorOP_ANDTerminalRuleCall_1_1_0_0()); }
		RULE_OP_AND
		{ after(grammarAccess.getAAndExpressionAccess().getOperatorOP_ANDTerminalRuleCall_1_1_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getAAndExpressionAccess().getOperatorOP_NANDTerminalRuleCall_1_1_0_1()); }
		RULE_OP_NAND
		{ after(grammarAccess.getAAndExpressionAccess().getOperatorOP_NANDTerminalRuleCall_1_1_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AAdditiveExpression__OpAlternatives_1_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAAdditiveExpressionAccess().getOpOP_PLUSTerminalRuleCall_1_1_0_0()); }
		RULE_OP_PLUS
		{ after(grammarAccess.getAAdditiveExpressionAccess().getOpOP_PLUSTerminalRuleCall_1_1_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getAAdditiveExpressionAccess().getOpOP_MINUSTerminalRuleCall_1_1_0_1()); }
		RULE_OP_MINUS
		{ after(grammarAccess.getAAdditiveExpressionAccess().getOpOP_MINUSTerminalRuleCall_1_1_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AMultiplicativeExpression__OpAlternatives_1_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAMultiplicativeExpressionAccess().getOpOP_MULTerminalRuleCall_1_1_0_0()); }
		RULE_OP_MUL
		{ after(grammarAccess.getAMultiplicativeExpressionAccess().getOpOP_MULTerminalRuleCall_1_1_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getAMultiplicativeExpressionAccess().getOpOP_DIVTerminalRuleCall_1_1_0_1()); }
		RULE_OP_DIV
		{ after(grammarAccess.getAMultiplicativeExpressionAccess().getOpOP_DIVTerminalRuleCall_1_1_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AMinMaxExpression__OpAlternatives_1_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAMinMaxExpressionAccess().getOpOP_MINTerminalRuleCall_1_1_0_0()); }
		RULE_OP_MIN
		{ after(grammarAccess.getAMinMaxExpressionAccess().getOpOP_MINTerminalRuleCall_1_1_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getAMinMaxExpressionAccess().getOpOP_MAXTerminalRuleCall_1_1_0_1()); }
		RULE_OP_MAX
		{ after(grammarAccess.getAMinMaxExpressionAccess().getOpOP_MAXTerminalRuleCall_1_1_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AUnaryOrTerminalExpression__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAUnaryOrTerminalExpressionAccess().getAUnaryExpressionParserRuleCall_0()); }
		ruleAUnaryExpression
		{ after(grammarAccess.getAUnaryOrTerminalExpressionAccess().getAUnaryExpressionParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getAUnaryOrTerminalExpressionAccess().getAAlphabetsTerminalExpressionParserRuleCall_1()); }
		ruleAAlphabetsTerminalExpression
		{ after(grammarAccess.getAUnaryOrTerminalExpressionAccess().getAAlphabetsTerminalExpressionParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AUnaryExpression__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAUnaryExpressionAccess().getANotExpressionParserRuleCall_0()); }
		ruleANotExpression
		{ after(grammarAccess.getAUnaryExpressionAccess().getANotExpressionParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getAUnaryExpressionAccess().getANegateExpressionParserRuleCall_1()); }
		ruleANegateExpression
		{ after(grammarAccess.getAUnaryExpressionAccess().getANegateExpressionParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AReduceExpression__ProjectionAlternatives_4_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAReduceExpressionAccess().getProjectionAFunctionParserRuleCall_4_0_0()); }
		ruleAFunction
		{ after(grammarAccess.getAReduceExpressionAccess().getProjectionAFunctionParserRuleCall_4_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getAReduceExpressionAccess().getProjectionAFunctionInArrayNotationParserRuleCall_4_0_1()); }
		ruleAFunctionInArrayNotation
		{ after(grammarAccess.getAReduceExpressionAccess().getProjectionAFunctionInArrayNotationParserRuleCall_4_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AArgReduceExpression__ProjectionAlternatives_4_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAArgReduceExpressionAccess().getProjectionAFunctionParserRuleCall_4_0_0()); }
		ruleAFunction
		{ after(grammarAccess.getAArgReduceExpressionAccess().getProjectionAFunctionParserRuleCall_4_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getAArgReduceExpressionAccess().getProjectionAFunctionInArrayNotationParserRuleCall_4_0_1()); }
		ruleAFunctionInArrayNotation
		{ after(grammarAccess.getAArgReduceExpressionAccess().getProjectionAFunctionInArrayNotationParserRuleCall_4_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__APolyObjectInRestrict__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAPolyObjectInRestrictAccess().getAISLSetParserRuleCall_0()); }
		ruleAISLSet
		{ after(grammarAccess.getAPolyObjectInRestrictAccess().getAISLSetParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getAPolyObjectInRestrictAccess().getAISLRelationParserRuleCall_1()); }
		ruleAISLRelation
		{ after(grammarAccess.getAPolyObjectInRestrictAccess().getAISLRelationParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getAPolyObjectInRestrictAccess().getADeclaredObjectParserRuleCall_2()); }
		ruleADeclaredObject
		{ after(grammarAccess.getAPolyObjectInRestrictAccess().getADeclaredObjectParserRuleCall_2()); }
	)
	|
	(
		{ before(grammarAccess.getAPolyObjectInRestrictAccess().getAVariableDomainParserRuleCall_3()); }
		(ruleAVariableDomain)
		{ after(grammarAccess.getAPolyObjectInRestrictAccess().getAVariableDomainParserRuleCall_3()); }
	)
	|
	(
		{ before(grammarAccess.getAPolyObjectInRestrictAccess().getGroup_4()); }
		(rule__APolyObjectInRestrict__Group_4__0)
		{ after(grammarAccess.getAPolyObjectInRestrictAccess().getGroup_4()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AConstantExpression__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAConstantExpressionAccess().getABooleanExpressionParserRuleCall_0()); }
		ruleABooleanExpression
		{ after(grammarAccess.getAConstantExpressionAccess().getABooleanExpressionParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getAConstantExpressionAccess().getARealExpressionParserRuleCall_1()); }
		ruleARealExpression
		{ after(grammarAccess.getAConstantExpressionAccess().getARealExpressionParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getAConstantExpressionAccess().getAIntegerExpressionParserRuleCall_2()); }
		ruleAIntegerExpression
		{ after(grammarAccess.getAConstantExpressionAccess().getAIntegerExpressionParserRuleCall_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AMultiArgExpression__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAMultiArgExpressionAccess().getAMultiArgArithmeticExpressionParserRuleCall_0()); }
		ruleAMultiArgArithmeticExpression
		{ after(grammarAccess.getAMultiArgExpressionAccess().getAMultiArgArithmeticExpressionParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getAMultiArgExpressionAccess().getAMultiArgLogicalExpressionParserRuleCall_1()); }
		ruleAMultiArgLogicalExpression
		{ after(grammarAccess.getAMultiArgExpressionAccess().getAMultiArgLogicalExpressionParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getAMultiArgExpressionAccess().getAExternalFunctionCallParserRuleCall_2()); }
		ruleAExternalFunctionCall
		{ after(grammarAccess.getAMultiArgExpressionAccess().getAExternalFunctionCallParserRuleCall_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IndexAffineExpression__Alternatives_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIndexAffineExpressionAccess().getOP_PLUSTerminalRuleCall_1_0_0()); }
		RULE_OP_PLUS
		{ after(grammarAccess.getIndexAffineExpressionAccess().getOP_PLUSTerminalRuleCall_1_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getIndexAffineExpressionAccess().getOP_MINUSTerminalRuleCall_1_0_1()); }
		RULE_OP_MINUS
		{ after(grammarAccess.getIndexAffineExpressionAccess().getOP_MINUSTerminalRuleCall_1_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IndexAffineExpressionTerminal__Alternatives_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIndexAffineExpressionTerminalAccess().getINTTerminalRuleCall_1_0()); }
		RULE_INT
		{ after(grammarAccess.getIndexAffineExpressionTerminalAccess().getINTTerminalRuleCall_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getIndexAffineExpressionTerminalAccess().getGroup_1_1()); }
		(rule__IndexAffineExpressionTerminal__Group_1_1__0)
		{ after(grammarAccess.getIndexAffineExpressionTerminalAccess().getGroup_1_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AReductionOperator__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAReductionOperatorAccess().getOpAssignment_0()); }
		(rule__AReductionOperator__OpAssignment_0)
		{ after(grammarAccess.getAReductionOperatorAccess().getOpAssignment_0()); }
	)
	|
	(
		{ before(grammarAccess.getAReductionOperatorAccess().getBuiltinAssignment_1()); }
		(rule__AReductionOperator__BuiltinAssignment_1)
		{ after(grammarAccess.getAReductionOperatorAccess().getBuiltinAssignment_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__REDUCTION_OP__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getREDUCTION_OPAccess().getARITHMETIC_REDUCTION_OPParserRuleCall_0()); }
		ruleARITHMETIC_REDUCTION_OP
		{ after(grammarAccess.getREDUCTION_OPAccess().getARITHMETIC_REDUCTION_OPParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getREDUCTION_OPAccess().getLOGICAL_REDUCTION_OPParserRuleCall_1()); }
		ruleLOGICAL_REDUCTION_OP
		{ after(grammarAccess.getREDUCTION_OPAccess().getLOGICAL_REDUCTION_OPParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ARITHMETIC_REDUCTION_OP__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getARITHMETIC_REDUCTION_OPAccess().getOP_MAXTerminalRuleCall_0()); }
		RULE_OP_MAX
		{ after(grammarAccess.getARITHMETIC_REDUCTION_OPAccess().getOP_MAXTerminalRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getARITHMETIC_REDUCTION_OPAccess().getOP_MINTerminalRuleCall_1()); }
		RULE_OP_MIN
		{ after(grammarAccess.getARITHMETIC_REDUCTION_OPAccess().getOP_MINTerminalRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getARITHMETIC_REDUCTION_OPAccess().getOP_MULTerminalRuleCall_2()); }
		RULE_OP_MUL
		{ after(grammarAccess.getARITHMETIC_REDUCTION_OPAccess().getOP_MULTerminalRuleCall_2()); }
	)
	|
	(
		{ before(grammarAccess.getARITHMETIC_REDUCTION_OPAccess().getOP_PLUSTerminalRuleCall_3()); }
		RULE_OP_PLUS
		{ after(grammarAccess.getARITHMETIC_REDUCTION_OPAccess().getOP_PLUSTerminalRuleCall_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LOGICAL_REDUCTION_OP__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLOGICAL_REDUCTION_OPAccess().getOP_ANDTerminalRuleCall_0()); }
		RULE_OP_AND
		{ after(grammarAccess.getLOGICAL_REDUCTION_OPAccess().getOP_ANDTerminalRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getLOGICAL_REDUCTION_OPAccess().getOP_ORTerminalRuleCall_1()); }
		RULE_OP_OR
		{ after(grammarAccess.getLOGICAL_REDUCTION_OPAccess().getOP_ORTerminalRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getLOGICAL_REDUCTION_OPAccess().getOP_XORTerminalRuleCall_2()); }
		RULE_OP_XOR
		{ after(grammarAccess.getLOGICAL_REDUCTION_OPAccess().getOP_XORTerminalRuleCall_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ARITHMETIC_NONREDUCTION_OP__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getARITHMETIC_NONREDUCTION_OPAccess().getOP_MINUSTerminalRuleCall_0()); }
		RULE_OP_MINUS
		{ after(grammarAccess.getARITHMETIC_NONREDUCTION_OPAccess().getOP_MINUSTerminalRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getARITHMETIC_NONREDUCTION_OPAccess().getOP_DIVTerminalRuleCall_1()); }
		RULE_OP_DIV
		{ after(grammarAccess.getARITHMETIC_NONREDUCTION_OPAccess().getOP_DIVTerminalRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getARITHMETIC_NONREDUCTION_OPAccess().getOP_MODTerminalRuleCall_2()); }
		RULE_OP_MOD
		{ after(grammarAccess.getARITHMETIC_NONREDUCTION_OPAccess().getOP_MODTerminalRuleCall_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RELATIONAL_OP__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRELATIONAL_OPAccess().getOP_EQTerminalRuleCall_0()); }
		RULE_OP_EQ
		{ after(grammarAccess.getRELATIONAL_OPAccess().getOP_EQTerminalRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getRELATIONAL_OPAccess().getOP_GETerminalRuleCall_1()); }
		RULE_OP_GE
		{ after(grammarAccess.getRELATIONAL_OPAccess().getOP_GETerminalRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getRELATIONAL_OPAccess().getOP_GTTerminalRuleCall_2()); }
		RULE_OP_GT
		{ after(grammarAccess.getRELATIONAL_OPAccess().getOP_GTTerminalRuleCall_2()); }
	)
	|
	(
		{ before(grammarAccess.getRELATIONAL_OPAccess().getOP_LETerminalRuleCall_3()); }
		RULE_OP_LE
		{ after(grammarAccess.getRELATIONAL_OPAccess().getOP_LETerminalRuleCall_3()); }
	)
	|
	(
		{ before(grammarAccess.getRELATIONAL_OPAccess().getOP_LTTerminalRuleCall_4()); }
		RULE_OP_LT
		{ after(grammarAccess.getRELATIONAL_OPAccess().getOP_LTTerminalRuleCall_4()); }
	)
	|
	(
		{ before(grammarAccess.getRELATIONAL_OPAccess().getOP_NETerminalRuleCall_5()); }
		RULE_OP_NE
		{ after(grammarAccess.getRELATIONAL_OPAccess().getOP_NETerminalRuleCall_5()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__APackageDeclaration__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__APackageDeclaration__Group__0__Impl
	rule__APackageDeclaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__APackageDeclaration__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAPackageDeclarationAccess().getPackageKeyword_0()); }
	'package'
	{ after(grammarAccess.getAPackageDeclarationAccess().getPackageKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__APackageDeclaration__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__APackageDeclaration__Group__1__Impl
	rule__APackageDeclaration__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__APackageDeclaration__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAPackageDeclarationAccess().getNameAssignment_1()); }
	(rule__APackageDeclaration__NameAssignment_1)
	{ after(grammarAccess.getAPackageDeclarationAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__APackageDeclaration__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__APackageDeclaration__Group__2__Impl
	rule__APackageDeclaration__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__APackageDeclaration__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAPackageDeclarationAccess().getLeftCurlyBracketKeyword_2()); }
	'{'
	{ after(grammarAccess.getAPackageDeclarationAccess().getLeftCurlyBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__APackageDeclaration__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__APackageDeclaration__Group__3__Impl
	rule__APackageDeclaration__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__APackageDeclaration__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAPackageDeclarationAccess().getElementsAssignment_3()); }
	(rule__APackageDeclaration__ElementsAssignment_3)*
	{ after(grammarAccess.getAPackageDeclarationAccess().getElementsAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__APackageDeclaration__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__APackageDeclaration__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__APackageDeclaration__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAPackageDeclarationAccess().getRightCurlyBracketKeyword_4()); }
	'}'
	{ after(grammarAccess.getAPackageDeclarationAccess().getRightCurlyBracketKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AImport__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AImport__Group__0__Impl
	rule__AImport__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AImport__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAImportAccess().getImportKeyword_0()); }
	'import'
	{ after(grammarAccess.getAImportAccess().getImportKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AImport__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AImport__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AImport__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAImportAccess().getImportedNamespaceAssignment_1()); }
	(rule__AImport__ImportedNamespaceAssignment_1)
	{ after(grammarAccess.getAImportAccess().getImportedNamespaceAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AConstantDeclaration__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AConstantDeclaration__Group__0__Impl
	rule__AConstantDeclaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AConstantDeclaration__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAConstantDeclarationAccess().getConstantKeyword_0()); }
	'constant'
	{ after(grammarAccess.getAConstantDeclarationAccess().getConstantKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AConstantDeclaration__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AConstantDeclaration__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AConstantDeclaration__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAConstantDeclarationAccess().getAConstantParserRuleCall_1()); }
	ruleAConstant
	{ after(grammarAccess.getAConstantDeclarationAccess().getAConstantParserRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AExternalFunctionDeclaration__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AExternalFunctionDeclaration__Group__0__Impl
	rule__AExternalFunctionDeclaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AExternalFunctionDeclaration__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAExternalFunctionDeclarationAccess().getExternalKeyword_0()); }
	'external'
	{ after(grammarAccess.getAExternalFunctionDeclarationAccess().getExternalKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AExternalFunctionDeclaration__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AExternalFunctionDeclaration__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AExternalFunctionDeclaration__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAExternalFunctionDeclarationAccess().getAExternalFunctionParserRuleCall_1()); }
	ruleAExternalFunction
	{ after(grammarAccess.getAExternalFunctionDeclarationAccess().getAExternalFunctionParserRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AExternalFunction__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AExternalFunction__Group__0__Impl
	rule__AExternalFunction__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AExternalFunction__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAExternalFunctionAccess().getNameAssignment_0()); }
	(rule__AExternalFunction__NameAssignment_0)
	{ after(grammarAccess.getAExternalFunctionAccess().getNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AExternalFunction__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AExternalFunction__Group__1__Impl
	rule__AExternalFunction__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AExternalFunction__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAExternalFunctionAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getAExternalFunctionAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AExternalFunction__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AExternalFunction__Group__2__Impl
	rule__AExternalFunction__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__AExternalFunction__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAExternalFunctionAccess().getInputCardinarityAssignment_2()); }
	(rule__AExternalFunction__InputCardinarityAssignment_2)
	{ after(grammarAccess.getAExternalFunctionAccess().getInputCardinarityAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AExternalFunction__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AExternalFunction__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AExternalFunction__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAExternalFunctionAccess().getRightParenthesisKeyword_3()); }
	')'
	{ after(grammarAccess.getAExternalFunctionAccess().getRightParenthesisKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AConstant__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AConstant__Group__0__Impl
	rule__AConstant__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AConstant__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAConstantAccess().getNameAssignment_0()); }
	(rule__AConstant__NameAssignment_0)
	{ after(grammarAccess.getAConstantAccess().getNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AConstant__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AConstant__Group__1__Impl
	rule__AConstant__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AConstant__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAConstantAccess().getOP_EQTerminalRuleCall_1()); }
	RULE_OP_EQ
	{ after(grammarAccess.getAConstantAccess().getOP_EQTerminalRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AConstant__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AConstant__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AConstant__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAConstantAccess().getValueAssignment_2()); }
	(rule__AConstant__ValueAssignment_2)
	{ after(grammarAccess.getAConstantAccess().getValueAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AAffineSystem__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AAffineSystem__Group__0__Impl
	rule__AAffineSystem__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AAffineSystem__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAAffineSystemAccess().getAffineKeyword_0()); }
	'affine'
	{ after(grammarAccess.getAAffineSystemAccess().getAffineKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AAffineSystem__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AAffineSystem__Group__1__Impl
	rule__AAffineSystem__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AAffineSystem__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAAffineSystemAccess().getNameAssignment_1()); }
	(rule__AAffineSystem__NameAssignment_1)
	{ after(grammarAccess.getAAffineSystemAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AAffineSystem__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AAffineSystem__Group__2__Impl
	rule__AAffineSystem__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__AAffineSystem__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAAffineSystemAccess().getParametersAssignment_2()); }
	(rule__AAffineSystem__ParametersAssignment_2)
	{ after(grammarAccess.getAAffineSystemAccess().getParametersAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AAffineSystem__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AAffineSystem__Group__3__Impl
	rule__AAffineSystem__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__AAffineSystem__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAAffineSystemAccess().getGroup_3()); }
	(rule__AAffineSystem__Group_3__0)?
	{ after(grammarAccess.getAAffineSystemAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AAffineSystem__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AAffineSystem__Group__4__Impl
	rule__AAffineSystem__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__AAffineSystem__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAAffineSystemAccess().getGroup_4()); }
	(rule__AAffineSystem__Group_4__0)?
	{ after(grammarAccess.getAAffineSystemAccess().getGroup_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AAffineSystem__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AAffineSystem__Group__5__Impl
	rule__AAffineSystem__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__AAffineSystem__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAAffineSystemAccess().getGroup_5()); }
	(rule__AAffineSystem__Group_5__0)?
	{ after(grammarAccess.getAAffineSystemAccess().getGroup_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AAffineSystem__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AAffineSystem__Group__6__Impl
	rule__AAffineSystem__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__AAffineSystem__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAAffineSystemAccess().getGroup_6()); }
	(rule__AAffineSystem__Group_6__0)?
	{ after(grammarAccess.getAAffineSystemAccess().getGroup_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AAffineSystem__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AAffineSystem__Group__7__Impl
	rule__AAffineSystem__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__AAffineSystem__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAAffineSystemAccess().getGroup_7()); }
	(rule__AAffineSystem__Group_7__0)?
	{ after(grammarAccess.getAAffineSystemAccess().getGroup_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AAffineSystem__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AAffineSystem__Group__8__Impl
	rule__AAffineSystem__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__AAffineSystem__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAAffineSystemAccess().getGroup_8()); }
	(rule__AAffineSystem__Group_8__0)?
	{ after(grammarAccess.getAAffineSystemAccess().getGroup_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AAffineSystem__Group__9
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AAffineSystem__Group__9__Impl
	rule__AAffineSystem__Group__10
;
finally {
	restoreStackSize(stackSize);
}

rule__AAffineSystem__Group__9__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAAffineSystemAccess().getGroup_9()); }
	(rule__AAffineSystem__Group_9__0)?
	{ after(grammarAccess.getAAffineSystemAccess().getGroup_9()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AAffineSystem__Group__10
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AAffineSystem__Group__10__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AAffineSystem__Group__10__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAAffineSystemAccess().getFullStopKeyword_10()); }
	'.'
	{ after(grammarAccess.getAAffineSystemAccess().getFullStopKeyword_10()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AAffineSystem__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AAffineSystem__Group_3__0__Impl
	rule__AAffineSystem__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AAffineSystem__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAAffineSystemAccess().getDefineKeyword_3_0()); }
	'define'
	{ after(grammarAccess.getAAffineSystemAccess().getDefineKeyword_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AAffineSystem__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AAffineSystem__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AAffineSystem__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAAffineSystemAccess().getPolyObjectsAssignment_3_1()); }
	(rule__AAffineSystem__PolyObjectsAssignment_3_1)*
	{ after(grammarAccess.getAAffineSystemAccess().getPolyObjectsAssignment_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AAffineSystem__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AAffineSystem__Group_4__0__Impl
	rule__AAffineSystem__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AAffineSystem__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAAffineSystemAccess().getInputsKeyword_4_0()); }
	'inputs'
	{ after(grammarAccess.getAAffineSystemAccess().getInputsKeyword_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AAffineSystem__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AAffineSystem__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AAffineSystem__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAAffineSystemAccess().getInputDeclarationsAssignment_4_1()); }
	(rule__AAffineSystem__InputDeclarationsAssignment_4_1)*
	{ after(grammarAccess.getAAffineSystemAccess().getInputDeclarationsAssignment_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AAffineSystem__Group_5__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AAffineSystem__Group_5__0__Impl
	rule__AAffineSystem__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AAffineSystem__Group_5__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAAffineSystemAccess().getOutputsKeyword_5_0()); }
	'outputs'
	{ after(grammarAccess.getAAffineSystemAccess().getOutputsKeyword_5_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AAffineSystem__Group_5__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AAffineSystem__Group_5__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AAffineSystem__Group_5__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAAffineSystemAccess().getOutputDeclarationsAssignment_5_1()); }
	(rule__AAffineSystem__OutputDeclarationsAssignment_5_1)*
	{ after(grammarAccess.getAAffineSystemAccess().getOutputDeclarationsAssignment_5_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AAffineSystem__Group_6__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AAffineSystem__Group_6__0__Impl
	rule__AAffineSystem__Group_6__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AAffineSystem__Group_6__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAAffineSystemAccess().getLocalsKeyword_6_0()); }
	'locals'
	{ after(grammarAccess.getAAffineSystemAccess().getLocalsKeyword_6_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AAffineSystem__Group_6__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AAffineSystem__Group_6__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AAffineSystem__Group_6__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAAffineSystemAccess().getLocalvarDeclarationsAssignment_6_1()); }
	(rule__AAffineSystem__LocalvarDeclarationsAssignment_6_1)*
	{ after(grammarAccess.getAAffineSystemAccess().getLocalvarDeclarationsAssignment_6_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AAffineSystem__Group_7__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AAffineSystem__Group_7__0__Impl
	rule__AAffineSystem__Group_7__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AAffineSystem__Group_7__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAAffineSystemAccess().getFuzzyKeyword_7_0()); }
	'fuzzy'
	{ after(grammarAccess.getAAffineSystemAccess().getFuzzyKeyword_7_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AAffineSystem__Group_7__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AAffineSystem__Group_7__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AAffineSystem__Group_7__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAAffineSystemAccess().getFuzzyVariablesAssignment_7_1()); }
	(rule__AAffineSystem__FuzzyVariablesAssignment_7_1)*
	{ after(grammarAccess.getAAffineSystemAccess().getFuzzyVariablesAssignment_7_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AAffineSystem__Group_8__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AAffineSystem__Group_8__0__Impl
	rule__AAffineSystem__Group_8__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AAffineSystem__Group_8__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAAffineSystemAccess().getOverKeyword_8_0()); }
	'over'
	{ after(grammarAccess.getAAffineSystemAccess().getOverKeyword_8_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AAffineSystem__Group_8__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AAffineSystem__Group_8__1__Impl
	rule__AAffineSystem__Group_8__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AAffineSystem__Group_8__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAAffineSystemAccess().getWhileDomainAssignment_8_1()); }
	(rule__AAffineSystem__WhileDomainAssignment_8_1)
	{ after(grammarAccess.getAAffineSystemAccess().getWhileDomainAssignment_8_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AAffineSystem__Group_8__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AAffineSystem__Group_8__2__Impl
	rule__AAffineSystem__Group_8__3
;
finally {
	restoreStackSize(stackSize);
}

rule__AAffineSystem__Group_8__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAAffineSystemAccess().getWhileAssignment_8_2()); }
	(rule__AAffineSystem__WhileAssignment_8_2)
	{ after(grammarAccess.getAAffineSystemAccess().getWhileAssignment_8_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AAffineSystem__Group_8__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AAffineSystem__Group_8__3__Impl
	rule__AAffineSystem__Group_8__4
;
finally {
	restoreStackSize(stackSize);
}

rule__AAffineSystem__Group_8__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAAffineSystemAccess().getLeftParenthesisKeyword_8_3()); }
	'('
	{ after(grammarAccess.getAAffineSystemAccess().getLeftParenthesisKeyword_8_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AAffineSystem__Group_8__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AAffineSystem__Group_8__4__Impl
	rule__AAffineSystem__Group_8__5
;
finally {
	restoreStackSize(stackSize);
}

rule__AAffineSystem__Group_8__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAAffineSystemAccess().getTestExpressionAssignment_8_4()); }
	(rule__AAffineSystem__TestExpressionAssignment_8_4)
	{ after(grammarAccess.getAAffineSystemAccess().getTestExpressionAssignment_8_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AAffineSystem__Group_8__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AAffineSystem__Group_8__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AAffineSystem__Group_8__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAAffineSystemAccess().getRightParenthesisKeyword_8_5()); }
	')'
	{ after(grammarAccess.getAAffineSystemAccess().getRightParenthesisKeyword_8_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AAffineSystem__Group_9__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AAffineSystem__Group_9__0__Impl
	rule__AAffineSystem__Group_9__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AAffineSystem__Group_9__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAAffineSystemAccess().getLetKeyword_9_0()); }
	'let'
	{ after(grammarAccess.getAAffineSystemAccess().getLetKeyword_9_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AAffineSystem__Group_9__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AAffineSystem__Group_9__1__Impl
	rule__AAffineSystem__Group_9__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AAffineSystem__Group_9__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAAffineSystemAccess().getUseEquationsAssignment_9_1()); }
	(rule__AAffineSystem__UseEquationsAssignment_9_1)*
	{ after(grammarAccess.getAAffineSystemAccess().getUseEquationsAssignment_9_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AAffineSystem__Group_9__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AAffineSystem__Group_9__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AAffineSystem__Group_9__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAAffineSystemAccess().getEquationsAssignment_9_2()); }
	(rule__AAffineSystem__EquationsAssignment_9_2)*
	{ after(grammarAccess.getAAffineSystemAccess().getEquationsAssignment_9_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AVariableDeclaration__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AVariableDeclaration__Group__0__Impl
	rule__AVariableDeclaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AVariableDeclaration__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAVariableDeclarationAccess().getVarListAssignment_0()); }
	(rule__AVariableDeclaration__VarListAssignment_0)
	{ after(grammarAccess.getAVariableDeclarationAccess().getVarListAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AVariableDeclaration__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AVariableDeclaration__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AVariableDeclaration__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAVariableDeclarationAccess().getGroup_1()); }
	(rule__AVariableDeclaration__Group_1__0)?
	{ after(grammarAccess.getAVariableDeclarationAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AVariableDeclaration__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AVariableDeclaration__Group_1__0__Impl
	rule__AVariableDeclaration__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AVariableDeclaration__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAVariableDeclarationAccess().getColonKeyword_1_0()); }
	':'
	{ after(grammarAccess.getAVariableDeclarationAccess().getColonKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AVariableDeclaration__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AVariableDeclaration__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AVariableDeclaration__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAVariableDeclarationAccess().getDomainAssignment_1_1()); }
	(rule__AVariableDeclaration__DomainAssignment_1_1)
	{ after(grammarAccess.getAVariableDeclarationAccess().getDomainAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AVariableList__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AVariableList__Group__0__Impl
	rule__AVariableList__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AVariableList__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAVariableListAccess().getVarsAssignment_0()); }
	(rule__AVariableList__VarsAssignment_0)
	{ after(grammarAccess.getAVariableListAccess().getVarsAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AVariableList__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AVariableList__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AVariableList__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAVariableListAccess().getGroup_1()); }
	(rule__AVariableList__Group_1__0)*
	{ after(grammarAccess.getAVariableListAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AVariableList__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AVariableList__Group_1__0__Impl
	rule__AVariableList__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AVariableList__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAVariableListAccess().getCommaKeyword_1_0()); }
	','
	{ after(grammarAccess.getAVariableListAccess().getCommaKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AVariableList__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AVariableList__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AVariableList__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAVariableListAccess().getVarsAssignment_1_1()); }
	(rule__AVariableList__VarsAssignment_1_1)
	{ after(grammarAccess.getAVariableListAccess().getVarsAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AFuzzyVariableDeclaration__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AFuzzyVariableDeclaration__Group__0__Impl
	rule__AFuzzyVariableDeclaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AFuzzyVariableDeclaration__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAFuzzyVariableDeclarationAccess().getVarListAssignment_0()); }
	(rule__AFuzzyVariableDeclaration__VarListAssignment_0)
	{ after(grammarAccess.getAFuzzyVariableDeclarationAccess().getVarListAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AFuzzyVariableDeclaration__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AFuzzyVariableDeclaration__Group__1__Impl
	rule__AFuzzyVariableDeclaration__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AFuzzyVariableDeclaration__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAFuzzyVariableDeclarationAccess().getColonKeyword_1()); }
	':'
	{ after(grammarAccess.getAFuzzyVariableDeclarationAccess().getColonKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AFuzzyVariableDeclaration__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AFuzzyVariableDeclaration__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AFuzzyVariableDeclaration__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAFuzzyVariableDeclarationAccess().getRelationAssignment_2()); }
	(rule__AFuzzyVariableDeclaration__RelationAssignment_2)
	{ after(grammarAccess.getAFuzzyVariableDeclarationAccess().getRelationAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__QualifiedName__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QualifiedName__Group__0__Impl
	rule__QualifiedName__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_0()); }
	RULE_ID
	{ after(grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QualifiedName__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQualifiedNameAccess().getGroup_1()); }
	(rule__QualifiedName__Group_1__0)*
	{ after(grammarAccess.getQualifiedNameAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__QualifiedName__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QualifiedName__Group_1__0__Impl
	rule__QualifiedName__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQualifiedNameAccess().getFullStopKeyword_1_0()); }
	'.'
	{ after(grammarAccess.getQualifiedNameAccess().getFullStopKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QualifiedName__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_1_1()); }
	RULE_ID
	{ after(grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__QualifiedNameWithWildcard__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QualifiedNameWithWildcard__Group__0__Impl
	rule__QualifiedNameWithWildcard__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedNameWithWildcard__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQualifiedNameWithWildcardAccess().getQualifiedNameParserRuleCall_0()); }
	ruleQualifiedName
	{ after(grammarAccess.getQualifiedNameWithWildcardAccess().getQualifiedNameParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedNameWithWildcard__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QualifiedNameWithWildcard__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedNameWithWildcard__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQualifiedNameWithWildcardAccess().getFullStopAsteriskKeyword_1()); }
	('.*')?
	{ after(grammarAccess.getQualifiedNameWithWildcardAccess().getFullStopAsteriskKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__IndexName__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IndexName__Group__0__Impl
	rule__IndexName__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IndexName__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIndexNameAccess().getIDTerminalRuleCall_0()); }
	RULE_ID
	{ after(grammarAccess.getIndexNameAccess().getIDTerminalRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IndexName__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IndexName__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IndexName__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIndexNameAccess().getApostropheKeyword_1()); }
	('\'')*
	{ after(grammarAccess.getIndexNameAccess().getApostropheKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AIndexList__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AIndexList__Group__0__Impl
	rule__AIndexList__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AIndexList__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAIndexListAccess().getAIndexDimensionParserRuleCall_0()); }
	ruleAIndexDimension
	{ after(grammarAccess.getAIndexListAccess().getAIndexDimensionParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AIndexList__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AIndexList__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AIndexList__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAIndexListAccess().getGroup_1()); }
	(rule__AIndexList__Group_1__0)*
	{ after(grammarAccess.getAIndexListAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AIndexList__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AIndexList__Group_1__0__Impl
	rule__AIndexList__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AIndexList__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAIndexListAccess().getCommaKeyword_1_0()); }
	','
	{ after(grammarAccess.getAIndexListAccess().getCommaKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AIndexList__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AIndexList__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AIndexList__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAIndexListAccess().getAIndexDimensionParserRuleCall_1_1()); }
	ruleAIndexDimension
	{ after(grammarAccess.getAIndexListAccess().getAIndexDimensionParserRuleCall_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PolyhedralObject__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PolyhedralObject__Group__0__Impl
	rule__PolyhedralObject__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PolyhedralObject__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPolyhedralObjectAccess().getNameAssignment_0()); }
	(rule__PolyhedralObject__NameAssignment_0)
	{ after(grammarAccess.getPolyhedralObjectAccess().getNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PolyhedralObject__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PolyhedralObject__Group__1__Impl
	rule__PolyhedralObject__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PolyhedralObject__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPolyhedralObjectAccess().getOP_EQTerminalRuleCall_1()); }
	RULE_OP_EQ
	{ after(grammarAccess.getPolyhedralObjectAccess().getOP_EQTerminalRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PolyhedralObject__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PolyhedralObject__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PolyhedralObject__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPolyhedralObjectAccess().getObjectAssignment_2()); }
	(rule__PolyhedralObject__ObjectAssignment_2)
	{ after(grammarAccess.getPolyhedralObjectAccess().getObjectAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__APolyhedralObjectExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__APolyhedralObjectExpression__Group__0__Impl
	rule__APolyhedralObjectExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__APolyhedralObjectExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAPolyhedralObjectExpressionAccess().getAUnaryOrTerminalPolyObjExpressionParserRuleCall_0()); }
	ruleAUnaryOrTerminalPolyObjExpression
	{ after(grammarAccess.getAPolyhedralObjectExpressionAccess().getAUnaryOrTerminalPolyObjExpressionParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__APolyhedralObjectExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__APolyhedralObjectExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__APolyhedralObjectExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAPolyhedralObjectExpressionAccess().getGroup_1()); }
	(rule__APolyhedralObjectExpression__Group_1__0)*
	{ after(grammarAccess.getAPolyhedralObjectExpressionAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__APolyhedralObjectExpression__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__APolyhedralObjectExpression__Group_1__0__Impl
	rule__APolyhedralObjectExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__APolyhedralObjectExpression__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAPolyhedralObjectExpressionAccess().getABinaryPolyObjExpressionLeftAction_1_0()); }
	()
	{ after(grammarAccess.getAPolyhedralObjectExpressionAccess().getABinaryPolyObjExpressionLeftAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__APolyhedralObjectExpression__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__APolyhedralObjectExpression__Group_1__1__Impl
	rule__APolyhedralObjectExpression__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__APolyhedralObjectExpression__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAPolyhedralObjectExpressionAccess().getOperatorAssignment_1_1()); }
	(rule__APolyhedralObjectExpression__OperatorAssignment_1_1)
	{ after(grammarAccess.getAPolyhedralObjectExpressionAccess().getOperatorAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__APolyhedralObjectExpression__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__APolyhedralObjectExpression__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__APolyhedralObjectExpression__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAPolyhedralObjectExpressionAccess().getRightAssignment_1_2()); }
	(rule__APolyhedralObjectExpression__RightAssignment_1_2)
	{ after(grammarAccess.getAPolyhedralObjectExpressionAccess().getRightAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__APolyObjTerminal__Group_5__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__APolyObjTerminal__Group_5__0__Impl
	rule__APolyObjTerminal__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__APolyObjTerminal__Group_5__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAPolyObjTerminalAccess().getLeftParenthesisKeyword_5_0()); }
	'('
	{ after(grammarAccess.getAPolyObjTerminalAccess().getLeftParenthesisKeyword_5_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__APolyObjTerminal__Group_5__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__APolyObjTerminal__Group_5__1__Impl
	rule__APolyObjTerminal__Group_5__2
;
finally {
	restoreStackSize(stackSize);
}

rule__APolyObjTerminal__Group_5__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAPolyObjTerminalAccess().getAPolyhedralObjectExpressionParserRuleCall_5_1()); }
	ruleAPolyhedralObjectExpression
	{ after(grammarAccess.getAPolyObjTerminalAccess().getAPolyhedralObjectExpressionParserRuleCall_5_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__APolyObjTerminal__Group_5__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__APolyObjTerminal__Group_5__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__APolyObjTerminal__Group_5__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAPolyObjTerminalAccess().getRightParenthesisKeyword_5_2()); }
	')'
	{ after(grammarAccess.getAPolyObjTerminalAccess().getRightParenthesisKeyword_5_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AUnaryPolyObjExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AUnaryPolyObjExpression__Group__0__Impl
	rule__AUnaryPolyObjExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AUnaryPolyObjExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAUnaryPolyObjExpressionAccess().getOpAssignment_0()); }
	(rule__AUnaryPolyObjExpression__OpAssignment_0)
	{ after(grammarAccess.getAUnaryPolyObjExpressionAccess().getOpAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AUnaryPolyObjExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AUnaryPolyObjExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AUnaryPolyObjExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAUnaryPolyObjExpressionAccess().getExprAssignment_1()); }
	(rule__AUnaryPolyObjExpression__ExprAssignment_1)
	{ after(grammarAccess.getAUnaryPolyObjExpressionAccess().getExprAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AVariableDomain__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AVariableDomain__Group__0__Impl
	rule__AVariableDomain__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AVariableDomain__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAVariableDomainAccess().getLeftCurlyBracketKeyword_0()); }
	'{'
	{ after(grammarAccess.getAVariableDomainAccess().getLeftCurlyBracketKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AVariableDomain__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AVariableDomain__Group__1__Impl
	rule__AVariableDomain__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AVariableDomain__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAVariableDomainAccess().getVarAssignment_1()); }
	(rule__AVariableDomain__VarAssignment_1)
	{ after(grammarAccess.getAVariableDomainAccess().getVarAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AVariableDomain__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AVariableDomain__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AVariableDomain__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAVariableDomainAccess().getRightCurlyBracketKeyword_2()); }
	'}'
	{ after(grammarAccess.getAVariableDomainAccess().getRightCurlyBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ARectangularDomain__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ARectangularDomain__Group__0__Impl
	rule__ARectangularDomain__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ARectangularDomain__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getARectangularDomainAccess().getLeftSquareBracketKeyword_0()); }
	'['
	{ after(grammarAccess.getARectangularDomainAccess().getLeftSquareBracketKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ARectangularDomain__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ARectangularDomain__Group__1__Impl
	rule__ARectangularDomain__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ARectangularDomain__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getARectangularDomainAccess().getDimensionsAssignment_1()); }
	(rule__ARectangularDomain__DimensionsAssignment_1)
	{ after(grammarAccess.getARectangularDomainAccess().getDimensionsAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ARectangularDomain__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ARectangularDomain__Group__2__Impl
	rule__ARectangularDomain__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ARectangularDomain__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getARectangularDomainAccess().getRightSquareBracketKeyword_2()); }
	']'
	{ after(grammarAccess.getARectangularDomainAccess().getRightSquareBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ARectangularDomain__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ARectangularDomain__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ARectangularDomain__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getARectangularDomainAccess().getGroup_3()); }
	(rule__ARectangularDomain__Group_3__0)?
	{ after(grammarAccess.getARectangularDomainAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ARectangularDomain__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ARectangularDomain__Group_3__0__Impl
	rule__ARectangularDomain__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ARectangularDomain__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getARectangularDomainAccess().getAsKeyword_3_0()); }
	'as'
	{ after(grammarAccess.getARectangularDomainAccess().getAsKeyword_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ARectangularDomain__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ARectangularDomain__Group_3__1__Impl
	rule__ARectangularDomain__Group_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ARectangularDomain__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getARectangularDomainAccess().getLeftSquareBracketKeyword_3_1()); }
	'['
	{ after(grammarAccess.getARectangularDomainAccess().getLeftSquareBracketKeyword_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ARectangularDomain__Group_3__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ARectangularDomain__Group_3__2__Impl
	rule__ARectangularDomain__Group_3__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ARectangularDomain__Group_3__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getARectangularDomainAccess().getNamesAssignment_3_2()); }
	(rule__ARectangularDomain__NamesAssignment_3_2)
	{ after(grammarAccess.getARectangularDomainAccess().getNamesAssignment_3_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ARectangularDomain__Group_3__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ARectangularDomain__Group_3__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ARectangularDomain__Group_3__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getARectangularDomainAccess().getRightSquareBracketKeyword_3_3()); }
	']'
	{ after(grammarAccess.getARectangularDomainAccess().getRightSquareBracketKeyword_3_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AISLSet__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AISLSet__Group__0__Impl
	rule__AISLSet__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AISLSet__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAISLSetAccess().getLeftCurlyBracketKeyword_0()); }
	'{'
	{ after(grammarAccess.getAISLSetAccess().getLeftCurlyBracketKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AISLSet__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AISLSet__Group__1__Impl
	rule__AISLSet__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AISLSet__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAISLSetAccess().getSetsAssignment_1()); }
	(rule__AISLSet__SetsAssignment_1)
	{ after(grammarAccess.getAISLSetAccess().getSetsAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AISLSet__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AISLSet__Group__2__Impl
	rule__AISLSet__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__AISLSet__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAISLSetAccess().getGroup_2()); }
	(rule__AISLSet__Group_2__0)*
	{ after(grammarAccess.getAISLSetAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AISLSet__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AISLSet__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AISLSet__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAISLSetAccess().getRightCurlyBracketKeyword_3()); }
	'}'
	{ after(grammarAccess.getAISLSetAccess().getRightCurlyBracketKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AISLSet__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AISLSet__Group_2__0__Impl
	rule__AISLSet__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AISLSet__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAISLSetAccess().getSemicolonKeyword_2_0()); }
	';'
	{ after(grammarAccess.getAISLSetAccess().getSemicolonKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AISLSet__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AISLSet__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AISLSet__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAISLSetAccess().getRelationsAssignment_2_1()); }
	(rule__AISLSet__RelationsAssignment_2_1)
	{ after(grammarAccess.getAISLSetAccess().getRelationsAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AISLBasicSet__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AISLBasicSet__Group__0__Impl
	rule__AISLBasicSet__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AISLBasicSet__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAISLBasicSetAccess().getGroup_0()); }
	(rule__AISLBasicSet__Group_0__0)?
	{ after(grammarAccess.getAISLBasicSetAccess().getGroup_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AISLBasicSet__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AISLBasicSet__Group__1__Impl
	rule__AISLBasicSet__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AISLBasicSet__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAISLBasicSetAccess().getColonKeyword_1()); }
	':'
	{ after(grammarAccess.getAISLBasicSetAccess().getColonKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AISLBasicSet__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AISLBasicSet__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AISLBasicSet__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAISLBasicSetAccess().getConstraintStringAssignment_2()); }
	(rule__AISLBasicSet__ConstraintStringAssignment_2)
	{ after(grammarAccess.getAISLBasicSetAccess().getConstraintStringAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AISLBasicSet__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AISLBasicSet__Group_0__0__Impl
	rule__AISLBasicSet__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AISLBasicSet__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAISLBasicSetAccess().getLeftSquareBracketKeyword_0_0()); }
	'['
	{ after(grammarAccess.getAISLBasicSetAccess().getLeftSquareBracketKeyword_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AISLBasicSet__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AISLBasicSet__Group_0__1__Impl
	rule__AISLBasicSet__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AISLBasicSet__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAISLBasicSetAccess().getDimsAssignment_0_1()); }
	(rule__AISLBasicSet__DimsAssignment_0_1)
	{ after(grammarAccess.getAISLBasicSetAccess().getDimsAssignment_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AISLBasicSet__Group_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AISLBasicSet__Group_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AISLBasicSet__Group_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAISLBasicSetAccess().getRightSquareBracketKeyword_0_2()); }
	']'
	{ after(grammarAccess.getAISLBasicSetAccess().getRightSquareBracketKeyword_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AISLRelation__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AISLRelation__Group__0__Impl
	rule__AISLRelation__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AISLRelation__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAISLRelationAccess().getLeftCurlyBracketKeyword_0()); }
	'{'
	{ after(grammarAccess.getAISLRelationAccess().getLeftCurlyBracketKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AISLRelation__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AISLRelation__Group__1__Impl
	rule__AISLRelation__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AISLRelation__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAISLRelationAccess().getRelationsAssignment_1()); }
	(rule__AISLRelation__RelationsAssignment_1)
	{ after(grammarAccess.getAISLRelationAccess().getRelationsAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AISLRelation__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AISLRelation__Group__2__Impl
	rule__AISLRelation__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__AISLRelation__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAISLRelationAccess().getGroup_2()); }
	(rule__AISLRelation__Group_2__0)*
	{ after(grammarAccess.getAISLRelationAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AISLRelation__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AISLRelation__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AISLRelation__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAISLRelationAccess().getRightCurlyBracketKeyword_3()); }
	'}'
	{ after(grammarAccess.getAISLRelationAccess().getRightCurlyBracketKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AISLRelation__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AISLRelation__Group_2__0__Impl
	rule__AISLRelation__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AISLRelation__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAISLRelationAccess().getSemicolonKeyword_2_0()); }
	';'
	{ after(grammarAccess.getAISLRelationAccess().getSemicolonKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AISLRelation__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AISLRelation__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AISLRelation__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAISLRelationAccess().getRelationsAssignment_2_1()); }
	(rule__AISLRelation__RelationsAssignment_2_1)
	{ after(grammarAccess.getAISLRelationAccess().getRelationsAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AISLBasicRelation__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AISLBasicRelation__Group__0__Impl
	rule__AISLBasicRelation__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AISLBasicRelation__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAISLBasicRelationAccess().getLeftSquareBracketKeyword_0()); }
	'['
	{ after(grammarAccess.getAISLBasicRelationAccess().getLeftSquareBracketKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AISLBasicRelation__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AISLBasicRelation__Group__1__Impl
	rule__AISLBasicRelation__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AISLBasicRelation__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAISLBasicRelationAccess().getInDimsAssignment_1()); }
	(rule__AISLBasicRelation__InDimsAssignment_1)
	{ after(grammarAccess.getAISLBasicRelationAccess().getInDimsAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AISLBasicRelation__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AISLBasicRelation__Group__2__Impl
	rule__AISLBasicRelation__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__AISLBasicRelation__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAISLBasicRelationAccess().getRightSquareBracketKeyword_2()); }
	']'
	{ after(grammarAccess.getAISLBasicRelationAccess().getRightSquareBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AISLBasicRelation__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AISLBasicRelation__Group__3__Impl
	rule__AISLBasicRelation__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__AISLBasicRelation__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAISLBasicRelationAccess().getHyphenMinusGreaterThanSignKeyword_3()); }
	'->'
	{ after(grammarAccess.getAISLBasicRelationAccess().getHyphenMinusGreaterThanSignKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AISLBasicRelation__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AISLBasicRelation__Group__4__Impl
	rule__AISLBasicRelation__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__AISLBasicRelation__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAISLBasicRelationAccess().getLeftSquareBracketKeyword_4()); }
	'['
	{ after(grammarAccess.getAISLBasicRelationAccess().getLeftSquareBracketKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AISLBasicRelation__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AISLBasicRelation__Group__5__Impl
	rule__AISLBasicRelation__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__AISLBasicRelation__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAISLBasicRelationAccess().getOutDimsAssignment_5()); }
	(rule__AISLBasicRelation__OutDimsAssignment_5)
	{ after(grammarAccess.getAISLBasicRelationAccess().getOutDimsAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AISLBasicRelation__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AISLBasicRelation__Group__6__Impl
	rule__AISLBasicRelation__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__AISLBasicRelation__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAISLBasicRelationAccess().getRightSquareBracketKeyword_6()); }
	']'
	{ after(grammarAccess.getAISLBasicRelationAccess().getRightSquareBracketKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AISLBasicRelation__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AISLBasicRelation__Group__7__Impl
	rule__AISLBasicRelation__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__AISLBasicRelation__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAISLBasicRelationAccess().getColonKeyword_7()); }
	':'
	{ after(grammarAccess.getAISLBasicRelationAccess().getColonKeyword_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AISLBasicRelation__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AISLBasicRelation__Group__8__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AISLBasicRelation__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAISLBasicRelationAccess().getConstraintStrAssignment_8()); }
	(rule__AISLBasicRelation__ConstraintStrAssignment_8)
	{ after(grammarAccess.getAISLBasicRelationAccess().getConstraintStrAssignment_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AParamDomain__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AParamDomain__Group__0__Impl
	rule__AParamDomain__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AParamDomain__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAParamDomainAccess().getLeftSquareBracketKeyword_0()); }
	'['
	{ after(grammarAccess.getAParamDomainAccess().getLeftSquareBracketKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AParamDomain__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AParamDomain__Group__1__Impl
	rule__AParamDomain__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AParamDomain__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAParamDomainAccess().getAIndexListParserRuleCall_1()); }
	ruleAIndexList
	{ after(grammarAccess.getAParamDomainAccess().getAIndexListParserRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AParamDomain__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AParamDomain__Group__2__Impl
	rule__AParamDomain__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__AParamDomain__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAParamDomainAccess().getRightSquareBracketKeyword_2()); }
	']'
	{ after(grammarAccess.getAParamDomainAccess().getRightSquareBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AParamDomain__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AParamDomain__Group__3__Impl
	rule__AParamDomain__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__AParamDomain__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAParamDomainAccess().getHyphenMinusGreaterThanSignKeyword_3()); }
	'->'
	{ after(grammarAccess.getAParamDomainAccess().getHyphenMinusGreaterThanSignKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AParamDomain__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AParamDomain__Group__4__Impl
	rule__AParamDomain__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__AParamDomain__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAParamDomainAccess().getLeftCurlyBracketKeyword_4()); }
	'{'
	{ after(grammarAccess.getAParamDomainAccess().getLeftCurlyBracketKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AParamDomain__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AParamDomain__Group__5__Impl
	rule__AParamDomain__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__AParamDomain__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAParamDomainAccess().getColonKeyword_5()); }
	':'
	{ after(grammarAccess.getAParamDomainAccess().getColonKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AParamDomain__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AParamDomain__Group__6__Impl
	rule__AParamDomain__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__AParamDomain__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAParamDomainAccess().getISLStringParserRuleCall_6()); }
	ruleISLString
	{ after(grammarAccess.getAParamDomainAccess().getISLStringParserRuleCall_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AParamDomain__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AParamDomain__Group__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AParamDomain__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAParamDomainAccess().getRightCurlyBracketKeyword_7()); }
	'}'
	{ after(grammarAccess.getAParamDomainAccess().getRightCurlyBracketKeyword_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AEquation__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AEquation__Group__0__Impl
	rule__AEquation__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AEquation__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAEquationAccess().getVarAssignment_0()); }
	(rule__AEquation__VarAssignment_0)
	{ after(grammarAccess.getAEquationAccess().getVarAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AEquation__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AEquation__Group__1__Impl
	rule__AEquation__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AEquation__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAEquationAccess().getGroup_1()); }
	(rule__AEquation__Group_1__0)?
	{ after(grammarAccess.getAEquationAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AEquation__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AEquation__Group__2__Impl
	rule__AEquation__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__AEquation__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAEquationAccess().getOP_EQTerminalRuleCall_2()); }
	RULE_OP_EQ
	{ after(grammarAccess.getAEquationAccess().getOP_EQTerminalRuleCall_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AEquation__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AEquation__Group__3__Impl
	rule__AEquation__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__AEquation__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAEquationAccess().getExprAssignment_3()); }
	(rule__AEquation__ExprAssignment_3)
	{ after(grammarAccess.getAEquationAccess().getExprAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AEquation__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AEquation__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AEquation__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAEquationAccess().getSemicolonKeyword_4()); }
	';'
	{ after(grammarAccess.getAEquationAccess().getSemicolonKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AEquation__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AEquation__Group_1__0__Impl
	rule__AEquation__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AEquation__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAEquationAccess().getLeftSquareBracketKeyword_1_0()); }
	'['
	{ after(grammarAccess.getAEquationAccess().getLeftSquareBracketKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AEquation__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AEquation__Group_1__1__Impl
	rule__AEquation__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AEquation__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAEquationAccess().getIndexesAssignment_1_1()); }
	(rule__AEquation__IndexesAssignment_1_1)
	{ after(grammarAccess.getAEquationAccess().getIndexesAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AEquation__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AEquation__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AEquation__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAEquationAccess().getRightSquareBracketKeyword_1_2()); }
	']'
	{ after(grammarAccess.getAEquationAccess().getRightSquareBracketKeyword_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AUseEquation__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AUseEquation__Group__0__Impl
	rule__AUseEquation__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AUseEquation__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAUseEquationAccess().getGroup_0()); }
	(rule__AUseEquation__Group_0__0)?
	{ after(grammarAccess.getAUseEquationAccess().getGroup_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AUseEquation__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AUseEquation__Group__1__Impl
	rule__AUseEquation__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AUseEquation__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAUseEquationAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getAUseEquationAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AUseEquation__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AUseEquation__Group__2__Impl
	rule__AUseEquation__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__AUseEquation__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAUseEquationAccess().getGroup_2()); }
	(rule__AUseEquation__Group_2__0)?
	{ after(grammarAccess.getAUseEquationAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AUseEquation__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AUseEquation__Group__3__Impl
	rule__AUseEquation__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__AUseEquation__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAUseEquationAccess().getRightParenthesisKeyword_3()); }
	')'
	{ after(grammarAccess.getAUseEquationAccess().getRightParenthesisKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AUseEquation__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AUseEquation__Group__4__Impl
	rule__AUseEquation__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__AUseEquation__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAUseEquationAccess().getOP_EQTerminalRuleCall_4()); }
	RULE_OP_EQ
	{ after(grammarAccess.getAUseEquationAccess().getOP_EQTerminalRuleCall_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AUseEquation__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AUseEquation__Group__5__Impl
	rule__AUseEquation__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__AUseEquation__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAUseEquationAccess().getSystemAssignment_5()); }
	(rule__AUseEquation__SystemAssignment_5)
	{ after(grammarAccess.getAUseEquationAccess().getSystemAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AUseEquation__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AUseEquation__Group__6__Impl
	rule__AUseEquation__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__AUseEquation__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAUseEquationAccess().getLeftSquareBracketKeyword_6()); }
	'['
	{ after(grammarAccess.getAUseEquationAccess().getLeftSquareBracketKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AUseEquation__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AUseEquation__Group__7__Impl
	rule__AUseEquation__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__AUseEquation__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAUseEquationAccess().getCallParamsAssignment_7()); }
	(rule__AUseEquation__CallParamsAssignment_7)
	{ after(grammarAccess.getAUseEquationAccess().getCallParamsAssignment_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AUseEquation__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AUseEquation__Group__8__Impl
	rule__AUseEquation__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__AUseEquation__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAUseEquationAccess().getRightSquareBracketKeyword_8()); }
	']'
	{ after(grammarAccess.getAUseEquationAccess().getRightSquareBracketKeyword_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AUseEquation__Group__9
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AUseEquation__Group__9__Impl
	rule__AUseEquation__Group__10
;
finally {
	restoreStackSize(stackSize);
}

rule__AUseEquation__Group__9__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAUseEquationAccess().getLeftParenthesisKeyword_9()); }
	'('
	{ after(grammarAccess.getAUseEquationAccess().getLeftParenthesisKeyword_9()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AUseEquation__Group__10
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AUseEquation__Group__10__Impl
	rule__AUseEquation__Group__11
;
finally {
	restoreStackSize(stackSize);
}

rule__AUseEquation__Group__10__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAUseEquationAccess().getGroup_10()); }
	(rule__AUseEquation__Group_10__0)?
	{ after(grammarAccess.getAUseEquationAccess().getGroup_10()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AUseEquation__Group__11
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AUseEquation__Group__11__Impl
	rule__AUseEquation__Group__12
;
finally {
	restoreStackSize(stackSize);
}

rule__AUseEquation__Group__11__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAUseEquationAccess().getRightParenthesisKeyword_11()); }
	')'
	{ after(grammarAccess.getAUseEquationAccess().getRightParenthesisKeyword_11()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AUseEquation__Group__12
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AUseEquation__Group__12__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AUseEquation__Group__12__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAUseEquationAccess().getSemicolonKeyword_12()); }
	';'
	{ after(grammarAccess.getAUseEquationAccess().getSemicolonKeyword_12()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AUseEquation__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AUseEquation__Group_0__0__Impl
	rule__AUseEquation__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AUseEquation__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAUseEquationAccess().getOverKeyword_0_0()); }
	'over'
	{ after(grammarAccess.getAUseEquationAccess().getOverKeyword_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AUseEquation__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AUseEquation__Group_0__1__Impl
	rule__AUseEquation__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AUseEquation__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAUseEquationAccess().getInstantiationDomainAssignment_0_1()); }
	(rule__AUseEquation__InstantiationDomainAssignment_0_1)
	{ after(grammarAccess.getAUseEquationAccess().getInstantiationDomainAssignment_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AUseEquation__Group_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AUseEquation__Group_0__2__Impl
	rule__AUseEquation__Group_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__AUseEquation__Group_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAUseEquationAccess().getGroup_0_2()); }
	(rule__AUseEquation__Group_0_2__0)?
	{ after(grammarAccess.getAUseEquationAccess().getGroup_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AUseEquation__Group_0__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AUseEquation__Group_0__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AUseEquation__Group_0__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAUseEquationAccess().getColonKeyword_0_3()); }
	':'
	{ after(grammarAccess.getAUseEquationAccess().getColonKeyword_0_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AUseEquation__Group_0_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AUseEquation__Group_0_2__0__Impl
	rule__AUseEquation__Group_0_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AUseEquation__Group_0_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAUseEquationAccess().getWithKeyword_0_2_0()); }
	'with'
	{ after(grammarAccess.getAUseEquationAccess().getWithKeyword_0_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AUseEquation__Group_0_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AUseEquation__Group_0_2__1__Impl
	rule__AUseEquation__Group_0_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AUseEquation__Group_0_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAUseEquationAccess().getLeftSquareBracketKeyword_0_2_1()); }
	'['
	{ after(grammarAccess.getAUseEquationAccess().getLeftSquareBracketKeyword_0_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AUseEquation__Group_0_2__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AUseEquation__Group_0_2__2__Impl
	rule__AUseEquation__Group_0_2__3
;
finally {
	restoreStackSize(stackSize);
}

rule__AUseEquation__Group_0_2__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAUseEquationAccess().getSubsystemDimsAssignment_0_2_2()); }
	(rule__AUseEquation__SubsystemDimsAssignment_0_2_2)
	{ after(grammarAccess.getAUseEquationAccess().getSubsystemDimsAssignment_0_2_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AUseEquation__Group_0_2__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AUseEquation__Group_0_2__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AUseEquation__Group_0_2__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAUseEquationAccess().getRightSquareBracketKeyword_0_2_3()); }
	']'
	{ after(grammarAccess.getAUseEquationAccess().getRightSquareBracketKeyword_0_2_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AUseEquation__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AUseEquation__Group_2__0__Impl
	rule__AUseEquation__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AUseEquation__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAUseEquationAccess().getOutputExprsAssignment_2_0()); }
	(rule__AUseEquation__OutputExprsAssignment_2_0)
	{ after(grammarAccess.getAUseEquationAccess().getOutputExprsAssignment_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AUseEquation__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AUseEquation__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AUseEquation__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAUseEquationAccess().getGroup_2_1()); }
	(rule__AUseEquation__Group_2_1__0)*
	{ after(grammarAccess.getAUseEquationAccess().getGroup_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AUseEquation__Group_2_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AUseEquation__Group_2_1__0__Impl
	rule__AUseEquation__Group_2_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AUseEquation__Group_2_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAUseEquationAccess().getCommaKeyword_2_1_0()); }
	','
	{ after(grammarAccess.getAUseEquationAccess().getCommaKeyword_2_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AUseEquation__Group_2_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AUseEquation__Group_2_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AUseEquation__Group_2_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAUseEquationAccess().getOutputExprsAssignment_2_1_1()); }
	(rule__AUseEquation__OutputExprsAssignment_2_1_1)
	{ after(grammarAccess.getAUseEquationAccess().getOutputExprsAssignment_2_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AUseEquation__Group_10__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AUseEquation__Group_10__0__Impl
	rule__AUseEquation__Group_10__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AUseEquation__Group_10__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAUseEquationAccess().getInputExprsAssignment_10_0()); }
	(rule__AUseEquation__InputExprsAssignment_10_0)
	{ after(grammarAccess.getAUseEquationAccess().getInputExprsAssignment_10_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AUseEquation__Group_10__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AUseEquation__Group_10__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AUseEquation__Group_10__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAUseEquationAccess().getGroup_10_1()); }
	(rule__AUseEquation__Group_10_1__0)*
	{ after(grammarAccess.getAUseEquationAccess().getGroup_10_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AUseEquation__Group_10_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AUseEquation__Group_10_1__0__Impl
	rule__AUseEquation__Group_10_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AUseEquation__Group_10_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAUseEquationAccess().getCommaKeyword_10_1_0()); }
	','
	{ after(grammarAccess.getAUseEquationAccess().getCommaKeyword_10_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AUseEquation__Group_10_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AUseEquation__Group_10_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AUseEquation__Group_10_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAUseEquationAccess().getInputExprsAssignment_10_1_1()); }
	(rule__AUseEquation__InputExprsAssignment_10_1_1)
	{ after(grammarAccess.getAUseEquationAccess().getInputExprsAssignment_10_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AParanthesizedAlphabetsExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AParanthesizedAlphabetsExpression__Group__0__Impl
	rule__AParanthesizedAlphabetsExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AParanthesizedAlphabetsExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAParanthesizedAlphabetsExpressionAccess().getLeftParenthesisKeyword_0()); }
	'('
	{ after(grammarAccess.getAParanthesizedAlphabetsExpressionAccess().getLeftParenthesisKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AParanthesizedAlphabetsExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AParanthesizedAlphabetsExpression__Group__1__Impl
	rule__AParanthesizedAlphabetsExpression__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AParanthesizedAlphabetsExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAParanthesizedAlphabetsExpressionAccess().getAAlphaExpressionParserRuleCall_1()); }
	ruleAAlphaExpression
	{ after(grammarAccess.getAParanthesizedAlphabetsExpressionAccess().getAAlphaExpressionParserRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AParanthesizedAlphabetsExpression__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AParanthesizedAlphabetsExpression__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AParanthesizedAlphabetsExpression__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAParanthesizedAlphabetsExpressionAccess().getRightParenthesisKeyword_2()); }
	')'
	{ after(grammarAccess.getAParanthesizedAlphabetsExpressionAccess().getRightParenthesisKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AOrExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AOrExpression__Group__0__Impl
	rule__AOrExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AOrExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAOrExpressionAccess().getAAndExpressionParserRuleCall_0()); }
	ruleAAndExpression
	{ after(grammarAccess.getAOrExpressionAccess().getAAndExpressionParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AOrExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AOrExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AOrExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAOrExpressionAccess().getGroup_1()); }
	(rule__AOrExpression__Group_1__0)*
	{ after(grammarAccess.getAOrExpressionAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AOrExpression__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AOrExpression__Group_1__0__Impl
	rule__AOrExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AOrExpression__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAOrExpressionAccess().getAOrExpressionLeftAction_1_0()); }
	()
	{ after(grammarAccess.getAOrExpressionAccess().getAOrExpressionLeftAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AOrExpression__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AOrExpression__Group_1__1__Impl
	rule__AOrExpression__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AOrExpression__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAOrExpressionAccess().getOperatorAssignment_1_1()); }
	(rule__AOrExpression__OperatorAssignment_1_1)
	{ after(grammarAccess.getAOrExpressionAccess().getOperatorAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AOrExpression__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AOrExpression__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AOrExpression__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAOrExpressionAccess().getRightAssignment_1_2()); }
	(rule__AOrExpression__RightAssignment_1_2)
	{ after(grammarAccess.getAOrExpressionAccess().getRightAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AAndExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AAndExpression__Group__0__Impl
	rule__AAndExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AAndExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAAndExpressionAccess().getARelationalExpressionParserRuleCall_0()); }
	ruleARelationalExpression
	{ after(grammarAccess.getAAndExpressionAccess().getARelationalExpressionParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AAndExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AAndExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AAndExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAAndExpressionAccess().getGroup_1()); }
	(rule__AAndExpression__Group_1__0)*
	{ after(grammarAccess.getAAndExpressionAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AAndExpression__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AAndExpression__Group_1__0__Impl
	rule__AAndExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AAndExpression__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAAndExpressionAccess().getAAndExpressionLeftAction_1_0()); }
	()
	{ after(grammarAccess.getAAndExpressionAccess().getAAndExpressionLeftAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AAndExpression__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AAndExpression__Group_1__1__Impl
	rule__AAndExpression__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AAndExpression__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAAndExpressionAccess().getOperatorAssignment_1_1()); }
	(rule__AAndExpression__OperatorAssignment_1_1)
	{ after(grammarAccess.getAAndExpressionAccess().getOperatorAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AAndExpression__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AAndExpression__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AAndExpression__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAAndExpressionAccess().getRightAssignment_1_2()); }
	(rule__AAndExpression__RightAssignment_1_2)
	{ after(grammarAccess.getAAndExpressionAccess().getRightAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ARelationalExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ARelationalExpression__Group__0__Impl
	rule__ARelationalExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ARelationalExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getARelationalExpressionAccess().getAAdditiveExpressionParserRuleCall_0()); }
	ruleAAdditiveExpression
	{ after(grammarAccess.getARelationalExpressionAccess().getAAdditiveExpressionParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ARelationalExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ARelationalExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ARelationalExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getARelationalExpressionAccess().getGroup_1()); }
	(rule__ARelationalExpression__Group_1__0)*
	{ after(grammarAccess.getARelationalExpressionAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ARelationalExpression__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ARelationalExpression__Group_1__0__Impl
	rule__ARelationalExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ARelationalExpression__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getARelationalExpressionAccess().getARelationalExpressionLeftAction_1_0()); }
	()
	{ after(grammarAccess.getARelationalExpressionAccess().getARelationalExpressionLeftAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ARelationalExpression__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ARelationalExpression__Group_1__1__Impl
	rule__ARelationalExpression__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ARelationalExpression__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getARelationalExpressionAccess().getOperatorAssignment_1_1()); }
	(rule__ARelationalExpression__OperatorAssignment_1_1)
	{ after(grammarAccess.getARelationalExpressionAccess().getOperatorAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ARelationalExpression__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ARelationalExpression__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ARelationalExpression__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getARelationalExpressionAccess().getRightAssignment_1_2()); }
	(rule__ARelationalExpression__RightAssignment_1_2)
	{ after(grammarAccess.getARelationalExpressionAccess().getRightAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AAdditiveExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AAdditiveExpression__Group__0__Impl
	rule__AAdditiveExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AAdditiveExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAAdditiveExpressionAccess().getAMultiplicativeExpressionParserRuleCall_0()); }
	ruleAMultiplicativeExpression
	{ after(grammarAccess.getAAdditiveExpressionAccess().getAMultiplicativeExpressionParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AAdditiveExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AAdditiveExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AAdditiveExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAAdditiveExpressionAccess().getGroup_1()); }
	(rule__AAdditiveExpression__Group_1__0)*
	{ after(grammarAccess.getAAdditiveExpressionAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AAdditiveExpression__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AAdditiveExpression__Group_1__0__Impl
	rule__AAdditiveExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AAdditiveExpression__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAAdditiveExpressionAccess().getAAdditiveExpressionLeftAction_1_0()); }
	()
	{ after(grammarAccess.getAAdditiveExpressionAccess().getAAdditiveExpressionLeftAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AAdditiveExpression__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AAdditiveExpression__Group_1__1__Impl
	rule__AAdditiveExpression__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AAdditiveExpression__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAAdditiveExpressionAccess().getOpAssignment_1_1()); }
	(rule__AAdditiveExpression__OpAssignment_1_1)
	{ after(grammarAccess.getAAdditiveExpressionAccess().getOpAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AAdditiveExpression__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AAdditiveExpression__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AAdditiveExpression__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAAdditiveExpressionAccess().getRightAssignment_1_2()); }
	(rule__AAdditiveExpression__RightAssignment_1_2)
	{ after(grammarAccess.getAAdditiveExpressionAccess().getRightAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AMultiplicativeExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AMultiplicativeExpression__Group__0__Impl
	rule__AMultiplicativeExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AMultiplicativeExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAMultiplicativeExpressionAccess().getAMinMaxExpressionParserRuleCall_0()); }
	ruleAMinMaxExpression
	{ after(grammarAccess.getAMultiplicativeExpressionAccess().getAMinMaxExpressionParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AMultiplicativeExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AMultiplicativeExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AMultiplicativeExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAMultiplicativeExpressionAccess().getGroup_1()); }
	(rule__AMultiplicativeExpression__Group_1__0)*
	{ after(grammarAccess.getAMultiplicativeExpressionAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AMultiplicativeExpression__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AMultiplicativeExpression__Group_1__0__Impl
	rule__AMultiplicativeExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AMultiplicativeExpression__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAMultiplicativeExpressionAccess().getAMultiplicativeExpressionLeftAction_1_0()); }
	()
	{ after(grammarAccess.getAMultiplicativeExpressionAccess().getAMultiplicativeExpressionLeftAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AMultiplicativeExpression__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AMultiplicativeExpression__Group_1__1__Impl
	rule__AMultiplicativeExpression__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AMultiplicativeExpression__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAMultiplicativeExpressionAccess().getOpAssignment_1_1()); }
	(rule__AMultiplicativeExpression__OpAssignment_1_1)
	{ after(grammarAccess.getAMultiplicativeExpressionAccess().getOpAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AMultiplicativeExpression__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AMultiplicativeExpression__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AMultiplicativeExpression__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAMultiplicativeExpressionAccess().getRightAssignment_1_2()); }
	(rule__AMultiplicativeExpression__RightAssignment_1_2)
	{ after(grammarAccess.getAMultiplicativeExpressionAccess().getRightAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AMinMaxExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AMinMaxExpression__Group__0__Impl
	rule__AMinMaxExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AMinMaxExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAMinMaxExpressionAccess().getAUnaryOrTerminalExpressionParserRuleCall_0()); }
	ruleAUnaryOrTerminalExpression
	{ after(grammarAccess.getAMinMaxExpressionAccess().getAUnaryOrTerminalExpressionParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AMinMaxExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AMinMaxExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AMinMaxExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAMinMaxExpressionAccess().getGroup_1()); }
	(rule__AMinMaxExpression__Group_1__0)*
	{ after(grammarAccess.getAMinMaxExpressionAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AMinMaxExpression__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AMinMaxExpression__Group_1__0__Impl
	rule__AMinMaxExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AMinMaxExpression__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAMinMaxExpressionAccess().getAMinMaxExpressionLeftAction_1_0()); }
	()
	{ after(grammarAccess.getAMinMaxExpressionAccess().getAMinMaxExpressionLeftAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AMinMaxExpression__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AMinMaxExpression__Group_1__1__Impl
	rule__AMinMaxExpression__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AMinMaxExpression__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAMinMaxExpressionAccess().getOpAssignment_1_1()); }
	(rule__AMinMaxExpression__OpAssignment_1_1)
	{ after(grammarAccess.getAMinMaxExpressionAccess().getOpAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AMinMaxExpression__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AMinMaxExpression__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AMinMaxExpression__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAMinMaxExpressionAccess().getRightAssignment_1_2()); }
	(rule__AMinMaxExpression__RightAssignment_1_2)
	{ after(grammarAccess.getAMinMaxExpressionAccess().getRightAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ANotExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ANotExpression__Group__0__Impl
	rule__ANotExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ANotExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getANotExpressionAccess().getOpAssignment_0()); }
	(rule__ANotExpression__OpAssignment_0)
	{ after(grammarAccess.getANotExpressionAccess().getOpAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ANotExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ANotExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ANotExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getANotExpressionAccess().getExprAssignment_1()); }
	(rule__ANotExpression__ExprAssignment_1)
	{ after(grammarAccess.getANotExpressionAccess().getExprAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ANegateExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ANegateExpression__Group__0__Impl
	rule__ANegateExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ANegateExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getANegateExpressionAccess().getOpAssignment_0()); }
	(rule__ANegateExpression__OpAssignment_0)
	{ after(grammarAccess.getANegateExpressionAccess().getOpAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ANegateExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ANegateExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ANegateExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getANegateExpressionAccess().getExprAssignment_1()); }
	(rule__ANegateExpression__ExprAssignment_1)
	{ after(grammarAccess.getANegateExpressionAccess().getExprAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ACaseExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ACaseExpression__Group__0__Impl
	rule__ACaseExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ACaseExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getACaseExpressionAccess().getCaseKeyword_0()); }
	'case'
	{ after(grammarAccess.getACaseExpressionAccess().getCaseKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ACaseExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ACaseExpression__Group__1__Impl
	rule__ACaseExpression__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ACaseExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getACaseExpressionAccess().getNameAssignment_1()); }
	(rule__ACaseExpression__NameAssignment_1)?
	{ after(grammarAccess.getACaseExpressionAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ACaseExpression__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ACaseExpression__Group__2__Impl
	rule__ACaseExpression__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ACaseExpression__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getACaseExpressionAccess().getLeftCurlyBracketKeyword_2()); }
	'{'
	{ after(grammarAccess.getACaseExpressionAccess().getLeftCurlyBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ACaseExpression__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ACaseExpression__Group__3__Impl
	rule__ACaseExpression__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ACaseExpression__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getACaseExpressionAccess().getGroup_3()); }
		(rule__ACaseExpression__Group_3__0)
		{ after(grammarAccess.getACaseExpressionAccess().getGroup_3()); }
	)
	(
		{ before(grammarAccess.getACaseExpressionAccess().getGroup_3()); }
		(rule__ACaseExpression__Group_3__0)*
		{ after(grammarAccess.getACaseExpressionAccess().getGroup_3()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ACaseExpression__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ACaseExpression__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ACaseExpression__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getACaseExpressionAccess().getRightCurlyBracketKeyword_4()); }
	'}'
	{ after(grammarAccess.getACaseExpressionAccess().getRightCurlyBracketKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ACaseExpression__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ACaseExpression__Group_3__0__Impl
	rule__ACaseExpression__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ACaseExpression__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getACaseExpressionAccess().getExprsAssignment_3_0()); }
	(rule__ACaseExpression__ExprsAssignment_3_0)
	{ after(grammarAccess.getACaseExpressionAccess().getExprsAssignment_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ACaseExpression__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ACaseExpression__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ACaseExpression__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getACaseExpressionAccess().getSemicolonKeyword_3_1()); }
	';'
	{ after(grammarAccess.getACaseExpressionAccess().getSemicolonKeyword_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ADependenceExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ADependenceExpression__Group__0__Impl
	rule__ADependenceExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ADependenceExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getADependenceExpressionAccess().getFunctionAssignment_0()); }
	(rule__ADependenceExpression__FunctionAssignment_0)
	{ after(grammarAccess.getADependenceExpressionAccess().getFunctionAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ADependenceExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ADependenceExpression__Group__1__Impl
	rule__ADependenceExpression__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ADependenceExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getADependenceExpressionAccess().getCommercialAtKeyword_1()); }
	'@'
	{ after(grammarAccess.getADependenceExpressionAccess().getCommercialAtKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ADependenceExpression__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ADependenceExpression__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ADependenceExpression__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getADependenceExpressionAccess().getExprAssignment_2()); }
	(rule__ADependenceExpression__ExprAssignment_2)
	{ after(grammarAccess.getADependenceExpressionAccess().getExprAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ASelectDependenceExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ASelectDependenceExpression__Group__0__Impl
	rule__ASelectDependenceExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ASelectDependenceExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getASelectDependenceExpressionAccess().getSelectKeyword_0()); }
	'select'
	{ after(grammarAccess.getASelectDependenceExpressionAccess().getSelectKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ASelectDependenceExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ASelectDependenceExpression__Group__1__Impl
	rule__ASelectDependenceExpression__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ASelectDependenceExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getASelectDependenceExpressionAccess().getRelationAssignment_1()); }
	(rule__ASelectDependenceExpression__RelationAssignment_1)
	{ after(grammarAccess.getASelectDependenceExpressionAccess().getRelationAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ASelectDependenceExpression__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ASelectDependenceExpression__Group__2__Impl
	rule__ASelectDependenceExpression__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ASelectDependenceExpression__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getASelectDependenceExpressionAccess().getFromKeyword_2()); }
	'from'
	{ after(grammarAccess.getASelectDependenceExpressionAccess().getFromKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ASelectDependenceExpression__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ASelectDependenceExpression__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ASelectDependenceExpression__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getASelectDependenceExpressionAccess().getExprAssignment_3()); }
	(rule__ASelectDependenceExpression__ExprAssignment_3)
	{ after(grammarAccess.getASelectDependenceExpressionAccess().getExprAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ADependenceInArrayNotation__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ADependenceInArrayNotation__Group__0__Impl
	rule__ADependenceInArrayNotation__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ADependenceInArrayNotation__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getADependenceInArrayNotationAccess().getVarAssignment_0()); }
	(rule__ADependenceInArrayNotation__VarAssignment_0)
	{ after(grammarAccess.getADependenceInArrayNotationAccess().getVarAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ADependenceInArrayNotation__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ADependenceInArrayNotation__Group__1__Impl
	rule__ADependenceInArrayNotation__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ADependenceInArrayNotation__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getADependenceInArrayNotationAccess().getLeftSquareBracketKeyword_1()); }
	'['
	{ after(grammarAccess.getADependenceInArrayNotationAccess().getLeftSquareBracketKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ADependenceInArrayNotation__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ADependenceInArrayNotation__Group__2__Impl
	rule__ADependenceInArrayNotation__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ADependenceInArrayNotation__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getADependenceInArrayNotationAccess().getDepAssignment_2()); }
	(rule__ADependenceInArrayNotation__DepAssignment_2)
	{ after(grammarAccess.getADependenceInArrayNotationAccess().getDepAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ADependenceInArrayNotation__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ADependenceInArrayNotation__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ADependenceInArrayNotation__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getADependenceInArrayNotationAccess().getRightSquareBracketKeyword_3()); }
	']'
	{ after(grammarAccess.getADependenceInArrayNotationAccess().getRightSquareBracketKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AIfExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AIfExpression__Group__0__Impl
	rule__AIfExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AIfExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAIfExpressionAccess().getIfKeyword_0()); }
	'if'
	{ after(grammarAccess.getAIfExpressionAccess().getIfKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AIfExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AIfExpression__Group__1__Impl
	rule__AIfExpression__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AIfExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAIfExpressionAccess().getCondAssignment_1()); }
	(rule__AIfExpression__CondAssignment_1)
	{ after(grammarAccess.getAIfExpressionAccess().getCondAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AIfExpression__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AIfExpression__Group__2__Impl
	rule__AIfExpression__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__AIfExpression__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAIfExpressionAccess().getThenKeyword_2()); }
	'then'
	{ after(grammarAccess.getAIfExpressionAccess().getThenKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AIfExpression__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AIfExpression__Group__3__Impl
	rule__AIfExpression__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__AIfExpression__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAIfExpressionAccess().getThenAssignment_3()); }
	(rule__AIfExpression__ThenAssignment_3)
	{ after(grammarAccess.getAIfExpressionAccess().getThenAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AIfExpression__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AIfExpression__Group__4__Impl
	rule__AIfExpression__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__AIfExpression__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAIfExpressionAccess().getElseKeyword_4()); }
	'else'
	{ after(grammarAccess.getAIfExpressionAccess().getElseKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AIfExpression__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AIfExpression__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AIfExpression__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAIfExpressionAccess().getElseAssignment_5()); }
	(rule__AIfExpression__ElseAssignment_5)
	{ after(grammarAccess.getAIfExpressionAccess().getElseAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AIndexExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AIndexExpression__Group__0__Impl
	rule__AIndexExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AIndexExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAIndexExpressionAccess().getValKeyword_0()); }
	'val('
	{ after(grammarAccess.getAIndexExpressionAccess().getValKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AIndexExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AIndexExpression__Group__1__Impl
	rule__AIndexExpression__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AIndexExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAIndexExpressionAccess().getIndexesAssignment_1()); }
	(rule__AIndexExpression__IndexesAssignment_1)
	{ after(grammarAccess.getAIndexExpressionAccess().getIndexesAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AIndexExpression__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AIndexExpression__Group__2__Impl
	rule__AIndexExpression__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__AIndexExpression__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAIndexExpressionAccess().getHyphenMinusGreaterThanSignKeyword_2()); }
	'->'
	{ after(grammarAccess.getAIndexExpressionAccess().getHyphenMinusGreaterThanSignKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AIndexExpression__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AIndexExpression__Group__3__Impl
	rule__AIndexExpression__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__AIndexExpression__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAIndexExpressionAccess().getFuncAssignment_3()); }
	(rule__AIndexExpression__FuncAssignment_3)
	{ after(grammarAccess.getAIndexExpressionAccess().getFuncAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AIndexExpression__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AIndexExpression__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AIndexExpression__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAIndexExpressionAccess().getRightParenthesisKeyword_4()); }
	')'
	{ after(grammarAccess.getAIndexExpressionAccess().getRightParenthesisKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AIndexExpressionInArrayNotation__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AIndexExpressionInArrayNotation__Group__0__Impl
	rule__AIndexExpressionInArrayNotation__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AIndexExpressionInArrayNotation__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAIndexExpressionInArrayNotationAccess().getLeftSquareBracketKeyword_0()); }
	'['
	{ after(grammarAccess.getAIndexExpressionInArrayNotationAccess().getLeftSquareBracketKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AIndexExpressionInArrayNotation__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AIndexExpressionInArrayNotation__Group__1__Impl
	rule__AIndexExpressionInArrayNotation__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AIndexExpressionInArrayNotation__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAIndexExpressionInArrayNotationAccess().getFuncAssignment_1()); }
	(rule__AIndexExpressionInArrayNotation__FuncAssignment_1)
	{ after(grammarAccess.getAIndexExpressionInArrayNotationAccess().getFuncAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AIndexExpressionInArrayNotation__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AIndexExpressionInArrayNotation__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AIndexExpressionInArrayNotation__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAIndexExpressionInArrayNotationAccess().getRightSquareBracketKeyword_2()); }
	']'
	{ after(grammarAccess.getAIndexExpressionInArrayNotationAccess().getRightSquareBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AReduceExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AReduceExpression__Group__0__Impl
	rule__AReduceExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AReduceExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAReduceExpressionAccess().getReduceKeyword_0()); }
	'reduce'
	{ after(grammarAccess.getAReduceExpressionAccess().getReduceKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AReduceExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AReduceExpression__Group__1__Impl
	rule__AReduceExpression__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AReduceExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAReduceExpressionAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getAReduceExpressionAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AReduceExpression__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AReduceExpression__Group__2__Impl
	rule__AReduceExpression__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__AReduceExpression__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAReduceExpressionAccess().getOpAssignment_2()); }
	(rule__AReduceExpression__OpAssignment_2)
	{ after(grammarAccess.getAReduceExpressionAccess().getOpAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AReduceExpression__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AReduceExpression__Group__3__Impl
	rule__AReduceExpression__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__AReduceExpression__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAReduceExpressionAccess().getCommaKeyword_3()); }
	','
	{ after(grammarAccess.getAReduceExpressionAccess().getCommaKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AReduceExpression__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AReduceExpression__Group__4__Impl
	rule__AReduceExpression__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__AReduceExpression__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAReduceExpressionAccess().getProjectionAssignment_4()); }
	(rule__AReduceExpression__ProjectionAssignment_4)
	{ after(grammarAccess.getAReduceExpressionAccess().getProjectionAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AReduceExpression__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AReduceExpression__Group__5__Impl
	rule__AReduceExpression__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__AReduceExpression__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAReduceExpressionAccess().getCommaKeyword_5()); }
	','
	{ after(grammarAccess.getAReduceExpressionAccess().getCommaKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AReduceExpression__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AReduceExpression__Group__6__Impl
	rule__AReduceExpression__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__AReduceExpression__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAReduceExpressionAccess().getExprAssignment_6()); }
	(rule__AReduceExpression__ExprAssignment_6)
	{ after(grammarAccess.getAReduceExpressionAccess().getExprAssignment_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AReduceExpression__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AReduceExpression__Group__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AReduceExpression__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAReduceExpressionAccess().getRightParenthesisKeyword_7()); }
	')'
	{ after(grammarAccess.getAReduceExpressionAccess().getRightParenthesisKeyword_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AArgReduceExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AArgReduceExpression__Group__0__Impl
	rule__AArgReduceExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AArgReduceExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAArgReduceExpressionAccess().getArgreduceKeyword_0()); }
	'argreduce'
	{ after(grammarAccess.getAArgReduceExpressionAccess().getArgreduceKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AArgReduceExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AArgReduceExpression__Group__1__Impl
	rule__AArgReduceExpression__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AArgReduceExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAArgReduceExpressionAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getAArgReduceExpressionAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AArgReduceExpression__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AArgReduceExpression__Group__2__Impl
	rule__AArgReduceExpression__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__AArgReduceExpression__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAArgReduceExpressionAccess().getOpAssignment_2()); }
	(rule__AArgReduceExpression__OpAssignment_2)
	{ after(grammarAccess.getAArgReduceExpressionAccess().getOpAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AArgReduceExpression__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AArgReduceExpression__Group__3__Impl
	rule__AArgReduceExpression__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__AArgReduceExpression__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAArgReduceExpressionAccess().getCommaKeyword_3()); }
	','
	{ after(grammarAccess.getAArgReduceExpressionAccess().getCommaKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AArgReduceExpression__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AArgReduceExpression__Group__4__Impl
	rule__AArgReduceExpression__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__AArgReduceExpression__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAArgReduceExpressionAccess().getProjectionAssignment_4()); }
	(rule__AArgReduceExpression__ProjectionAssignment_4)
	{ after(grammarAccess.getAArgReduceExpressionAccess().getProjectionAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AArgReduceExpression__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AArgReduceExpression__Group__5__Impl
	rule__AArgReduceExpression__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__AArgReduceExpression__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAArgReduceExpressionAccess().getCommaKeyword_5()); }
	','
	{ after(grammarAccess.getAArgReduceExpressionAccess().getCommaKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AArgReduceExpression__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AArgReduceExpression__Group__6__Impl
	rule__AArgReduceExpression__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__AArgReduceExpression__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAArgReduceExpressionAccess().getExprAssignment_6()); }
	(rule__AArgReduceExpression__ExprAssignment_6)
	{ after(grammarAccess.getAArgReduceExpressionAccess().getExprAssignment_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AArgReduceExpression__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AArgReduceExpression__Group__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AArgReduceExpression__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAArgReduceExpressionAccess().getRightParenthesisKeyword_7()); }
	')'
	{ after(grammarAccess.getAArgReduceExpressionAccess().getRightParenthesisKeyword_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AConvExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AConvExpression__Group__0__Impl
	rule__AConvExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AConvExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAConvExpressionAccess().getConvKeyword_0()); }
	'conv'
	{ after(grammarAccess.getAConvExpressionAccess().getConvKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AConvExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AConvExpression__Group__1__Impl
	rule__AConvExpression__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AConvExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAConvExpressionAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getAConvExpressionAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AConvExpression__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AConvExpression__Group__2__Impl
	rule__AConvExpression__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__AConvExpression__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAConvExpressionAccess().getDomainAssignment_2()); }
	(rule__AConvExpression__DomainAssignment_2)
	{ after(grammarAccess.getAConvExpressionAccess().getDomainAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AConvExpression__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AConvExpression__Group__3__Impl
	rule__AConvExpression__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__AConvExpression__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAConvExpressionAccess().getCommaKeyword_3()); }
	','
	{ after(grammarAccess.getAConvExpressionAccess().getCommaKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AConvExpression__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AConvExpression__Group__4__Impl
	rule__AConvExpression__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__AConvExpression__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAConvExpressionAccess().getKernelAssignment_4()); }
	(rule__AConvExpression__KernelAssignment_4)
	{ after(grammarAccess.getAConvExpressionAccess().getKernelAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AConvExpression__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AConvExpression__Group__5__Impl
	rule__AConvExpression__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__AConvExpression__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAConvExpressionAccess().getCommaKeyword_5()); }
	','
	{ after(grammarAccess.getAConvExpressionAccess().getCommaKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AConvExpression__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AConvExpression__Group__6__Impl
	rule__AConvExpression__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__AConvExpression__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAConvExpressionAccess().getDataAssignment_6()); }
	(rule__AConvExpression__DataAssignment_6)
	{ after(grammarAccess.getAConvExpressionAccess().getDataAssignment_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AConvExpression__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AConvExpression__Group__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AConvExpression__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAConvExpressionAccess().getRightParenthesisKeyword_7()); }
	')'
	{ after(grammarAccess.getAConvExpressionAccess().getRightParenthesisKeyword_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ARestrictExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ARestrictExpression__Group__0__Impl
	rule__ARestrictExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ARestrictExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getARestrictExpressionAccess().getDomainAssignment_0()); }
	(rule__ARestrictExpression__DomainAssignment_0)
	{ after(grammarAccess.getARestrictExpressionAccess().getDomainAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ARestrictExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ARestrictExpression__Group__1__Impl
	rule__ARestrictExpression__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ARestrictExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getARestrictExpressionAccess().getColonKeyword_1()); }
	':'
	{ after(grammarAccess.getARestrictExpressionAccess().getColonKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ARestrictExpression__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ARestrictExpression__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ARestrictExpression__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getARestrictExpressionAccess().getExprAssignment_2()); }
	(rule__ARestrictExpression__ExprAssignment_2)
	{ after(grammarAccess.getARestrictExpressionAccess().getExprAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__APolyObjectInRestrict__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__APolyObjectInRestrict__Group_4__0__Impl
	rule__APolyObjectInRestrict__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__APolyObjectInRestrict__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAPolyObjectInRestrictAccess().getLeftCurlyBracketKeyword_4_0()); }
	'{'
	{ after(grammarAccess.getAPolyObjectInRestrictAccess().getLeftCurlyBracketKeyword_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__APolyObjectInRestrict__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__APolyObjectInRestrict__Group_4__1__Impl
	rule__APolyObjectInRestrict__Group_4__2
;
finally {
	restoreStackSize(stackSize);
}

rule__APolyObjectInRestrict__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAPolyObjectInRestrictAccess().getAPolyhedralObjectExpressionParserRuleCall_4_1()); }
	ruleAPolyhedralObjectExpression
	{ after(grammarAccess.getAPolyObjectInRestrictAccess().getAPolyhedralObjectExpressionParserRuleCall_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__APolyObjectInRestrict__Group_4__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__APolyObjectInRestrict__Group_4__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__APolyObjectInRestrict__Group_4__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAPolyObjectInRestrictAccess().getRightCurlyBracketKeyword_4_2()); }
	'}'
	{ after(grammarAccess.getAPolyObjectInRestrictAccess().getRightCurlyBracketKeyword_4_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AAutoRestrictExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AAutoRestrictExpression__Group__0__Impl
	rule__AAutoRestrictExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AAutoRestrictExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAAutoRestrictExpressionAccess().getAutoKeyword_0()); }
	'auto'
	{ after(grammarAccess.getAAutoRestrictExpressionAccess().getAutoKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AAutoRestrictExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AAutoRestrictExpression__Group__1__Impl
	rule__AAutoRestrictExpression__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AAutoRestrictExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAAutoRestrictExpressionAccess().getColonKeyword_1()); }
	':'
	{ after(grammarAccess.getAAutoRestrictExpressionAccess().getColonKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AAutoRestrictExpression__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AAutoRestrictExpression__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AAutoRestrictExpression__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAAutoRestrictExpressionAccess().getExprAssignment_2()); }
	(rule__AAutoRestrictExpression__ExprAssignment_2)
	{ after(grammarAccess.getAAutoRestrictExpressionAccess().getExprAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AMultiArgArithmeticExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AMultiArgArithmeticExpression__Group__0__Impl
	rule__AMultiArgArithmeticExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AMultiArgArithmeticExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAMultiArgArithmeticExpressionAccess().getOpAssignment_0()); }
	(rule__AMultiArgArithmeticExpression__OpAssignment_0)
	{ after(grammarAccess.getAMultiArgArithmeticExpressionAccess().getOpAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AMultiArgArithmeticExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AMultiArgArithmeticExpression__Group__1__Impl
	rule__AMultiArgArithmeticExpression__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AMultiArgArithmeticExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAMultiArgArithmeticExpressionAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getAMultiArgArithmeticExpressionAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AMultiArgArithmeticExpression__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AMultiArgArithmeticExpression__Group__2__Impl
	rule__AMultiArgArithmeticExpression__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__AMultiArgArithmeticExpression__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAMultiArgArithmeticExpressionAccess().getExprsAssignment_2()); }
	(rule__AMultiArgArithmeticExpression__ExprsAssignment_2)
	{ after(grammarAccess.getAMultiArgArithmeticExpressionAccess().getExprsAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AMultiArgArithmeticExpression__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AMultiArgArithmeticExpression__Group__3__Impl
	rule__AMultiArgArithmeticExpression__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__AMultiArgArithmeticExpression__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getAMultiArgArithmeticExpressionAccess().getGroup_3()); }
		(rule__AMultiArgArithmeticExpression__Group_3__0)
		{ after(grammarAccess.getAMultiArgArithmeticExpressionAccess().getGroup_3()); }
	)
	(
		{ before(grammarAccess.getAMultiArgArithmeticExpressionAccess().getGroup_3()); }
		(rule__AMultiArgArithmeticExpression__Group_3__0)*
		{ after(grammarAccess.getAMultiArgArithmeticExpressionAccess().getGroup_3()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AMultiArgArithmeticExpression__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AMultiArgArithmeticExpression__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AMultiArgArithmeticExpression__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAMultiArgArithmeticExpressionAccess().getRightParenthesisKeyword_4()); }
	')'
	{ after(grammarAccess.getAMultiArgArithmeticExpressionAccess().getRightParenthesisKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AMultiArgArithmeticExpression__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AMultiArgArithmeticExpression__Group_3__0__Impl
	rule__AMultiArgArithmeticExpression__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AMultiArgArithmeticExpression__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAMultiArgArithmeticExpressionAccess().getCommaKeyword_3_0()); }
	','
	{ after(grammarAccess.getAMultiArgArithmeticExpressionAccess().getCommaKeyword_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AMultiArgArithmeticExpression__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AMultiArgArithmeticExpression__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AMultiArgArithmeticExpression__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAMultiArgArithmeticExpressionAccess().getExprsAssignment_3_1()); }
	(rule__AMultiArgArithmeticExpression__ExprsAssignment_3_1)
	{ after(grammarAccess.getAMultiArgArithmeticExpressionAccess().getExprsAssignment_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AMultiArgLogicalExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AMultiArgLogicalExpression__Group__0__Impl
	rule__AMultiArgLogicalExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AMultiArgLogicalExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAMultiArgLogicalExpressionAccess().getOpAssignment_0()); }
	(rule__AMultiArgLogicalExpression__OpAssignment_0)
	{ after(grammarAccess.getAMultiArgLogicalExpressionAccess().getOpAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AMultiArgLogicalExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AMultiArgLogicalExpression__Group__1__Impl
	rule__AMultiArgLogicalExpression__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AMultiArgLogicalExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAMultiArgLogicalExpressionAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getAMultiArgLogicalExpressionAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AMultiArgLogicalExpression__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AMultiArgLogicalExpression__Group__2__Impl
	rule__AMultiArgLogicalExpression__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__AMultiArgLogicalExpression__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAMultiArgLogicalExpressionAccess().getExprsAssignment_2()); }
	(rule__AMultiArgLogicalExpression__ExprsAssignment_2)
	{ after(grammarAccess.getAMultiArgLogicalExpressionAccess().getExprsAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AMultiArgLogicalExpression__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AMultiArgLogicalExpression__Group__3__Impl
	rule__AMultiArgLogicalExpression__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__AMultiArgLogicalExpression__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getAMultiArgLogicalExpressionAccess().getGroup_3()); }
		(rule__AMultiArgLogicalExpression__Group_3__0)
		{ after(grammarAccess.getAMultiArgLogicalExpressionAccess().getGroup_3()); }
	)
	(
		{ before(grammarAccess.getAMultiArgLogicalExpressionAccess().getGroup_3()); }
		(rule__AMultiArgLogicalExpression__Group_3__0)*
		{ after(grammarAccess.getAMultiArgLogicalExpressionAccess().getGroup_3()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AMultiArgLogicalExpression__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AMultiArgLogicalExpression__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AMultiArgLogicalExpression__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAMultiArgLogicalExpressionAccess().getRightParenthesisKeyword_4()); }
	')'
	{ after(grammarAccess.getAMultiArgLogicalExpressionAccess().getRightParenthesisKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AMultiArgLogicalExpression__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AMultiArgLogicalExpression__Group_3__0__Impl
	rule__AMultiArgLogicalExpression__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AMultiArgLogicalExpression__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAMultiArgLogicalExpressionAccess().getCommaKeyword_3_0()); }
	','
	{ after(grammarAccess.getAMultiArgLogicalExpressionAccess().getCommaKeyword_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AMultiArgLogicalExpression__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AMultiArgLogicalExpression__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AMultiArgLogicalExpression__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAMultiArgLogicalExpressionAccess().getExprsAssignment_3_1()); }
	(rule__AMultiArgLogicalExpression__ExprsAssignment_3_1)
	{ after(grammarAccess.getAMultiArgLogicalExpressionAccess().getExprsAssignment_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AExternalFunctionCall__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AExternalFunctionCall__Group__0__Impl
	rule__AExternalFunctionCall__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AExternalFunctionCall__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAExternalFunctionCallAccess().getFuncAssignment_0()); }
	(rule__AExternalFunctionCall__FuncAssignment_0)
	{ after(grammarAccess.getAExternalFunctionCallAccess().getFuncAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AExternalFunctionCall__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AExternalFunctionCall__Group__1__Impl
	rule__AExternalFunctionCall__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AExternalFunctionCall__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAExternalFunctionCallAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getAExternalFunctionCallAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AExternalFunctionCall__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AExternalFunctionCall__Group__2__Impl
	rule__AExternalFunctionCall__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__AExternalFunctionCall__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAExternalFunctionCallAccess().getGroup_2()); }
	(rule__AExternalFunctionCall__Group_2__0)?
	{ after(grammarAccess.getAExternalFunctionCallAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AExternalFunctionCall__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AExternalFunctionCall__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AExternalFunctionCall__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAExternalFunctionCallAccess().getRightParenthesisKeyword_3()); }
	')'
	{ after(grammarAccess.getAExternalFunctionCallAccess().getRightParenthesisKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AExternalFunctionCall__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AExternalFunctionCall__Group_2__0__Impl
	rule__AExternalFunctionCall__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AExternalFunctionCall__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAExternalFunctionCallAccess().getExprsAssignment_2_0()); }
	(rule__AExternalFunctionCall__ExprsAssignment_2_0)
	{ after(grammarAccess.getAExternalFunctionCallAccess().getExprsAssignment_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AExternalFunctionCall__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AExternalFunctionCall__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AExternalFunctionCall__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAExternalFunctionCallAccess().getGroup_2_1()); }
	(rule__AExternalFunctionCall__Group_2_1__0)*
	{ after(grammarAccess.getAExternalFunctionCallAccess().getGroup_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AExternalFunctionCall__Group_2_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AExternalFunctionCall__Group_2_1__0__Impl
	rule__AExternalFunctionCall__Group_2_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AExternalFunctionCall__Group_2_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAExternalFunctionCallAccess().getCommaKeyword_2_1_0()); }
	','
	{ after(grammarAccess.getAExternalFunctionCallAccess().getCommaKeyword_2_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AExternalFunctionCall__Group_2_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AExternalFunctionCall__Group_2_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AExternalFunctionCall__Group_2_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAExternalFunctionCallAccess().getExprsAssignment_2_1_1()); }
	(rule__AExternalFunctionCall__ExprsAssignment_2_1_1)
	{ after(grammarAccess.getAExternalFunctionCallAccess().getExprsAssignment_2_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__IndexAffineExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IndexAffineExpression__Group__0__Impl
	rule__IndexAffineExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IndexAffineExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIndexAffineExpressionAccess().getIndexAffineExpressionTerminalParserRuleCall_0()); }
	ruleIndexAffineExpressionTerminal
	{ after(grammarAccess.getIndexAffineExpressionAccess().getIndexAffineExpressionTerminalParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IndexAffineExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IndexAffineExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IndexAffineExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIndexAffineExpressionAccess().getGroup_1()); }
	(rule__IndexAffineExpression__Group_1__0)*
	{ after(grammarAccess.getIndexAffineExpressionAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__IndexAffineExpression__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IndexAffineExpression__Group_1__0__Impl
	rule__IndexAffineExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IndexAffineExpression__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIndexAffineExpressionAccess().getAlternatives_1_0()); }
	(rule__IndexAffineExpression__Alternatives_1_0)
	{ after(grammarAccess.getIndexAffineExpressionAccess().getAlternatives_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IndexAffineExpression__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IndexAffineExpression__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IndexAffineExpression__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIndexAffineExpressionAccess().getIndexAffineExpressionTerminalParserRuleCall_1_1()); }
	ruleIndexAffineExpressionTerminal
	{ after(grammarAccess.getIndexAffineExpressionAccess().getIndexAffineExpressionTerminalParserRuleCall_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__IndexAffineExpressionTerminal__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IndexAffineExpressionTerminal__Group__0__Impl
	rule__IndexAffineExpressionTerminal__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IndexAffineExpressionTerminal__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIndexAffineExpressionTerminalAccess().getOP_MINUSTerminalRuleCall_0()); }
	(RULE_OP_MINUS)?
	{ after(grammarAccess.getIndexAffineExpressionTerminalAccess().getOP_MINUSTerminalRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IndexAffineExpressionTerminal__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IndexAffineExpressionTerminal__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IndexAffineExpressionTerminal__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIndexAffineExpressionTerminalAccess().getAlternatives_1()); }
	(rule__IndexAffineExpressionTerminal__Alternatives_1)
	{ after(grammarAccess.getIndexAffineExpressionTerminalAccess().getAlternatives_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__IndexAffineExpressionTerminal__Group_1_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IndexAffineExpressionTerminal__Group_1_1__0__Impl
	rule__IndexAffineExpressionTerminal__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IndexAffineExpressionTerminal__Group_1_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIndexAffineExpressionTerminalAccess().getINTTerminalRuleCall_1_1_0()); }
	(RULE_INT)?
	{ after(grammarAccess.getIndexAffineExpressionTerminalAccess().getINTTerminalRuleCall_1_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IndexAffineExpressionTerminal__Group_1_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IndexAffineExpressionTerminal__Group_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IndexAffineExpressionTerminal__Group_1_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIndexAffineExpressionTerminalAccess().getIndexNameParserRuleCall_1_1_1()); }
	ruleIndexName
	{ after(grammarAccess.getIndexAffineExpressionTerminalAccess().getIndexNameParserRuleCall_1_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AIndexAffineExpressionList__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AIndexAffineExpressionList__Group__0__Impl
	rule__AIndexAffineExpressionList__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AIndexAffineExpressionList__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAIndexAffineExpressionListAccess().getAIndexAffineExpressionListAction_0()); }
	()
	{ after(grammarAccess.getAIndexAffineExpressionListAccess().getAIndexAffineExpressionListAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AIndexAffineExpressionList__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AIndexAffineExpressionList__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AIndexAffineExpressionList__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAIndexAffineExpressionListAccess().getGroup_1()); }
	(rule__AIndexAffineExpressionList__Group_1__0)?
	{ after(grammarAccess.getAIndexAffineExpressionListAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AIndexAffineExpressionList__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AIndexAffineExpressionList__Group_1__0__Impl
	rule__AIndexAffineExpressionList__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AIndexAffineExpressionList__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAIndexAffineExpressionListAccess().getExprsAssignment_1_0()); }
	(rule__AIndexAffineExpressionList__ExprsAssignment_1_0)
	{ after(grammarAccess.getAIndexAffineExpressionListAccess().getExprsAssignment_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AIndexAffineExpressionList__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AIndexAffineExpressionList__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AIndexAffineExpressionList__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAIndexAffineExpressionListAccess().getGroup_1_1()); }
	(rule__AIndexAffineExpressionList__Group_1_1__0)*
	{ after(grammarAccess.getAIndexAffineExpressionListAccess().getGroup_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AIndexAffineExpressionList__Group_1_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AIndexAffineExpressionList__Group_1_1__0__Impl
	rule__AIndexAffineExpressionList__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AIndexAffineExpressionList__Group_1_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAIndexAffineExpressionListAccess().getCommaKeyword_1_1_0()); }
	','
	{ after(grammarAccess.getAIndexAffineExpressionListAccess().getCommaKeyword_1_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AIndexAffineExpressionList__Group_1_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AIndexAffineExpressionList__Group_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AIndexAffineExpressionList__Group_1_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAIndexAffineExpressionListAccess().getExprsAssignment_1_1_1()); }
	(rule__AIndexAffineExpressionList__ExprsAssignment_1_1_1)
	{ after(grammarAccess.getAIndexAffineExpressionListAccess().getExprsAssignment_1_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AFunction__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AFunction__Group__0__Impl
	rule__AFunction__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AFunction__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAFunctionAccess().getLeftParenthesisKeyword_0()); }
	'('
	{ after(grammarAccess.getAFunctionAccess().getLeftParenthesisKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AFunction__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AFunction__Group__1__Impl
	rule__AFunction__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AFunction__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAFunctionAccess().getIndexesAssignment_1()); }
	(rule__AFunction__IndexesAssignment_1)
	{ after(grammarAccess.getAFunctionAccess().getIndexesAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AFunction__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AFunction__Group__2__Impl
	rule__AFunction__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__AFunction__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAFunctionAccess().getHyphenMinusGreaterThanSignKeyword_2()); }
	'->'
	{ after(grammarAccess.getAFunctionAccess().getHyphenMinusGreaterThanSignKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AFunction__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AFunction__Group__3__Impl
	rule__AFunction__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__AFunction__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAFunctionAccess().getFuncAssignment_3()); }
	(rule__AFunction__FuncAssignment_3)
	{ after(grammarAccess.getAFunctionAccess().getFuncAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AFunction__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AFunction__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AFunction__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAFunctionAccess().getRightParenthesisKeyword_4()); }
	')'
	{ after(grammarAccess.getAFunctionAccess().getRightParenthesisKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AFunctionInArrayNotation__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AFunctionInArrayNotation__Group__0__Impl
	rule__AFunctionInArrayNotation__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AFunctionInArrayNotation__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAFunctionInArrayNotationAccess().getLeftSquareBracketKeyword_0()); }
	'['
	{ after(grammarAccess.getAFunctionInArrayNotationAccess().getLeftSquareBracketKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AFunctionInArrayNotation__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AFunctionInArrayNotation__Group__1__Impl
	rule__AFunctionInArrayNotation__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AFunctionInArrayNotation__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAFunctionInArrayNotationAccess().getNewIdsAssignment_1()); }
	(rule__AFunctionInArrayNotation__NewIdsAssignment_1)
	{ after(grammarAccess.getAFunctionInArrayNotationAccess().getNewIdsAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AFunctionInArrayNotation__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AFunctionInArrayNotation__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AFunctionInArrayNotation__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAFunctionInArrayNotationAccess().getRightSquareBracketKeyword_2()); }
	']'
	{ after(grammarAccess.getAFunctionInArrayNotationAccess().getRightSquareBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AStart__ElementsAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAStartAccess().getElementsAbstractElementParserRuleCall_0()); }
		ruleAbstractElement
		{ after(grammarAccess.getAStartAccess().getElementsAbstractElementParserRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__APackageDeclaration__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAPackageDeclarationAccess().getNameQualifiedNameParserRuleCall_1_0()); }
		ruleQualifiedName
		{ after(grammarAccess.getAPackageDeclarationAccess().getNameQualifiedNameParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__APackageDeclaration__ElementsAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAPackageDeclarationAccess().getElementsAbstractElementParserRuleCall_3_0()); }
		ruleAbstractElement
		{ after(grammarAccess.getAPackageDeclarationAccess().getElementsAbstractElementParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AImport__ImportedNamespaceAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAImportAccess().getImportedNamespaceQualifiedNameWithWildcardParserRuleCall_1_0()); }
		ruleQualifiedNameWithWildcard
		{ after(grammarAccess.getAImportAccess().getImportedNamespaceQualifiedNameWithWildcardParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AExternalFunction__NameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAExternalFunctionAccess().getNameIDTerminalRuleCall_0_0()); }
		RULE_ID
		{ after(grammarAccess.getAExternalFunctionAccess().getNameIDTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AExternalFunction__InputCardinarityAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAExternalFunctionAccess().getInputCardinarityINTTerminalRuleCall_2_0()); }
		RULE_INT
		{ after(grammarAccess.getAExternalFunctionAccess().getInputCardinarityINTTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AConstant__NameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAConstantAccess().getNameIDTerminalRuleCall_0_0()); }
		RULE_ID
		{ after(grammarAccess.getAConstantAccess().getNameIDTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AConstant__ValueAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAConstantAccess().getValueINTTerminalRuleCall_2_0()); }
		RULE_INT
		{ after(grammarAccess.getAConstantAccess().getValueINTTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AAffineSystem__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAAffineSystemAccess().getNameSystemNameParserRuleCall_1_0()); }
		ruleSystemName
		{ after(grammarAccess.getAAffineSystemAccess().getNameSystemNameParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AAffineSystem__ParametersAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAAffineSystemAccess().getParametersAParamDomainParserRuleCall_2_0()); }
		ruleAParamDomain
		{ after(grammarAccess.getAAffineSystemAccess().getParametersAParamDomainParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AAffineSystem__PolyObjectsAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAAffineSystemAccess().getPolyObjectsPolyhedralObjectParserRuleCall_3_1_0()); }
		rulePolyhedralObject
		{ after(grammarAccess.getAAffineSystemAccess().getPolyObjectsPolyhedralObjectParserRuleCall_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AAffineSystem__InputDeclarationsAssignment_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAAffineSystemAccess().getInputDeclarationsAVariableDeclarationParserRuleCall_4_1_0()); }
		ruleAVariableDeclaration
		{ after(grammarAccess.getAAffineSystemAccess().getInputDeclarationsAVariableDeclarationParserRuleCall_4_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AAffineSystem__OutputDeclarationsAssignment_5_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAAffineSystemAccess().getOutputDeclarationsAVariableDeclarationParserRuleCall_5_1_0()); }
		ruleAVariableDeclaration
		{ after(grammarAccess.getAAffineSystemAccess().getOutputDeclarationsAVariableDeclarationParserRuleCall_5_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AAffineSystem__LocalvarDeclarationsAssignment_6_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAAffineSystemAccess().getLocalvarDeclarationsAVariableDeclarationParserRuleCall_6_1_0()); }
		ruleAVariableDeclaration
		{ after(grammarAccess.getAAffineSystemAccess().getLocalvarDeclarationsAVariableDeclarationParserRuleCall_6_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AAffineSystem__FuzzyVariablesAssignment_7_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAAffineSystemAccess().getFuzzyVariablesAFuzzyVariableDeclarationParserRuleCall_7_1_0()); }
		ruleAFuzzyVariableDeclaration
		{ after(grammarAccess.getAAffineSystemAccess().getFuzzyVariablesAFuzzyVariableDeclarationParserRuleCall_7_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AAffineSystem__WhileDomainAssignment_8_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAAffineSystemAccess().getWhileDomainAPolyhedralObjectExpressionParserRuleCall_8_1_0()); }
		ruleAPolyhedralObjectExpression
		{ after(grammarAccess.getAAffineSystemAccess().getWhileDomainAPolyhedralObjectExpressionParserRuleCall_8_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AAffineSystem__WhileAssignment_8_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAAffineSystemAccess().getWhileWhileKeyword_8_2_0()); }
		(
			{ before(grammarAccess.getAAffineSystemAccess().getWhileWhileKeyword_8_2_0()); }
			'while'
			{ after(grammarAccess.getAAffineSystemAccess().getWhileWhileKeyword_8_2_0()); }
		)
		{ after(grammarAccess.getAAffineSystemAccess().getWhileWhileKeyword_8_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AAffineSystem__TestExpressionAssignment_8_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAAffineSystemAccess().getTestExpressionAAlphaExpressionParserRuleCall_8_4_0()); }
		ruleAAlphaExpression
		{ after(grammarAccess.getAAffineSystemAccess().getTestExpressionAAlphaExpressionParserRuleCall_8_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AAffineSystem__UseEquationsAssignment_9_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAAffineSystemAccess().getUseEquationsAUseEquationParserRuleCall_9_1_0()); }
		ruleAUseEquation
		{ after(grammarAccess.getAAffineSystemAccess().getUseEquationsAUseEquationParserRuleCall_9_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AAffineSystem__EquationsAssignment_9_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAAffineSystemAccess().getEquationsAEquationParserRuleCall_9_2_0()); }
		ruleAEquation
		{ after(grammarAccess.getAAffineSystemAccess().getEquationsAEquationParserRuleCall_9_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AVariableDeclaration__VarListAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAVariableDeclarationAccess().getVarListAVariableListParserRuleCall_0_0()); }
		ruleAVariableList
		{ after(grammarAccess.getAVariableDeclarationAccess().getVarListAVariableListParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AVariableDeclaration__DomainAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAVariableDeclarationAccess().getDomainAPolyhedralObjectExpressionParserRuleCall_1_1_0()); }
		ruleAPolyhedralObjectExpression
		{ after(grammarAccess.getAVariableDeclarationAccess().getDomainAPolyhedralObjectExpressionParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AVariableList__VarsAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAVariableListAccess().getVarsAVariableParserRuleCall_0_0()); }
		ruleAVariable
		{ after(grammarAccess.getAVariableListAccess().getVarsAVariableParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AVariableList__VarsAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAVariableListAccess().getVarsAVariableParserRuleCall_1_1_0()); }
		ruleAVariable
		{ after(grammarAccess.getAVariableListAccess().getVarsAVariableParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AVariable__NameAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAVariableAccess().getNameIDTerminalRuleCall_0()); }
		RULE_ID
		{ after(grammarAccess.getAVariableAccess().getNameIDTerminalRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AFuzzyVariableDeclaration__VarListAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAFuzzyVariableDeclarationAccess().getVarListAVariableListParserRuleCall_0_0()); }
		ruleAVariableList
		{ after(grammarAccess.getAFuzzyVariableDeclarationAccess().getVarListAVariableListParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AFuzzyVariableDeclaration__RelationAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAFuzzyVariableDeclarationAccess().getRelationAPolyhedralObjectExpressionParserRuleCall_2_0()); }
		ruleAPolyhedralObjectExpression
		{ after(grammarAccess.getAFuzzyVariableDeclarationAccess().getRelationAPolyhedralObjectExpressionParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PolyhedralObject__NameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPolyhedralObjectAccess().getNameIDTerminalRuleCall_0_0()); }
		RULE_ID
		{ after(grammarAccess.getPolyhedralObjectAccess().getNameIDTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PolyhedralObject__ObjectAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPolyhedralObjectAccess().getObjectAPolyhedralObjectExpressionParserRuleCall_2_0()); }
		ruleAPolyhedralObjectExpression
		{ after(grammarAccess.getPolyhedralObjectAccess().getObjectAPolyhedralObjectExpressionParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__APolyhedralObjectExpression__OperatorAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAPolyhedralObjectExpressionAccess().getOperatorAlternatives_1_1_0()); }
		(rule__APolyhedralObjectExpression__OperatorAlternatives_1_1_0)
		{ after(grammarAccess.getAPolyhedralObjectExpressionAccess().getOperatorAlternatives_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__APolyhedralObjectExpression__RightAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAPolyhedralObjectExpressionAccess().getRightAUnaryOrTerminalPolyObjExpressionParserRuleCall_1_2_0()); }
		ruleAUnaryOrTerminalPolyObjExpression
		{ after(grammarAccess.getAPolyhedralObjectExpressionAccess().getRightAUnaryOrTerminalPolyObjExpressionParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AUnaryPolyObjExpression__OpAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAUnaryPolyObjExpressionAccess().getOpAlternatives_0_0()); }
		(rule__AUnaryPolyObjExpression__OpAlternatives_0_0)
		{ after(grammarAccess.getAUnaryPolyObjExpressionAccess().getOpAlternatives_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AUnaryPolyObjExpression__ExprAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAUnaryPolyObjExpressionAccess().getExprAPolyObjTerminalParserRuleCall_1_0()); }
		ruleAPolyObjTerminal
		{ after(grammarAccess.getAUnaryPolyObjExpressionAccess().getExprAPolyObjTerminalParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AVariableDomain__VarAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAVariableDomainAccess().getVarAVariableCrossReference_1_0()); }
		(
			{ before(grammarAccess.getAVariableDomainAccess().getVarAVariableIDTerminalRuleCall_1_0_1()); }
			RULE_ID
			{ after(grammarAccess.getAVariableDomainAccess().getVarAVariableIDTerminalRuleCall_1_0_1()); }
		)
		{ after(grammarAccess.getAVariableDomainAccess().getVarAVariableCrossReference_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ARectangularDomain__DimensionsAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getARectangularDomainAccess().getDimensionsAIndexListParserRuleCall_1_0()); }
		ruleAIndexList
		{ after(grammarAccess.getARectangularDomainAccess().getDimensionsAIndexListParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ARectangularDomain__NamesAssignment_3_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getARectangularDomainAccess().getNamesAIndexListParserRuleCall_3_2_0()); }
		ruleAIndexList
		{ after(grammarAccess.getARectangularDomainAccess().getNamesAIndexListParserRuleCall_3_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ADeclaredObject__ObjectAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getADeclaredObjectAccess().getObjectPolyhedralObjectCrossReference_0()); }
		(
			{ before(grammarAccess.getADeclaredObjectAccess().getObjectPolyhedralObjectIDTerminalRuleCall_0_1()); }
			RULE_ID
			{ after(grammarAccess.getADeclaredObjectAccess().getObjectPolyhedralObjectIDTerminalRuleCall_0_1()); }
		)
		{ after(grammarAccess.getADeclaredObjectAccess().getObjectPolyhedralObjectCrossReference_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AISLSet__SetsAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAISLSetAccess().getSetsAISLBasicSetParserRuleCall_1_0()); }
		ruleAISLBasicSet
		{ after(grammarAccess.getAISLSetAccess().getSetsAISLBasicSetParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AISLSet__RelationsAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAISLSetAccess().getRelationsAISLBasicSetParserRuleCall_2_1_0()); }
		ruleAISLBasicSet
		{ after(grammarAccess.getAISLSetAccess().getRelationsAISLBasicSetParserRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AISLBasicSet__DimsAssignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAISLBasicSetAccess().getDimsAIndexListParserRuleCall_0_1_0()); }
		ruleAIndexList
		{ after(grammarAccess.getAISLBasicSetAccess().getDimsAIndexListParserRuleCall_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AISLBasicSet__ConstraintStringAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAISLBasicSetAccess().getConstraintStringISLStringParserRuleCall_2_0()); }
		ruleISLString
		{ after(grammarAccess.getAISLBasicSetAccess().getConstraintStringISLStringParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AISLRelation__RelationsAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAISLRelationAccess().getRelationsAISLBasicRelationParserRuleCall_1_0()); }
		ruleAISLBasicRelation
		{ after(grammarAccess.getAISLRelationAccess().getRelationsAISLBasicRelationParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AISLRelation__RelationsAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAISLRelationAccess().getRelationsAISLBasicRelationParserRuleCall_2_1_0()); }
		ruleAISLBasicRelation
		{ after(grammarAccess.getAISLRelationAccess().getRelationsAISLBasicRelationParserRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AISLBasicRelation__InDimsAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAISLBasicRelationAccess().getInDimsAIndexListParserRuleCall_1_0()); }
		ruleAIndexList
		{ after(grammarAccess.getAISLBasicRelationAccess().getInDimsAIndexListParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AISLBasicRelation__OutDimsAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAISLBasicRelationAccess().getOutDimsAIndexListParserRuleCall_5_0()); }
		ruleAIndexList
		{ after(grammarAccess.getAISLBasicRelationAccess().getOutDimsAIndexListParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AISLBasicRelation__ConstraintStrAssignment_8
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAISLBasicRelationAccess().getConstraintStrISLStringParserRuleCall_8_0()); }
		ruleISLString
		{ after(grammarAccess.getAISLBasicRelationAccess().getConstraintStrISLStringParserRuleCall_8_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AEquation__VarAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAEquationAccess().getVarAVariableCrossReference_0_0()); }
		(
			{ before(grammarAccess.getAEquationAccess().getVarAVariableIDTerminalRuleCall_0_0_1()); }
			RULE_ID
			{ after(grammarAccess.getAEquationAccess().getVarAVariableIDTerminalRuleCall_0_0_1()); }
		)
		{ after(grammarAccess.getAEquationAccess().getVarAVariableCrossReference_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AEquation__IndexesAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAEquationAccess().getIndexesAIndexListParserRuleCall_1_1_0()); }
		ruleAIndexList
		{ after(grammarAccess.getAEquationAccess().getIndexesAIndexListParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AEquation__ExprAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAEquationAccess().getExprAAlphaExpressionParserRuleCall_3_0()); }
		ruleAAlphaExpression
		{ after(grammarAccess.getAEquationAccess().getExprAAlphaExpressionParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AUseEquation__InstantiationDomainAssignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAUseEquationAccess().getInstantiationDomainAPolyhedralObjectExpressionParserRuleCall_0_1_0()); }
		ruleAPolyhedralObjectExpression
		{ after(grammarAccess.getAUseEquationAccess().getInstantiationDomainAPolyhedralObjectExpressionParserRuleCall_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AUseEquation__SubsystemDimsAssignment_0_2_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAUseEquationAccess().getSubsystemDimsAIndexListParserRuleCall_0_2_2_0()); }
		ruleAIndexList
		{ after(grammarAccess.getAUseEquationAccess().getSubsystemDimsAIndexListParserRuleCall_0_2_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AUseEquation__OutputExprsAssignment_2_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAUseEquationAccess().getOutputExprsAAlphaExpressionParserRuleCall_2_0_0()); }
		ruleAAlphaExpression
		{ after(grammarAccess.getAUseEquationAccess().getOutputExprsAAlphaExpressionParserRuleCall_2_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AUseEquation__OutputExprsAssignment_2_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAUseEquationAccess().getOutputExprsAAlphaExpressionParserRuleCall_2_1_1_0()); }
		ruleAAlphaExpression
		{ after(grammarAccess.getAUseEquationAccess().getOutputExprsAAlphaExpressionParserRuleCall_2_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AUseEquation__SystemAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAUseEquationAccess().getSystemAAffineSystemCrossReference_5_0()); }
		(
			{ before(grammarAccess.getAUseEquationAccess().getSystemAAffineSystemIDTerminalRuleCall_5_0_1()); }
			RULE_ID
			{ after(grammarAccess.getAUseEquationAccess().getSystemAAffineSystemIDTerminalRuleCall_5_0_1()); }
		)
		{ after(grammarAccess.getAUseEquationAccess().getSystemAAffineSystemCrossReference_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AUseEquation__CallParamsAssignment_7
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAUseEquationAccess().getCallParamsAIndexAffineExpressionListParserRuleCall_7_0()); }
		ruleAIndexAffineExpressionList
		{ after(grammarAccess.getAUseEquationAccess().getCallParamsAIndexAffineExpressionListParserRuleCall_7_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AUseEquation__InputExprsAssignment_10_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAUseEquationAccess().getInputExprsAAlphaExpressionParserRuleCall_10_0_0()); }
		ruleAAlphaExpression
		{ after(grammarAccess.getAUseEquationAccess().getInputExprsAAlphaExpressionParserRuleCall_10_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AUseEquation__InputExprsAssignment_10_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAUseEquationAccess().getInputExprsAAlphaExpressionParserRuleCall_10_1_1_0()); }
		ruleAAlphaExpression
		{ after(grammarAccess.getAUseEquationAccess().getInputExprsAAlphaExpressionParserRuleCall_10_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AOrExpression__OperatorAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAOrExpressionAccess().getOperatorAlternatives_1_1_0()); }
		(rule__AOrExpression__OperatorAlternatives_1_1_0)
		{ after(grammarAccess.getAOrExpressionAccess().getOperatorAlternatives_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AOrExpression__RightAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAOrExpressionAccess().getRightAAndExpressionParserRuleCall_1_2_0()); }
		ruleAAndExpression
		{ after(grammarAccess.getAOrExpressionAccess().getRightAAndExpressionParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AAndExpression__OperatorAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAAndExpressionAccess().getOperatorAlternatives_1_1_0()); }
		(rule__AAndExpression__OperatorAlternatives_1_1_0)
		{ after(grammarAccess.getAAndExpressionAccess().getOperatorAlternatives_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AAndExpression__RightAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAAndExpressionAccess().getRightARelationalExpressionParserRuleCall_1_2_0()); }
		ruleARelationalExpression
		{ after(grammarAccess.getAAndExpressionAccess().getRightARelationalExpressionParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ARelationalExpression__OperatorAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getARelationalExpressionAccess().getOperatorRELATIONAL_OPParserRuleCall_1_1_0()); }
		ruleRELATIONAL_OP
		{ after(grammarAccess.getARelationalExpressionAccess().getOperatorRELATIONAL_OPParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ARelationalExpression__RightAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getARelationalExpressionAccess().getRightAAdditiveExpressionParserRuleCall_1_2_0()); }
		ruleAAdditiveExpression
		{ after(grammarAccess.getARelationalExpressionAccess().getRightAAdditiveExpressionParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AAdditiveExpression__OpAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAAdditiveExpressionAccess().getOpAlternatives_1_1_0()); }
		(rule__AAdditiveExpression__OpAlternatives_1_1_0)
		{ after(grammarAccess.getAAdditiveExpressionAccess().getOpAlternatives_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AAdditiveExpression__RightAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAAdditiveExpressionAccess().getRightAMultiplicativeExpressionParserRuleCall_1_2_0()); }
		ruleAMultiplicativeExpression
		{ after(grammarAccess.getAAdditiveExpressionAccess().getRightAMultiplicativeExpressionParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AMultiplicativeExpression__OpAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAMultiplicativeExpressionAccess().getOpAlternatives_1_1_0()); }
		(rule__AMultiplicativeExpression__OpAlternatives_1_1_0)
		{ after(grammarAccess.getAMultiplicativeExpressionAccess().getOpAlternatives_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AMultiplicativeExpression__RightAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAMultiplicativeExpressionAccess().getRightAMinMaxExpressionParserRuleCall_1_2_0()); }
		ruleAMinMaxExpression
		{ after(grammarAccess.getAMultiplicativeExpressionAccess().getRightAMinMaxExpressionParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AMinMaxExpression__OpAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAMinMaxExpressionAccess().getOpAlternatives_1_1_0()); }
		(rule__AMinMaxExpression__OpAlternatives_1_1_0)
		{ after(grammarAccess.getAMinMaxExpressionAccess().getOpAlternatives_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AMinMaxExpression__RightAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAMinMaxExpressionAccess().getRightAUnaryOrTerminalExpressionParserRuleCall_1_2_0()); }
		ruleAUnaryOrTerminalExpression
		{ after(grammarAccess.getAMinMaxExpressionAccess().getRightAUnaryOrTerminalExpressionParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ANotExpression__OpAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getANotExpressionAccess().getOpNotKeyword_0_0()); }
		(
			{ before(grammarAccess.getANotExpressionAccess().getOpNotKeyword_0_0()); }
			'not'
			{ after(grammarAccess.getANotExpressionAccess().getOpNotKeyword_0_0()); }
		)
		{ after(grammarAccess.getANotExpressionAccess().getOpNotKeyword_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ANotExpression__ExprAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getANotExpressionAccess().getExprAAlphabetsTerminalExpressionParserRuleCall_1_0()); }
		ruleAAlphabetsTerminalExpression
		{ after(grammarAccess.getANotExpressionAccess().getExprAAlphabetsTerminalExpressionParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ANegateExpression__OpAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getANegateExpressionAccess().getOpOP_MINUSTerminalRuleCall_0_0()); }
		RULE_OP_MINUS
		{ after(grammarAccess.getANegateExpressionAccess().getOpOP_MINUSTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ANegateExpression__ExprAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getANegateExpressionAccess().getExprAAlphabetsTerminalExpressionParserRuleCall_1_0()); }
		ruleAAlphabetsTerminalExpression
		{ after(grammarAccess.getANegateExpressionAccess().getExprAAlphabetsTerminalExpressionParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ACaseExpression__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getACaseExpressionAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getACaseExpressionAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ACaseExpression__ExprsAssignment_3_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getACaseExpressionAccess().getExprsAAlphaExpressionParserRuleCall_3_0_0()); }
		ruleAAlphaExpression
		{ after(grammarAccess.getACaseExpressionAccess().getExprsAAlphaExpressionParserRuleCall_3_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ADependenceExpression__FunctionAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getADependenceExpressionAccess().getFunctionAFunctionParserRuleCall_0_0()); }
		ruleAFunction
		{ after(grammarAccess.getADependenceExpressionAccess().getFunctionAFunctionParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ADependenceExpression__ExprAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getADependenceExpressionAccess().getExprAAlphabetsTerminalExpressionParserRuleCall_2_0()); }
		ruleAAlphabetsTerminalExpression
		{ after(grammarAccess.getADependenceExpressionAccess().getExprAAlphabetsTerminalExpressionParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ASelectDependenceExpression__RelationAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getASelectDependenceExpressionAccess().getRelationAPolyhedralObjectExpressionParserRuleCall_1_0()); }
		ruleAPolyhedralObjectExpression
		{ after(grammarAccess.getASelectDependenceExpressionAccess().getRelationAPolyhedralObjectExpressionParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ASelectDependenceExpression__ExprAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getASelectDependenceExpressionAccess().getExprAAlphabetsTerminalExpressionParserRuleCall_3_0()); }
		ruleAAlphabetsTerminalExpression
		{ after(grammarAccess.getASelectDependenceExpressionAccess().getExprAAlphabetsTerminalExpressionParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ADependenceInArrayNotation__VarAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getADependenceInArrayNotationAccess().getVarAVariableCrossReference_0_0()); }
		(
			{ before(grammarAccess.getADependenceInArrayNotationAccess().getVarAVariableIDTerminalRuleCall_0_0_1()); }
			RULE_ID
			{ after(grammarAccess.getADependenceInArrayNotationAccess().getVarAVariableIDTerminalRuleCall_0_0_1()); }
		)
		{ after(grammarAccess.getADependenceInArrayNotationAccess().getVarAVariableCrossReference_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ADependenceInArrayNotation__DepAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getADependenceInArrayNotationAccess().getDepAIndexAffineExpressionListParserRuleCall_2_0()); }
		ruleAIndexAffineExpressionList
		{ after(grammarAccess.getADependenceInArrayNotationAccess().getDepAIndexAffineExpressionListParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AIfExpression__CondAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAIfExpressionAccess().getCondAAlphaExpressionParserRuleCall_1_0()); }
		ruleAAlphaExpression
		{ after(grammarAccess.getAIfExpressionAccess().getCondAAlphaExpressionParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AIfExpression__ThenAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAIfExpressionAccess().getThenAAlphaExpressionParserRuleCall_3_0()); }
		ruleAAlphaExpression
		{ after(grammarAccess.getAIfExpressionAccess().getThenAAlphaExpressionParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AIfExpression__ElseAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAIfExpressionAccess().getElseAAlphaExpressionParserRuleCall_5_0()); }
		ruleAAlphaExpression
		{ after(grammarAccess.getAIfExpressionAccess().getElseAAlphaExpressionParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AIndexExpression__IndexesAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAIndexExpressionAccess().getIndexesAIndexListParserRuleCall_1_0()); }
		ruleAIndexList
		{ after(grammarAccess.getAIndexExpressionAccess().getIndexesAIndexListParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AIndexExpression__FuncAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAIndexExpressionAccess().getFuncIndexAffineExpressionTerminalParserRuleCall_3_0()); }
		ruleIndexAffineExpressionTerminal
		{ after(grammarAccess.getAIndexExpressionAccess().getFuncIndexAffineExpressionTerminalParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AIndexExpressionInArrayNotation__FuncAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAIndexExpressionInArrayNotationAccess().getFuncIndexAffineExpressionTerminalParserRuleCall_1_0()); }
		ruleIndexAffineExpressionTerminal
		{ after(grammarAccess.getAIndexExpressionInArrayNotationAccess().getFuncIndexAffineExpressionTerminalParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AReduceExpression__OpAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAReduceExpressionAccess().getOpAReductionOperatorParserRuleCall_2_0()); }
		ruleAReductionOperator
		{ after(grammarAccess.getAReduceExpressionAccess().getOpAReductionOperatorParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AReduceExpression__ProjectionAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAReduceExpressionAccess().getProjectionAlternatives_4_0()); }
		(rule__AReduceExpression__ProjectionAlternatives_4_0)
		{ after(grammarAccess.getAReduceExpressionAccess().getProjectionAlternatives_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AReduceExpression__ExprAssignment_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAReduceExpressionAccess().getExprAAlphaExpressionParserRuleCall_6_0()); }
		ruleAAlphaExpression
		{ after(grammarAccess.getAReduceExpressionAccess().getExprAAlphaExpressionParserRuleCall_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AArgReduceExpression__OpAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAArgReduceExpressionAccess().getOpAReductionOperatorParserRuleCall_2_0()); }
		ruleAReductionOperator
		{ after(grammarAccess.getAArgReduceExpressionAccess().getOpAReductionOperatorParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AArgReduceExpression__ProjectionAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAArgReduceExpressionAccess().getProjectionAlternatives_4_0()); }
		(rule__AArgReduceExpression__ProjectionAlternatives_4_0)
		{ after(grammarAccess.getAArgReduceExpressionAccess().getProjectionAlternatives_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AArgReduceExpression__ExprAssignment_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAArgReduceExpressionAccess().getExprAAlphaExpressionParserRuleCall_6_0()); }
		ruleAAlphaExpression
		{ after(grammarAccess.getAArgReduceExpressionAccess().getExprAAlphaExpressionParserRuleCall_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AConvExpression__DomainAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAConvExpressionAccess().getDomainAPolyhedralObjectExpressionParserRuleCall_2_0()); }
		ruleAPolyhedralObjectExpression
		{ after(grammarAccess.getAConvExpressionAccess().getDomainAPolyhedralObjectExpressionParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AConvExpression__KernelAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAConvExpressionAccess().getKernelAAlphaExpressionParserRuleCall_4_0()); }
		ruleAAlphaExpression
		{ after(grammarAccess.getAConvExpressionAccess().getKernelAAlphaExpressionParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AConvExpression__DataAssignment_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAConvExpressionAccess().getDataAAlphaExpressionParserRuleCall_6_0()); }
		ruleAAlphaExpression
		{ after(grammarAccess.getAConvExpressionAccess().getDataAAlphaExpressionParserRuleCall_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ARestrictExpression__DomainAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getARestrictExpressionAccess().getDomainAPolyObjectInRestrictParserRuleCall_0_0()); }
		ruleAPolyObjectInRestrict
		{ after(grammarAccess.getARestrictExpressionAccess().getDomainAPolyObjectInRestrictParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ARestrictExpression__ExprAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getARestrictExpressionAccess().getExprAAlphaExpressionParserRuleCall_2_0()); }
		ruleAAlphaExpression
		{ after(grammarAccess.getARestrictExpressionAccess().getExprAAlphaExpressionParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AAutoRestrictExpression__ExprAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAAutoRestrictExpressionAccess().getExprAAlphaExpressionParserRuleCall_2_0()); }
		ruleAAlphaExpression
		{ after(grammarAccess.getAAutoRestrictExpressionAccess().getExprAAlphaExpressionParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AVariableExpression__VarAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAVariableExpressionAccess().getVarAVariableCrossReference_0()); }
		(
			{ before(grammarAccess.getAVariableExpressionAccess().getVarAVariableIDTerminalRuleCall_0_1()); }
			RULE_ID
			{ after(grammarAccess.getAVariableExpressionAccess().getVarAVariableIDTerminalRuleCall_0_1()); }
		)
		{ after(grammarAccess.getAVariableExpressionAccess().getVarAVariableCrossReference_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ABooleanExpression__ValueAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getABooleanExpressionAccess().getValueBOOLEANTerminalRuleCall_0()); }
		RULE_BOOLEAN
		{ after(grammarAccess.getABooleanExpressionAccess().getValueBOOLEANTerminalRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AIntegerExpression__ValueAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAIntegerExpressionAccess().getValueINTTerminalRuleCall_0()); }
		RULE_INT
		{ after(grammarAccess.getAIntegerExpressionAccess().getValueINTTerminalRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ARealExpression__ValueAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getARealExpressionAccess().getValueREALTerminalRuleCall_0()); }
		RULE_REAL
		{ after(grammarAccess.getARealExpressionAccess().getValueREALTerminalRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AMultiArgArithmeticExpression__OpAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAMultiArgArithmeticExpressionAccess().getOpARITHMETIC_REDUCTION_OPParserRuleCall_0_0()); }
		ruleARITHMETIC_REDUCTION_OP
		{ after(grammarAccess.getAMultiArgArithmeticExpressionAccess().getOpARITHMETIC_REDUCTION_OPParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AMultiArgArithmeticExpression__ExprsAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAMultiArgArithmeticExpressionAccess().getExprsAAlphaExpressionParserRuleCall_2_0()); }
		ruleAAlphaExpression
		{ after(grammarAccess.getAMultiArgArithmeticExpressionAccess().getExprsAAlphaExpressionParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AMultiArgArithmeticExpression__ExprsAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAMultiArgArithmeticExpressionAccess().getExprsAAlphaExpressionParserRuleCall_3_1_0()); }
		ruleAAlphaExpression
		{ after(grammarAccess.getAMultiArgArithmeticExpressionAccess().getExprsAAlphaExpressionParserRuleCall_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AMultiArgLogicalExpression__OpAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAMultiArgLogicalExpressionAccess().getOpLOGICAL_REDUCTION_OPParserRuleCall_0_0()); }
		ruleLOGICAL_REDUCTION_OP
		{ after(grammarAccess.getAMultiArgLogicalExpressionAccess().getOpLOGICAL_REDUCTION_OPParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AMultiArgLogicalExpression__ExprsAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAMultiArgLogicalExpressionAccess().getExprsAAlphaExpressionParserRuleCall_2_0()); }
		ruleAAlphaExpression
		{ after(grammarAccess.getAMultiArgLogicalExpressionAccess().getExprsAAlphaExpressionParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AMultiArgLogicalExpression__ExprsAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAMultiArgLogicalExpressionAccess().getExprsAAlphaExpressionParserRuleCall_3_1_0()); }
		ruleAAlphaExpression
		{ after(grammarAccess.getAMultiArgLogicalExpressionAccess().getExprsAAlphaExpressionParserRuleCall_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AExternalFunctionCall__FuncAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAExternalFunctionCallAccess().getFuncAExternalFunctionCrossReference_0_0()); }
		(
			{ before(grammarAccess.getAExternalFunctionCallAccess().getFuncAExternalFunctionIDTerminalRuleCall_0_0_1()); }
			RULE_ID
			{ after(grammarAccess.getAExternalFunctionCallAccess().getFuncAExternalFunctionIDTerminalRuleCall_0_0_1()); }
		)
		{ after(grammarAccess.getAExternalFunctionCallAccess().getFuncAExternalFunctionCrossReference_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AExternalFunctionCall__ExprsAssignment_2_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAExternalFunctionCallAccess().getExprsAAlphaExpressionParserRuleCall_2_0_0()); }
		ruleAAlphaExpression
		{ after(grammarAccess.getAExternalFunctionCallAccess().getExprsAAlphaExpressionParserRuleCall_2_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AExternalFunctionCall__ExprsAssignment_2_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAExternalFunctionCallAccess().getExprsAAlphaExpressionParserRuleCall_2_1_1_0()); }
		ruleAAlphaExpression
		{ after(grammarAccess.getAExternalFunctionCallAccess().getExprsAAlphaExpressionParserRuleCall_2_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AIndexAffineExpressionList__ExprsAssignment_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAIndexAffineExpressionListAccess().getExprsIndexAffineExpressionParserRuleCall_1_0_0()); }
		ruleIndexAffineExpression
		{ after(grammarAccess.getAIndexAffineExpressionListAccess().getExprsIndexAffineExpressionParserRuleCall_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AIndexAffineExpressionList__ExprsAssignment_1_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAIndexAffineExpressionListAccess().getExprsIndexAffineExpressionParserRuleCall_1_1_1_0()); }
		ruleIndexAffineExpression
		{ after(grammarAccess.getAIndexAffineExpressionListAccess().getExprsIndexAffineExpressionParserRuleCall_1_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AFunction__IndexesAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAFunctionAccess().getIndexesAIndexListParserRuleCall_1_0()); }
		ruleAIndexList
		{ after(grammarAccess.getAFunctionAccess().getIndexesAIndexListParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AFunction__FuncAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAFunctionAccess().getFuncAIndexAffineExpressionListParserRuleCall_3_0()); }
		ruleAIndexAffineExpressionList
		{ after(grammarAccess.getAFunctionAccess().getFuncAIndexAffineExpressionListParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AFunctionInArrayNotation__NewIdsAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAFunctionInArrayNotationAccess().getNewIdsAIndexAffineExpressionListParserRuleCall_1_0()); }
		ruleAIndexAffineExpressionList
		{ after(grammarAccess.getAFunctionInArrayNotationAccess().getNewIdsAIndexAffineExpressionListParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AReductionOperator__OpAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAReductionOperatorAccess().getOpAExternalFunctionCrossReference_0_0()); }
		(
			{ before(grammarAccess.getAReductionOperatorAccess().getOpAExternalFunctionIDTerminalRuleCall_0_0_1()); }
			RULE_ID
			{ after(grammarAccess.getAReductionOperatorAccess().getOpAExternalFunctionIDTerminalRuleCall_0_0_1()); }
		)
		{ after(grammarAccess.getAReductionOperatorAccess().getOpAExternalFunctionCrossReference_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AReductionOperator__BuiltinAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAReductionOperatorAccess().getBuiltinREDUCTION_OPParserRuleCall_1_0()); }
		ruleREDUCTION_OP
		{ after(grammarAccess.getAReductionOperatorAccess().getBuiltinREDUCTION_OPParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

RULE_OP_AND : 'and';

RULE_OP_MAX : 'max';

RULE_OP_MIN : 'min';

RULE_OP_MUL : '*';

RULE_OP_OR : 'or';

RULE_OP_XOR : 'xor';

RULE_OP_PLUS : '+';

RULE_OP_MINUS : '-';

RULE_OP_DIV : '/';

RULE_OP_MOD : '%';

RULE_OP_NAND : 'nand';

RULE_OP_EQ : '=';

RULE_OP_GE : '>=';

RULE_OP_GT : '>';

RULE_OP_LE : '<=';

RULE_OP_LT : '<';

RULE_OP_NE : '!=';

RULE_BOOLEAN : ('true'|'false');

RULE_REAL : ('0'..'9')+ '.' ('0'..'9')+;

RULE_INTERSECTION : '&&';

RULE_UNION : '||';

RULE_STRING : '"' ('\\' .|~(('\\'|'"')))* '"';

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
