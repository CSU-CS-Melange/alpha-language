/*
 * generated by Xtext 2.13.0
 */
grammar InternalAlpha;

options {
	superClass=AbstractInternalContentAssistParser;
}

@lexer::header {
package alpha.model.ide.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package alpha.model.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import alpha.model.services.AlphaGrammarAccess;

}
@parser::members {
	private AlphaGrammarAccess grammarAccess;

	public void setGrammarAccess(AlphaGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		return tokenName;
	}
}

// Entry rule entryRuleAlphaRoot
entryRuleAlphaRoot
:
{ before(grammarAccess.getAlphaRootRule()); }
	 ruleAlphaRoot
{ after(grammarAccess.getAlphaRootRule()); } 
	 EOF 
;

// Rule AlphaRoot
ruleAlphaRoot 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAlphaRootAccess().getElementsAssignment()); }
		(rule__AlphaRoot__ElementsAssignment)*
		{ after(grammarAccess.getAlphaRootAccess().getElementsAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAlphaConstant
entryRuleAlphaConstant
:
{ before(grammarAccess.getAlphaConstantRule()); }
	 ruleAlphaConstant
{ after(grammarAccess.getAlphaConstantRule()); } 
	 EOF 
;

// Rule AlphaConstant
ruleAlphaConstant 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAlphaConstantAccess().getGroup()); }
		(rule__AlphaConstant__Group__0)
		{ after(grammarAccess.getAlphaConstantAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleExternalFunction
entryRuleExternalFunction
:
{ before(grammarAccess.getExternalFunctionRule()); }
	 ruleExternalFunction
{ after(grammarAccess.getExternalFunctionRule()); } 
	 EOF 
;

// Rule ExternalFunction
ruleExternalFunction 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExternalFunctionAccess().getGroup()); }
		(rule__ExternalFunction__Group__0)
		{ after(grammarAccess.getExternalFunctionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleImports
entryRuleImports
:
{ before(grammarAccess.getImportsRule()); }
	 ruleImports
{ after(grammarAccess.getImportsRule()); } 
	 EOF 
;

// Rule Imports
ruleImports 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getImportsAccess().getGroup()); }
		(rule__Imports__Group__0)
		{ after(grammarAccess.getImportsAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAlphaPackage
entryRuleAlphaPackage
:
{ before(grammarAccess.getAlphaPackageRule()); }
	 ruleAlphaPackage
{ after(grammarAccess.getAlphaPackageRule()); } 
	 EOF 
;

// Rule AlphaPackage
ruleAlphaPackage 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAlphaPackageAccess().getGroup()); }
		(rule__AlphaPackage__Group__0)
		{ after(grammarAccess.getAlphaPackageAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAlphaSystem
entryRuleAlphaSystem
:
{ before(grammarAccess.getAlphaSystemRule()); }
	 ruleAlphaSystem
{ after(grammarAccess.getAlphaSystemRule()); } 
	 EOF 
;

// Rule AlphaSystem
ruleAlphaSystem 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAlphaSystemAccess().getGroup()); }
		(rule__AlphaSystem__Group__0)
		{ after(grammarAccess.getAlphaSystemAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleInputVariable
entryRuleInputVariable
:
{ before(grammarAccess.getInputVariableRule()); }
	 ruleInputVariable
{ after(grammarAccess.getInputVariableRule()); } 
	 EOF 
;

// Rule InputVariable
ruleInputVariable 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getInputVariableAccess().getGroup()); }
		(rule__InputVariable__Group__0)
		{ after(grammarAccess.getInputVariableAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleOutputVariable
entryRuleOutputVariable
:
{ before(grammarAccess.getOutputVariableRule()); }
	 ruleOutputVariable
{ after(grammarAccess.getOutputVariableRule()); } 
	 EOF 
;

// Rule OutputVariable
ruleOutputVariable 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getOutputVariableAccess().getGroup()); }
		(rule__OutputVariable__Group__0)
		{ after(grammarAccess.getOutputVariableAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleLocalVariable
entryRuleLocalVariable
:
{ before(grammarAccess.getLocalVariableRule()); }
	 ruleLocalVariable
{ after(grammarAccess.getLocalVariableRule()); } 
	 EOF 
;

// Rule LocalVariable
ruleLocalVariable 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getLocalVariableAccess().getGroup()); }
		(rule__LocalVariable__Group__0)
		{ after(grammarAccess.getLocalVariableAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFuzzyVariable
entryRuleFuzzyVariable
:
{ before(grammarAccess.getFuzzyVariableRule()); }
	 ruleFuzzyVariable
{ after(grammarAccess.getFuzzyVariableRule()); } 
	 EOF 
;

// Rule FuzzyVariable
ruleFuzzyVariable 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFuzzyVariableAccess().getGroup()); }
		(rule__FuzzyVariable__Group__0)
		{ after(grammarAccess.getFuzzyVariableAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleJNIDomain
entryRuleJNIDomain
:
{ before(grammarAccess.getJNIDomainRule()); }
	 ruleJNIDomain
{ after(grammarAccess.getJNIDomainRule()); } 
	 EOF 
;

// Rule JNIDomain
ruleJNIDomain 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getJNIDomainAccess().getIslStringAssignment()); }
		(rule__JNIDomain__IslStringAssignment)
		{ after(grammarAccess.getJNIDomainAccess().getIslStringAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleJNIDomainInArrayNotation
entryRuleJNIDomainInArrayNotation
:
{ before(grammarAccess.getJNIDomainInArrayNotationRule()); }
	 ruleJNIDomainInArrayNotation
{ after(grammarAccess.getJNIDomainInArrayNotationRule()); } 
	 EOF 
;

// Rule JNIDomainInArrayNotation
ruleJNIDomainInArrayNotation 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getJNIDomainInArrayNotationAccess().getGroup()); }
		(rule__JNIDomainInArrayNotation__Group__0)
		{ after(grammarAccess.getJNIDomainInArrayNotationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleJNIParamDomain
entryRuleJNIParamDomain
:
{ before(grammarAccess.getJNIParamDomainRule()); }
	 ruleJNIParamDomain
{ after(grammarAccess.getJNIParamDomainRule()); } 
	 EOF 
;

// Rule JNIParamDomain
ruleJNIParamDomain 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getJNIParamDomainAccess().getIslStringAssignment()); }
		(rule__JNIParamDomain__IslStringAssignment)
		{ after(grammarAccess.getJNIParamDomainAccess().getIslStringAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleJNIRelation
entryRuleJNIRelation
:
{ before(grammarAccess.getJNIRelationRule()); }
	 ruleJNIRelation
{ after(grammarAccess.getJNIRelationRule()); } 
	 EOF 
;

// Rule JNIRelation
ruleJNIRelation 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getJNIRelationAccess().getIslStringAssignment()); }
		(rule__JNIRelation__IslStringAssignment)
		{ after(grammarAccess.getJNIRelationAccess().getIslStringAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleJNIFunction
entryRuleJNIFunction
:
{ before(grammarAccess.getJNIFunctionRule()); }
	 ruleJNIFunction
{ after(grammarAccess.getJNIFunctionRule()); } 
	 EOF 
;

// Rule JNIFunction
ruleJNIFunction 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getJNIFunctionAccess().getAlphaStringAssignment()); }
		(rule__JNIFunction__AlphaStringAssignment)
		{ after(grammarAccess.getJNIFunctionAccess().getAlphaStringAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleJNIFunctionInArrayNotation
entryRuleJNIFunctionInArrayNotation
:
{ before(grammarAccess.getJNIFunctionInArrayNotationRule()); }
	 ruleJNIFunctionInArrayNotation
{ after(grammarAccess.getJNIFunctionInArrayNotationRule()); } 
	 EOF 
;

// Rule JNIFunctionInArrayNotation
ruleJNIFunctionInArrayNotation 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getJNIFunctionInArrayNotationAccess().getGroup()); }
		(rule__JNIFunctionInArrayNotation__Group__0)
		{ after(grammarAccess.getJNIFunctionInArrayNotationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleQualifiedName
entryRuleQualifiedName
:
{ before(grammarAccess.getQualifiedNameRule()); }
	 ruleQualifiedName
{ after(grammarAccess.getQualifiedNameRule()); } 
	 EOF 
;

// Rule QualifiedName
ruleQualifiedName 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getQualifiedNameAccess().getGroup()); }
		(rule__QualifiedName__Group__0)
		{ after(grammarAccess.getQualifiedNameAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleQualifiedNameWithWildcard
entryRuleQualifiedNameWithWildcard
:
{ before(grammarAccess.getQualifiedNameWithWildcardRule()); }
	 ruleQualifiedNameWithWildcard
{ after(grammarAccess.getQualifiedNameWithWildcardRule()); } 
	 EOF 
;

// Rule QualifiedNameWithWildcard
ruleQualifiedNameWithWildcard 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getQualifiedNameWithWildcardAccess().getGroup()); }
		(rule__QualifiedNameWithWildcard__Group__0)
		{ after(grammarAccess.getQualifiedNameWithWildcardAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSystemName
entryRuleSystemName
:
{ before(grammarAccess.getSystemNameRule()); }
	 ruleSystemName
{ after(grammarAccess.getSystemNameRule()); } 
	 EOF 
;

// Rule SystemName
ruleSystemName 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSystemNameAccess().getIDTerminalRuleCall()); }
		RULE_ID
		{ after(grammarAccess.getSystemNameAccess().getIDTerminalRuleCall()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleIndexName
entryRuleIndexName
:
{ before(grammarAccess.getIndexNameRule()); }
	 ruleIndexName
{ after(grammarAccess.getIndexNameRule()); } 
	 EOF 
;

// Rule IndexName
ruleIndexName 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getIndexNameAccess().getGroup()); }
		(rule__IndexName__Group__0)
		{ after(grammarAccess.getIndexNameAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAIndexList
entryRuleAIndexList
:
{ before(grammarAccess.getAIndexListRule()); }
	 ruleAIndexList
{ after(grammarAccess.getAIndexListRule()); } 
	 EOF 
;

// Rule AIndexList
ruleAIndexList 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAIndexListAccess().getGroup()); }
		(rule__AIndexList__Group__0)?
		{ after(grammarAccess.getAIndexListAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAParamDomain
entryRuleAParamDomain
:
{ before(grammarAccess.getAParamDomainRule()); }
	 ruleAParamDomain
{ after(grammarAccess.getAParamDomainRule()); } 
	 EOF 
;

// Rule AParamDomain
ruleAParamDomain 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAParamDomainAccess().getGroup()); }
		(rule__AParamDomain__Group__0)
		{ after(grammarAccess.getAParamDomainAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAISLSet
entryRuleAISLSet
:
{ before(grammarAccess.getAISLSetRule()); }
	 ruleAISLSet
{ after(grammarAccess.getAISLSetRule()); } 
	 EOF 
;

// Rule AISLSet
ruleAISLSet 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAISLSetAccess().getGroup()); }
		(rule__AISLSet__Group__0)
		{ after(grammarAccess.getAISLSetAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAISLBasicSet
entryRuleAISLBasicSet
:
{ before(grammarAccess.getAISLBasicSetRule()); }
	 ruleAISLBasicSet
{ after(grammarAccess.getAISLBasicSetRule()); } 
	 EOF 
;

// Rule AISLBasicSet
ruleAISLBasicSet 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAISLBasicSetAccess().getGroup()); }
		(rule__AISLBasicSet__Group__0)
		{ after(grammarAccess.getAISLBasicSetAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAISLRelation
entryRuleAISLRelation
:
{ before(grammarAccess.getAISLRelationRule()); }
	 ruleAISLRelation
{ after(grammarAccess.getAISLRelationRule()); } 
	 EOF 
;

// Rule AISLRelation
ruleAISLRelation 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAISLRelationAccess().getGroup()); }
		(rule__AISLRelation__Group__0)
		{ after(grammarAccess.getAISLRelationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAISLBasicRelation
entryRuleAISLBasicRelation
:
{ before(grammarAccess.getAISLBasicRelationRule()); }
	 ruleAISLBasicRelation
{ after(grammarAccess.getAISLBasicRelationRule()); } 
	 EOF 
;

// Rule AISLBasicRelation
ruleAISLBasicRelation 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAISLBasicRelationAccess().getGroup()); }
		(rule__AISLBasicRelation__Group__0)
		{ after(grammarAccess.getAISLBasicRelationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAISLString
entryRuleAISLString
:
{ before(grammarAccess.getAISLStringRule()); }
	 ruleAISLString
{ after(grammarAccess.getAISLStringRule()); } 
	 EOF 
;

// Rule AISLString
ruleAISLString 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAISLStringAccess().getAlternatives()); }
		(rule__AISLString__Alternatives)*
		{ after(grammarAccess.getAISLStringAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAISLExpression
entryRuleAISLExpression
:
{ before(grammarAccess.getAISLExpressionRule()); }
	 ruleAISLExpression
{ after(grammarAccess.getAISLExpressionRule()); } 
	 EOF 
;

// Rule AISLExpression
ruleAISLExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		(
			{ before(grammarAccess.getAISLExpressionAccess().getAlternatives()); }
			(rule__AISLExpression__Alternatives)
			{ after(grammarAccess.getAISLExpressionAccess().getAlternatives()); }
		)
		(
			{ before(grammarAccess.getAISLExpressionAccess().getAlternatives()); }
			(rule__AISLExpression__Alternatives)*
			{ after(grammarAccess.getAISLExpressionAccess().getAlternatives()); }
		)
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAISLExpressionList
entryRuleAISLExpressionList
:
{ before(grammarAccess.getAISLExpressionListRule()); }
	 ruleAISLExpressionList
{ after(grammarAccess.getAISLExpressionListRule()); } 
	 EOF 
;

// Rule AISLExpressionList
ruleAISLExpressionList 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAISLExpressionListAccess().getGroup()); }
		(rule__AISLExpressionList__Group__0)?
		{ after(grammarAccess.getAISLExpressionListAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAAlphaFunction
entryRuleAAlphaFunction
:
{ before(grammarAccess.getAAlphaFunctionRule()); }
	 ruleAAlphaFunction
{ after(grammarAccess.getAAlphaFunctionRule()); } 
	 EOF 
;

// Rule AAlphaFunction
ruleAAlphaFunction 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAAlphaFunctionAccess().getGroup()); }
		(rule__AAlphaFunction__Group__0)
		{ after(grammarAccess.getAAlphaFunctionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleStandardEquation
entryRuleStandardEquation
:
{ before(grammarAccess.getStandardEquationRule()); }
	 ruleStandardEquation
{ after(grammarAccess.getStandardEquationRule()); } 
	 EOF 
;

// Rule StandardEquation
ruleStandardEquation 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getStandardEquationAccess().getGroup()); }
		(rule__StandardEquation__Group__0)
		{ after(grammarAccess.getStandardEquationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleUseEquation
entryRuleUseEquation
:
{ before(grammarAccess.getUseEquationRule()); }
	 ruleUseEquation
{ after(grammarAccess.getUseEquationRule()); } 
	 EOF 
;

// Rule UseEquation
ruleUseEquation 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getUseEquationAccess().getGroup()); }
		(rule__UseEquation__Group__0)
		{ after(grammarAccess.getUseEquationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAlphaExpression
entryRuleAlphaExpression
:
{ before(grammarAccess.getAlphaExpressionRule()); }
	 ruleAlphaExpression
{ after(grammarAccess.getAlphaExpressionRule()); } 
	 EOF 
;

// Rule AlphaExpression
ruleAlphaExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAlphaExpressionAccess().getAlternatives()); }
		(rule__AlphaExpression__Alternatives)
		{ after(grammarAccess.getAlphaExpressionAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAlphaTerminalExpression
entryRuleAlphaTerminalExpression
:
{ before(grammarAccess.getAlphaTerminalExpressionRule()); }
	 ruleAlphaTerminalExpression
{ after(grammarAccess.getAlphaTerminalExpressionRule()); } 
	 EOF 
;

// Rule AlphaTerminalExpression
ruleAlphaTerminalExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAlphaTerminalExpressionAccess().getAlternatives()); }
		(rule__AlphaTerminalExpression__Alternatives)
		{ after(grammarAccess.getAlphaTerminalExpressionAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleIfExpression
entryRuleIfExpression
:
{ before(grammarAccess.getIfExpressionRule()); }
	 ruleIfExpression
{ after(grammarAccess.getIfExpressionRule()); } 
	 EOF 
;

// Rule IfExpression
ruleIfExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getIfExpressionAccess().getGroup()); }
		(rule__IfExpression__Group__0)
		{ after(grammarAccess.getIfExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleRestrictExpression
entryRuleRestrictExpression
:
{ before(grammarAccess.getRestrictExpressionRule()); }
	 ruleRestrictExpression
{ after(grammarAccess.getRestrictExpressionRule()); } 
	 EOF 
;

// Rule RestrictExpression
ruleRestrictExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRestrictExpressionAccess().getAlternatives()); }
		(rule__RestrictExpression__Alternatives)
		{ after(grammarAccess.getRestrictExpressionAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAutoRestrictExpression
entryRuleAutoRestrictExpression
:
{ before(grammarAccess.getAutoRestrictExpressionRule()); }
	 ruleAutoRestrictExpression
{ after(grammarAccess.getAutoRestrictExpressionRule()); } 
	 EOF 
;

// Rule AutoRestrictExpression
ruleAutoRestrictExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAutoRestrictExpressionAccess().getGroup()); }
		(rule__AutoRestrictExpression__Group__0)
		{ after(grammarAccess.getAutoRestrictExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCaseExpression
entryRuleCaseExpression
:
{ before(grammarAccess.getCaseExpressionRule()); }
	 ruleCaseExpression
{ after(grammarAccess.getCaseExpressionRule()); } 
	 EOF 
;

// Rule CaseExpression
ruleCaseExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCaseExpressionAccess().getGroup()); }
		(rule__CaseExpression__Group__0)
		{ after(grammarAccess.getCaseExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDependenceExpression
entryRuleDependenceExpression
:
{ before(grammarAccess.getDependenceExpressionRule()); }
	 ruleDependenceExpression
{ after(grammarAccess.getDependenceExpressionRule()); } 
	 EOF 
;

// Rule DependenceExpression
ruleDependenceExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDependenceExpressionAccess().getAlternatives()); }
		(rule__DependenceExpression__Alternatives)
		{ after(grammarAccess.getDependenceExpressionAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleIndexExpression
entryRuleIndexExpression
:
{ before(grammarAccess.getIndexExpressionRule()); }
	 ruleIndexExpression
{ after(grammarAccess.getIndexExpressionRule()); } 
	 EOF 
;

// Rule IndexExpression
ruleIndexExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getIndexExpressionAccess().getAlternatives()); }
		(rule__IndexExpression__Alternatives)
		{ after(grammarAccess.getIndexExpressionAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleReduceExpression
entryRuleReduceExpression
:
{ before(grammarAccess.getReduceExpressionRule()); }
	 ruleReduceExpression
{ after(grammarAccess.getReduceExpressionRule()); } 
	 EOF 
;

// Rule ReduceExpression
ruleReduceExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getReduceExpressionAccess().getGroup()); }
		(rule__ReduceExpression__Group__0)
		{ after(grammarAccess.getReduceExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleExternalReduceExpression
entryRuleExternalReduceExpression
:
{ before(grammarAccess.getExternalReduceExpressionRule()); }
	 ruleExternalReduceExpression
{ after(grammarAccess.getExternalReduceExpressionRule()); } 
	 EOF 
;

// Rule ExternalReduceExpression
ruleExternalReduceExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExternalReduceExpressionAccess().getGroup()); }
		(rule__ExternalReduceExpression__Group__0)
		{ after(grammarAccess.getExternalReduceExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleArgReduceExpression
entryRuleArgReduceExpression
:
{ before(grammarAccess.getArgReduceExpressionRule()); }
	 ruleArgReduceExpression
{ after(grammarAccess.getArgReduceExpressionRule()); } 
	 EOF 
;

// Rule ArgReduceExpression
ruleArgReduceExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getArgReduceExpressionAccess().getGroup()); }
		(rule__ArgReduceExpression__Group__0)
		{ after(grammarAccess.getArgReduceExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleExternalArgReduceExpression
entryRuleExternalArgReduceExpression
:
{ before(grammarAccess.getExternalArgReduceExpressionRule()); }
	 ruleExternalArgReduceExpression
{ after(grammarAccess.getExternalArgReduceExpressionRule()); } 
	 EOF 
;

// Rule ExternalArgReduceExpression
ruleExternalArgReduceExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExternalArgReduceExpressionAccess().getGroup()); }
		(rule__ExternalArgReduceExpression__Group__0)
		{ after(grammarAccess.getExternalArgReduceExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleConvolutionExpression
entryRuleConvolutionExpression
:
{ before(grammarAccess.getConvolutionExpressionRule()); }
	 ruleConvolutionExpression
{ after(grammarAccess.getConvolutionExpressionRule()); } 
	 EOF 
;

// Rule ConvolutionExpression
ruleConvolutionExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getConvolutionExpressionAccess().getGroup()); }
		(rule__ConvolutionExpression__Group__0)
		{ after(grammarAccess.getConvolutionExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSelectExpression
entryRuleSelectExpression
:
{ before(grammarAccess.getSelectExpressionRule()); }
	 ruleSelectExpression
{ after(grammarAccess.getSelectExpressionRule()); } 
	 EOF 
;

// Rule SelectExpression
ruleSelectExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSelectExpressionAccess().getGroup()); }
		(rule__SelectExpression__Group__0)
		{ after(grammarAccess.getSelectExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleOrExpression
entryRuleOrExpression
:
{ before(grammarAccess.getOrExpressionRule()); }
	 ruleOrExpression
{ after(grammarAccess.getOrExpressionRule()); } 
	 EOF 
;

// Rule OrExpression
ruleOrExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getOrExpressionAccess().getGroup()); }
		(rule__OrExpression__Group__0)
		{ after(grammarAccess.getOrExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAndExpression
entryRuleAndExpression
:
{ before(grammarAccess.getAndExpressionRule()); }
	 ruleAndExpression
{ after(grammarAccess.getAndExpressionRule()); } 
	 EOF 
;

// Rule AndExpression
ruleAndExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAndExpressionAccess().getGroup()); }
		(rule__AndExpression__Group__0)
		{ after(grammarAccess.getAndExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleRelationalExpression
entryRuleRelationalExpression
:
{ before(grammarAccess.getRelationalExpressionRule()); }
	 ruleRelationalExpression
{ after(grammarAccess.getRelationalExpressionRule()); } 
	 EOF 
;

// Rule RelationalExpression
ruleRelationalExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRelationalExpressionAccess().getGroup()); }
		(rule__RelationalExpression__Group__0)
		{ after(grammarAccess.getRelationalExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAdditiveExpression
entryRuleAdditiveExpression
:
{ before(grammarAccess.getAdditiveExpressionRule()); }
	 ruleAdditiveExpression
{ after(grammarAccess.getAdditiveExpressionRule()); } 
	 EOF 
;

// Rule AdditiveExpression
ruleAdditiveExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAdditiveExpressionAccess().getGroup()); }
		(rule__AdditiveExpression__Group__0)
		{ after(grammarAccess.getAdditiveExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleMultiplicativeExpression
entryRuleMultiplicativeExpression
:
{ before(grammarAccess.getMultiplicativeExpressionRule()); }
	 ruleMultiplicativeExpression
{ after(grammarAccess.getMultiplicativeExpressionRule()); } 
	 EOF 
;

// Rule MultiplicativeExpression
ruleMultiplicativeExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMultiplicativeExpressionAccess().getGroup()); }
		(rule__MultiplicativeExpression__Group__0)
		{ after(grammarAccess.getMultiplicativeExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleMinMaxExpression
entryRuleMinMaxExpression
:
{ before(grammarAccess.getMinMaxExpressionRule()); }
	 ruleMinMaxExpression
{ after(grammarAccess.getMinMaxExpressionRule()); } 
	 EOF 
;

// Rule MinMaxExpression
ruleMinMaxExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMinMaxExpressionAccess().getGroup()); }
		(rule__MinMaxExpression__Group__0)
		{ after(grammarAccess.getMinMaxExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleMultiArgExpression
entryRuleMultiArgExpression
:
{ before(grammarAccess.getMultiArgExpressionRule()); }
	 ruleMultiArgExpression
{ after(grammarAccess.getMultiArgExpressionRule()); } 
	 EOF 
;

// Rule MultiArgExpression
ruleMultiArgExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMultiArgExpressionAccess().getGroup()); }
		(rule__MultiArgExpression__Group__0)
		{ after(grammarAccess.getMultiArgExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleExternalMultiArgExpression
entryRuleExternalMultiArgExpression
:
{ before(grammarAccess.getExternalMultiArgExpressionRule()); }
	 ruleExternalMultiArgExpression
{ after(grammarAccess.getExternalMultiArgExpressionRule()); } 
	 EOF 
;

// Rule ExternalMultiArgExpression
ruleExternalMultiArgExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExternalMultiArgExpressionAccess().getGroup()); }
		(rule__ExternalMultiArgExpression__Group__0)
		{ after(grammarAccess.getExternalMultiArgExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleUnaryOrTerminalExpression
entryRuleUnaryOrTerminalExpression
:
{ before(grammarAccess.getUnaryOrTerminalExpressionRule()); }
	 ruleUnaryOrTerminalExpression
{ after(grammarAccess.getUnaryOrTerminalExpressionRule()); } 
	 EOF 
;

// Rule UnaryOrTerminalExpression
ruleUnaryOrTerminalExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getUnaryOrTerminalExpressionAccess().getAlternatives()); }
		(rule__UnaryOrTerminalExpression__Alternatives)
		{ after(grammarAccess.getUnaryOrTerminalExpressionAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleUnaryExpression
entryRuleUnaryExpression
:
{ before(grammarAccess.getUnaryExpressionRule()); }
	 ruleUnaryExpression
{ after(grammarAccess.getUnaryExpressionRule()); } 
	 EOF 
;

// Rule UnaryExpression
ruleUnaryExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getUnaryExpressionAccess().getGroup()); }
		(rule__UnaryExpression__Group__0)
		{ after(grammarAccess.getUnaryExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleVariableExpression
entryRuleVariableExpression
:
{ before(grammarAccess.getVariableExpressionRule()); }
	 ruleVariableExpression
{ after(grammarAccess.getVariableExpressionRule()); } 
	 EOF 
;

// Rule VariableExpression
ruleVariableExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getVariableExpressionAccess().getVariableAssignment()); }
		(rule__VariableExpression__VariableAssignment)
		{ after(grammarAccess.getVariableExpressionAccess().getVariableAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleConstantExpression
entryRuleConstantExpression
:
{ before(grammarAccess.getConstantExpressionRule()); }
	 ruleConstantExpression
{ after(grammarAccess.getConstantExpressionRule()); } 
	 EOF 
;

// Rule ConstantExpression
ruleConstantExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getConstantExpressionAccess().getAlternatives()); }
		(rule__ConstantExpression__Alternatives)
		{ after(grammarAccess.getConstantExpressionAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleBooleanExpression
entryRuleBooleanExpression
:
{ before(grammarAccess.getBooleanExpressionRule()); }
	 ruleBooleanExpression
{ after(grammarAccess.getBooleanExpressionRule()); } 
	 EOF 
;

// Rule BooleanExpression
ruleBooleanExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBooleanExpressionAccess().getValueAssignment()); }
		(rule__BooleanExpression__ValueAssignment)
		{ after(grammarAccess.getBooleanExpressionAccess().getValueAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleIntegerExpression
entryRuleIntegerExpression
:
{ before(grammarAccess.getIntegerExpressionRule()); }
	 ruleIntegerExpression
{ after(grammarAccess.getIntegerExpressionRule()); } 
	 EOF 
;

// Rule IntegerExpression
ruleIntegerExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getIntegerExpressionAccess().getValueAssignment()); }
		(rule__IntegerExpression__ValueAssignment)
		{ after(grammarAccess.getIntegerExpressionAccess().getValueAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleRealExpression
entryRuleRealExpression
:
{ before(grammarAccess.getRealExpressionRule()); }
	 ruleRealExpression
{ after(grammarAccess.getRealExpressionRule()); } 
	 EOF 
;

// Rule RealExpression
ruleRealExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRealExpressionAccess().getValueAssignment()); }
		(rule__RealExpression__ValueAssignment)
		{ after(grammarAccess.getRealExpressionAccess().getValueAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAREDUCTION_OP
entryRuleAREDUCTION_OP
:
{ before(grammarAccess.getAREDUCTION_OPRule()); }
	 ruleAREDUCTION_OP
{ after(grammarAccess.getAREDUCTION_OPRule()); } 
	 EOF 
;

// Rule AREDUCTION_OP
ruleAREDUCTION_OP 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAREDUCTION_OPAccess().getAlternatives()); }
		(rule__AREDUCTION_OP__Alternatives)
		{ after(grammarAccess.getAREDUCTION_OPAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAOrOP
entryRuleAOrOP
:
{ before(grammarAccess.getAOrOPRule()); }
	 ruleAOrOP
{ after(grammarAccess.getAOrOPRule()); } 
	 EOF 
;

// Rule AOrOP
ruleAOrOP 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAOrOPAccess().getAlternatives()); }
		(rule__AOrOP__Alternatives)
		{ after(grammarAccess.getAOrOPAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAAndOP
entryRuleAAndOP
:
{ before(grammarAccess.getAAndOPRule()); }
	 ruleAAndOP
{ after(grammarAccess.getAAndOPRule()); } 
	 EOF 
;

// Rule AAndOP
ruleAAndOP 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAAndOPAccess().getAndKeyword()); }
		'and'
		{ after(grammarAccess.getAAndOPAccess().getAndKeyword()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleARelationalOP
entryRuleARelationalOP
:
{ before(grammarAccess.getARelationalOPRule()); }
	 ruleARelationalOP
{ after(grammarAccess.getARelationalOPRule()); } 
	 EOF 
;

// Rule ARelationalOP
ruleARelationalOP 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getARelationalOPAccess().getAlternatives()); }
		(rule__ARelationalOP__Alternatives)
		{ after(grammarAccess.getARelationalOPAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAAdditiveOP
entryRuleAAdditiveOP
:
{ before(grammarAccess.getAAdditiveOPRule()); }
	 ruleAAdditiveOP
{ after(grammarAccess.getAAdditiveOPRule()); } 
	 EOF 
;

// Rule AAdditiveOP
ruleAAdditiveOP 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAAdditiveOPAccess().getAlternatives()); }
		(rule__AAdditiveOP__Alternatives)
		{ after(grammarAccess.getAAdditiveOPAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAMultiplicativeOP
entryRuleAMultiplicativeOP
:
{ before(grammarAccess.getAMultiplicativeOPRule()); }
	 ruleAMultiplicativeOP
{ after(grammarAccess.getAMultiplicativeOPRule()); } 
	 EOF 
;

// Rule AMultiplicativeOP
ruleAMultiplicativeOP 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAMultiplicativeOPAccess().getAlternatives()); }
		(rule__AMultiplicativeOP__Alternatives)
		{ after(grammarAccess.getAMultiplicativeOPAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAMINMAX_OP
entryRuleAMINMAX_OP
:
{ before(grammarAccess.getAMINMAX_OPRule()); }
	 ruleAMINMAX_OP
{ after(grammarAccess.getAMINMAX_OPRule()); } 
	 EOF 
;

// Rule AMINMAX_OP
ruleAMINMAX_OP 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAMINMAX_OPAccess().getAlternatives()); }
		(rule__AMINMAX_OP__Alternatives)
		{ after(grammarAccess.getAMINMAX_OPAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAUnaryOP
entryRuleAUnaryOP
:
{ before(grammarAccess.getAUnaryOPRule()); }
	 ruleAUnaryOP
{ after(grammarAccess.getAUnaryOPRule()); } 
	 EOF 
;

// Rule AUnaryOP
ruleAUnaryOP 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAUnaryOPAccess().getAlternatives()); }
		(rule__AUnaryOP__Alternatives)
		{ after(grammarAccess.getAUnaryOPAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePolyhedralObject
entryRulePolyhedralObject
:
{ before(grammarAccess.getPolyhedralObjectRule()); }
	 rulePolyhedralObject
{ after(grammarAccess.getPolyhedralObjectRule()); } 
	 EOF 
;

// Rule PolyhedralObject
rulePolyhedralObject 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPolyhedralObjectAccess().getGroup()); }
		(rule__PolyhedralObject__Group__0)
		{ after(grammarAccess.getPolyhedralObjectAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCalculatorExpression
entryRuleCalculatorExpression
:
{ before(grammarAccess.getCalculatorExpressionRule()); }
	 ruleCalculatorExpression
{ after(grammarAccess.getCalculatorExpressionRule()); } 
	 EOF 
;

// Rule CalculatorExpression
ruleCalculatorExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCalculatorExpressionAccess().getGroup()); }
		(rule__CalculatorExpression__Group__0)
		{ after(grammarAccess.getCalculatorExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleUnaryOrTerminalCalculatorExpression
entryRuleUnaryOrTerminalCalculatorExpression
:
{ before(grammarAccess.getUnaryOrTerminalCalculatorExpressionRule()); }
	 ruleUnaryOrTerminalCalculatorExpression
{ after(grammarAccess.getUnaryOrTerminalCalculatorExpressionRule()); } 
	 EOF 
;

// Rule UnaryOrTerminalCalculatorExpression
ruleUnaryOrTerminalCalculatorExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getUnaryOrTerminalCalculatorExpressionAccess().getAlternatives()); }
		(rule__UnaryOrTerminalCalculatorExpression__Alternatives)
		{ after(grammarAccess.getUnaryOrTerminalCalculatorExpressionAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCalculatorExpressionTerminal
entryRuleCalculatorExpressionTerminal
:
{ before(grammarAccess.getCalculatorExpressionTerminalRule()); }
	 ruleCalculatorExpressionTerminal
{ after(grammarAccess.getCalculatorExpressionTerminalRule()); } 
	 EOF 
;

// Rule CalculatorExpressionTerminal
ruleCalculatorExpressionTerminal 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCalculatorExpressionTerminalAccess().getAlternatives()); }
		(rule__CalculatorExpressionTerminal__Alternatives)
		{ after(grammarAccess.getCalculatorExpressionTerminalAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleUnaryCalculatorExpression
entryRuleUnaryCalculatorExpression
:
{ before(grammarAccess.getUnaryCalculatorExpressionRule()); }
	 ruleUnaryCalculatorExpression
{ after(grammarAccess.getUnaryCalculatorExpressionRule()); } 
	 EOF 
;

// Rule UnaryCalculatorExpression
ruleUnaryCalculatorExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getUnaryCalculatorExpressionAccess().getGroup()); }
		(rule__UnaryCalculatorExpression__Group__0)
		{ after(grammarAccess.getUnaryCalculatorExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleVariableDomain
entryRuleVariableDomain
:
{ before(grammarAccess.getVariableDomainRule()); }
	 ruleVariableDomain
{ after(grammarAccess.getVariableDomainRule()); } 
	 EOF 
;

// Rule VariableDomain
ruleVariableDomain 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getVariableDomainAccess().getGroup()); }
		(rule__VariableDomain__Group__0)
		{ after(grammarAccess.getVariableDomainAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleRectangularDomain
entryRuleRectangularDomain
:
{ before(grammarAccess.getRectangularDomainRule()); }
	 ruleRectangularDomain
{ after(grammarAccess.getRectangularDomainRule()); } 
	 EOF 
;

// Rule RectangularDomain
ruleRectangularDomain 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRectangularDomainAccess().getGroup()); }
		(rule__RectangularDomain__Group__0)
		{ after(grammarAccess.getRectangularDomainAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDefinedObject
entryRuleDefinedObject
:
{ before(grammarAccess.getDefinedObjectRule()); }
	 ruleDefinedObject
{ after(grammarAccess.getDefinedObjectRule()); } 
	 EOF 
;

// Rule DefinedObject
ruleDefinedObject 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDefinedObjectAccess().getObjectAssignment()); }
		(rule__DefinedObject__ObjectAssignment)
		{ after(grammarAccess.getDefinedObjectAccess().getObjectAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAUnaryCalcOp
entryRuleAUnaryCalcOp
:
{ before(grammarAccess.getAUnaryCalcOpRule()); }
	 ruleAUnaryCalcOp
{ after(grammarAccess.getAUnaryCalcOpRule()); } 
	 EOF 
;

// Rule AUnaryCalcOp
ruleAUnaryCalcOp 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAUnaryCalcOpAccess().getAlternatives()); }
		(rule__AUnaryCalcOp__Alternatives)
		{ after(grammarAccess.getAUnaryCalcOpAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleABinaryCalcOp
entryRuleABinaryCalcOp
:
{ before(grammarAccess.getABinaryCalcOpRule()); }
	 ruleABinaryCalcOp
{ after(grammarAccess.getABinaryCalcOpRule()); } 
	 EOF 
;

// Rule ABinaryCalcOp
ruleABinaryCalcOp 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getABinaryCalcOpAccess().getAlternatives()); }
		(rule__ABinaryCalcOp__Alternatives)
		{ after(grammarAccess.getABinaryCalcOpAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AlphaRoot__ElementsAlternatives_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAlphaRootAccess().getElementsAlphaConstantParserRuleCall_0_0()); }
		ruleAlphaConstant
		{ after(grammarAccess.getAlphaRootAccess().getElementsAlphaConstantParserRuleCall_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getAlphaRootAccess().getElementsExternalFunctionParserRuleCall_0_1()); }
		ruleExternalFunction
		{ after(grammarAccess.getAlphaRootAccess().getElementsExternalFunctionParserRuleCall_0_1()); }
	)
	|
	(
		{ before(grammarAccess.getAlphaRootAccess().getElementsImportsParserRuleCall_0_2()); }
		ruleImports
		{ after(grammarAccess.getAlphaRootAccess().getElementsImportsParserRuleCall_0_2()); }
	)
	|
	(
		{ before(grammarAccess.getAlphaRootAccess().getElementsAlphaPackageParserRuleCall_0_3()); }
		ruleAlphaPackage
		{ after(grammarAccess.getAlphaRootAccess().getElementsAlphaPackageParserRuleCall_0_3()); }
	)
	|
	(
		{ before(grammarAccess.getAlphaRootAccess().getElementsAlphaSystemParserRuleCall_0_4()); }
		ruleAlphaSystem
		{ after(grammarAccess.getAlphaRootAccess().getElementsAlphaSystemParserRuleCall_0_4()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AlphaPackage__ElementsAlternatives_3_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAlphaPackageAccess().getElementsAlphaConstantParserRuleCall_3_0_0()); }
		ruleAlphaConstant
		{ after(grammarAccess.getAlphaPackageAccess().getElementsAlphaConstantParserRuleCall_3_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getAlphaPackageAccess().getElementsExternalFunctionParserRuleCall_3_0_1()); }
		ruleExternalFunction
		{ after(grammarAccess.getAlphaPackageAccess().getElementsExternalFunctionParserRuleCall_3_0_1()); }
	)
	|
	(
		{ before(grammarAccess.getAlphaPackageAccess().getElementsAlphaPackageParserRuleCall_3_0_2()); }
		ruleAlphaPackage
		{ after(grammarAccess.getAlphaPackageAccess().getElementsAlphaPackageParserRuleCall_3_0_2()); }
	)
	|
	(
		{ before(grammarAccess.getAlphaPackageAccess().getElementsAlphaSystemParserRuleCall_3_0_3()); }
		ruleAlphaSystem
		{ after(grammarAccess.getAlphaPackageAccess().getElementsAlphaSystemParserRuleCall_3_0_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AISLString__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAISLStringAccess().getIndexNameParserRuleCall_0()); }
		ruleIndexName
		{ after(grammarAccess.getAISLStringAccess().getIndexNameParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getAISLStringAccess().getINTTerminalRuleCall_1()); }
		RULE_INT
		{ after(grammarAccess.getAISLStringAccess().getINTTerminalRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getAISLStringAccess().getPlusSignKeyword_2()); }
		'+'
		{ after(grammarAccess.getAISLStringAccess().getPlusSignKeyword_2()); }
	)
	|
	(
		{ before(grammarAccess.getAISLStringAccess().getHyphenMinusKeyword_3()); }
		'-'
		{ after(grammarAccess.getAISLStringAccess().getHyphenMinusKeyword_3()); }
	)
	|
	(
		{ before(grammarAccess.getAISLStringAccess().getAsteriskKeyword_4()); }
		'*'
		{ after(grammarAccess.getAISLStringAccess().getAsteriskKeyword_4()); }
	)
	|
	(
		{ before(grammarAccess.getAISLStringAccess().getSolidusKeyword_5()); }
		'/'
		{ after(grammarAccess.getAISLStringAccess().getSolidusKeyword_5()); }
	)
	|
	(
		{ before(grammarAccess.getAISLStringAccess().getPercentSignKeyword_6()); }
		'%'
		{ after(grammarAccess.getAISLStringAccess().getPercentSignKeyword_6()); }
	)
	|
	(
		{ before(grammarAccess.getAISLStringAccess().getAndKeyword_7()); }
		'and'
		{ after(grammarAccess.getAISLStringAccess().getAndKeyword_7()); }
	)
	|
	(
		{ before(grammarAccess.getAISLStringAccess().getOrKeyword_8()); }
		'or'
		{ after(grammarAccess.getAISLStringAccess().getOrKeyword_8()); }
	)
	|
	(
		{ before(grammarAccess.getAISLStringAccess().getLeftSquareBracketKeyword_9()); }
		'['
		{ after(grammarAccess.getAISLStringAccess().getLeftSquareBracketKeyword_9()); }
	)
	|
	(
		{ before(grammarAccess.getAISLStringAccess().getRightSquareBracketKeyword_10()); }
		']'
		{ after(grammarAccess.getAISLStringAccess().getRightSquareBracketKeyword_10()); }
	)
	|
	(
		{ before(grammarAccess.getAISLStringAccess().getLeftParenthesisKeyword_11()); }
		'('
		{ after(grammarAccess.getAISLStringAccess().getLeftParenthesisKeyword_11()); }
	)
	|
	(
		{ before(grammarAccess.getAISLStringAccess().getRightParenthesisKeyword_12()); }
		')'
		{ after(grammarAccess.getAISLStringAccess().getRightParenthesisKeyword_12()); }
	)
	|
	(
		{ before(grammarAccess.getAISLStringAccess().getCommaKeyword_13()); }
		','
		{ after(grammarAccess.getAISLStringAccess().getCommaKeyword_13()); }
	)
	|
	(
		{ before(grammarAccess.getAISLStringAccess().getColonKeyword_14()); }
		':'
		{ after(grammarAccess.getAISLStringAccess().getColonKeyword_14()); }
	)
	|
	(
		{ before(grammarAccess.getAISLStringAccess().getAmpersandKeyword_15()); }
		'&'
		{ after(grammarAccess.getAISLStringAccess().getAmpersandKeyword_15()); }
	)
	|
	(
		{ before(grammarAccess.getAISLStringAccess().getVerticalLineKeyword_16()); }
		'|'
		{ after(grammarAccess.getAISLStringAccess().getVerticalLineKeyword_16()); }
	)
	|
	(
		{ before(grammarAccess.getAISLStringAccess().getWSTerminalRuleCall_17()); }
		RULE_WS
		{ after(grammarAccess.getAISLStringAccess().getWSTerminalRuleCall_17()); }
	)
	|
	(
		{ before(grammarAccess.getAISLStringAccess().getGreaterThanSignEqualsSignKeyword_18()); }
		'>='
		{ after(grammarAccess.getAISLStringAccess().getGreaterThanSignEqualsSignKeyword_18()); }
	)
	|
	(
		{ before(grammarAccess.getAISLStringAccess().getGreaterThanSignKeyword_19()); }
		'>'
		{ after(grammarAccess.getAISLStringAccess().getGreaterThanSignKeyword_19()); }
	)
	|
	(
		{ before(grammarAccess.getAISLStringAccess().getEqualsSignKeyword_20()); }
		'='
		{ after(grammarAccess.getAISLStringAccess().getEqualsSignKeyword_20()); }
	)
	|
	(
		{ before(grammarAccess.getAISLStringAccess().getLessThanSignKeyword_21()); }
		'<'
		{ after(grammarAccess.getAISLStringAccess().getLessThanSignKeyword_21()); }
	)
	|
	(
		{ before(grammarAccess.getAISLStringAccess().getLessThanSignEqualsSignKeyword_22()); }
		'<='
		{ after(grammarAccess.getAISLStringAccess().getLessThanSignEqualsSignKeyword_22()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AISLExpression__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAISLExpressionAccess().getIndexNameParserRuleCall_0()); }
		ruleIndexName
		{ after(grammarAccess.getAISLExpressionAccess().getIndexNameParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getAISLExpressionAccess().getINTTerminalRuleCall_1()); }
		RULE_INT
		{ after(grammarAccess.getAISLExpressionAccess().getINTTerminalRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getAISLExpressionAccess().getPlusSignKeyword_2()); }
		'+'
		{ after(grammarAccess.getAISLExpressionAccess().getPlusSignKeyword_2()); }
	)
	|
	(
		{ before(grammarAccess.getAISLExpressionAccess().getHyphenMinusKeyword_3()); }
		'-'
		{ after(grammarAccess.getAISLExpressionAccess().getHyphenMinusKeyword_3()); }
	)
	|
	(
		{ before(grammarAccess.getAISLExpressionAccess().getAsteriskKeyword_4()); }
		'*'
		{ after(grammarAccess.getAISLExpressionAccess().getAsteriskKeyword_4()); }
	)
	|
	(
		{ before(grammarAccess.getAISLExpressionAccess().getSolidusKeyword_5()); }
		'/'
		{ after(grammarAccess.getAISLExpressionAccess().getSolidusKeyword_5()); }
	)
	|
	(
		{ before(grammarAccess.getAISLExpressionAccess().getPercentSignKeyword_6()); }
		'%'
		{ after(grammarAccess.getAISLExpressionAccess().getPercentSignKeyword_6()); }
	)
	|
	(
		{ before(grammarAccess.getAISLExpressionAccess().getWSTerminalRuleCall_7()); }
		RULE_WS
		{ after(grammarAccess.getAISLExpressionAccess().getWSTerminalRuleCall_7()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AlphaExpression__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAlphaExpressionAccess().getIfExpressionParserRuleCall_0()); }
		ruleIfExpression
		{ after(grammarAccess.getAlphaExpressionAccess().getIfExpressionParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getAlphaExpressionAccess().getRestrictExpressionParserRuleCall_1()); }
		ruleRestrictExpression
		{ after(grammarAccess.getAlphaExpressionAccess().getRestrictExpressionParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getAlphaExpressionAccess().getAutoRestrictExpressionParserRuleCall_2()); }
		ruleAutoRestrictExpression
		{ after(grammarAccess.getAlphaExpressionAccess().getAutoRestrictExpressionParserRuleCall_2()); }
	)
	|
	(
		{ before(grammarAccess.getAlphaExpressionAccess().getOrExpressionParserRuleCall_3()); }
		ruleOrExpression
		{ after(grammarAccess.getAlphaExpressionAccess().getOrExpressionParserRuleCall_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AlphaTerminalExpression__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAlphaTerminalExpressionAccess().getGroup_0()); }
		(rule__AlphaTerminalExpression__Group_0__0)
		{ after(grammarAccess.getAlphaTerminalExpressionAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getAlphaTerminalExpressionAccess().getCaseExpressionParserRuleCall_1()); }
		ruleCaseExpression
		{ after(grammarAccess.getAlphaTerminalExpressionAccess().getCaseExpressionParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getAlphaTerminalExpressionAccess().getConstantExpressionParserRuleCall_2()); }
		ruleConstantExpression
		{ after(grammarAccess.getAlphaTerminalExpressionAccess().getConstantExpressionParserRuleCall_2()); }
	)
	|
	(
		{ before(grammarAccess.getAlphaTerminalExpressionAccess().getVariableExpressionParserRuleCall_3()); }
		ruleVariableExpression
		{ after(grammarAccess.getAlphaTerminalExpressionAccess().getVariableExpressionParserRuleCall_3()); }
	)
	|
	(
		{ before(grammarAccess.getAlphaTerminalExpressionAccess().getDependenceExpressionParserRuleCall_4()); }
		ruleDependenceExpression
		{ after(grammarAccess.getAlphaTerminalExpressionAccess().getDependenceExpressionParserRuleCall_4()); }
	)
	|
	(
		{ before(grammarAccess.getAlphaTerminalExpressionAccess().getIndexExpressionParserRuleCall_5()); }
		ruleIndexExpression
		{ after(grammarAccess.getAlphaTerminalExpressionAccess().getIndexExpressionParserRuleCall_5()); }
	)
	|
	(
		{ before(grammarAccess.getAlphaTerminalExpressionAccess().getReduceExpressionParserRuleCall_6()); }
		ruleReduceExpression
		{ after(grammarAccess.getAlphaTerminalExpressionAccess().getReduceExpressionParserRuleCall_6()); }
	)
	|
	(
		{ before(grammarAccess.getAlphaTerminalExpressionAccess().getArgReduceExpressionParserRuleCall_7()); }
		ruleArgReduceExpression
		{ after(grammarAccess.getAlphaTerminalExpressionAccess().getArgReduceExpressionParserRuleCall_7()); }
	)
	|
	(
		{ before(grammarAccess.getAlphaTerminalExpressionAccess().getConvolutionExpressionParserRuleCall_8()); }
		ruleConvolutionExpression
		{ after(grammarAccess.getAlphaTerminalExpressionAccess().getConvolutionExpressionParserRuleCall_8()); }
	)
	|
	(
		{ before(grammarAccess.getAlphaTerminalExpressionAccess().getExternalReduceExpressionParserRuleCall_9()); }
		ruleExternalReduceExpression
		{ after(grammarAccess.getAlphaTerminalExpressionAccess().getExternalReduceExpressionParserRuleCall_9()); }
	)
	|
	(
		{ before(grammarAccess.getAlphaTerminalExpressionAccess().getExternalArgReduceExpressionParserRuleCall_10()); }
		ruleExternalArgReduceExpression
		{ after(grammarAccess.getAlphaTerminalExpressionAccess().getExternalArgReduceExpressionParserRuleCall_10()); }
	)
	|
	(
		{ before(grammarAccess.getAlphaTerminalExpressionAccess().getMultiArgExpressionParserRuleCall_11()); }
		ruleMultiArgExpression
		{ after(grammarAccess.getAlphaTerminalExpressionAccess().getMultiArgExpressionParserRuleCall_11()); }
	)
	|
	(
		{ before(grammarAccess.getAlphaTerminalExpressionAccess().getExternalMultiArgExpressionParserRuleCall_12()); }
		ruleExternalMultiArgExpression
		{ after(grammarAccess.getAlphaTerminalExpressionAccess().getExternalMultiArgExpressionParserRuleCall_12()); }
	)
	|
	(
		{ before(grammarAccess.getAlphaTerminalExpressionAccess().getSelectExpressionParserRuleCall_13()); }
		ruleSelectExpression
		{ after(grammarAccess.getAlphaTerminalExpressionAccess().getSelectExpressionParserRuleCall_13()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RestrictExpression__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRestrictExpressionAccess().getGroup_0()); }
		(rule__RestrictExpression__Group_0__0)
		{ after(grammarAccess.getRestrictExpressionAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getRestrictExpressionAccess().getGroup_1()); }
		(rule__RestrictExpression__Group_1__0)
		{ after(grammarAccess.getRestrictExpressionAccess().getGroup_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RestrictExpression__DomainExprAlternatives_0_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRestrictExpressionAccess().getDomainExprJNIDomainParserRuleCall_0_0_0_0()); }
		ruleJNIDomain
		{ after(grammarAccess.getRestrictExpressionAccess().getDomainExprJNIDomainParserRuleCall_0_0_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getRestrictExpressionAccess().getDomainExprJNIDomainInArrayNotationParserRuleCall_0_0_0_1()); }
		ruleJNIDomainInArrayNotation
		{ after(grammarAccess.getRestrictExpressionAccess().getDomainExprJNIDomainInArrayNotationParserRuleCall_0_0_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DependenceExpression__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDependenceExpressionAccess().getGroup_0()); }
		(rule__DependenceExpression__Group_0__0)
		{ after(grammarAccess.getDependenceExpressionAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getDependenceExpressionAccess().getGroup_1()); }
		(rule__DependenceExpression__Group_1__0)
		{ after(grammarAccess.getDependenceExpressionAccess().getGroup_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IndexExpression__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIndexExpressionAccess().getGroup_0()); }
		(rule__IndexExpression__Group_0__0)
		{ after(grammarAccess.getIndexExpressionAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getIndexExpressionAccess().getFunctionExprAssignment_1()); }
		(rule__IndexExpression__FunctionExprAssignment_1)
		{ after(grammarAccess.getIndexExpressionAccess().getFunctionExprAssignment_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ReduceExpression__ProjectionExprAlternatives_4_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getReduceExpressionAccess().getProjectionExprJNIFunctionParserRuleCall_4_0_0()); }
		ruleJNIFunction
		{ after(grammarAccess.getReduceExpressionAccess().getProjectionExprJNIFunctionParserRuleCall_4_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getReduceExpressionAccess().getProjectionExprJNIFunctionInArrayNotationParserRuleCall_4_0_1()); }
		ruleJNIFunctionInArrayNotation
		{ after(grammarAccess.getReduceExpressionAccess().getProjectionExprJNIFunctionInArrayNotationParserRuleCall_4_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExternalReduceExpression__ProjectionExprAlternatives_4_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExternalReduceExpressionAccess().getProjectionExprJNIFunctionParserRuleCall_4_0_0()); }
		ruleJNIFunction
		{ after(grammarAccess.getExternalReduceExpressionAccess().getProjectionExprJNIFunctionParserRuleCall_4_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getExternalReduceExpressionAccess().getProjectionExprJNIFunctionInArrayNotationParserRuleCall_4_0_1()); }
		ruleJNIFunctionInArrayNotation
		{ after(grammarAccess.getExternalReduceExpressionAccess().getProjectionExprJNIFunctionInArrayNotationParserRuleCall_4_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArgReduceExpression__ProjectionExprAlternatives_4_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getArgReduceExpressionAccess().getProjectionExprJNIFunctionParserRuleCall_4_0_0()); }
		ruleJNIFunction
		{ after(grammarAccess.getArgReduceExpressionAccess().getProjectionExprJNIFunctionParserRuleCall_4_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getArgReduceExpressionAccess().getProjectionExprJNIFunctionInArrayNotationParserRuleCall_4_0_1()); }
		ruleJNIFunctionInArrayNotation
		{ after(grammarAccess.getArgReduceExpressionAccess().getProjectionExprJNIFunctionInArrayNotationParserRuleCall_4_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExternalArgReduceExpression__ProjectionExprAlternatives_4_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExternalArgReduceExpressionAccess().getProjectionExprJNIFunctionParserRuleCall_4_0_0()); }
		ruleJNIFunction
		{ after(grammarAccess.getExternalArgReduceExpressionAccess().getProjectionExprJNIFunctionParserRuleCall_4_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getExternalArgReduceExpressionAccess().getProjectionExprJNIFunctionInArrayNotationParserRuleCall_4_0_1()); }
		ruleJNIFunctionInArrayNotation
		{ after(grammarAccess.getExternalArgReduceExpressionAccess().getProjectionExprJNIFunctionInArrayNotationParserRuleCall_4_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryOrTerminalExpression__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUnaryOrTerminalExpressionAccess().getUnaryExpressionParserRuleCall_0()); }
		ruleUnaryExpression
		{ after(grammarAccess.getUnaryOrTerminalExpressionAccess().getUnaryExpressionParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getUnaryOrTerminalExpressionAccess().getAlphaTerminalExpressionParserRuleCall_1()); }
		ruleAlphaTerminalExpression
		{ after(grammarAccess.getUnaryOrTerminalExpressionAccess().getAlphaTerminalExpressionParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstantExpression__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConstantExpressionAccess().getBooleanExpressionParserRuleCall_0()); }
		ruleBooleanExpression
		{ after(grammarAccess.getConstantExpressionAccess().getBooleanExpressionParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getConstantExpressionAccess().getRealExpressionParserRuleCall_1()); }
		ruleRealExpression
		{ after(grammarAccess.getConstantExpressionAccess().getRealExpressionParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getConstantExpressionAccess().getIntegerExpressionParserRuleCall_2()); }
		ruleIntegerExpression
		{ after(grammarAccess.getConstantExpressionAccess().getIntegerExpressionParserRuleCall_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AREDUCTION_OP__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAREDUCTION_OPAccess().getMinKeyword_0()); }
		'min'
		{ after(grammarAccess.getAREDUCTION_OPAccess().getMinKeyword_0()); }
	)
	|
	(
		{ before(grammarAccess.getAREDUCTION_OPAccess().getMaxKeyword_1()); }
		'max'
		{ after(grammarAccess.getAREDUCTION_OPAccess().getMaxKeyword_1()); }
	)
	|
	(
		{ before(grammarAccess.getAREDUCTION_OPAccess().getProdKeyword_2()); }
		'prod'
		{ after(grammarAccess.getAREDUCTION_OPAccess().getProdKeyword_2()); }
	)
	|
	(
		{ before(grammarAccess.getAREDUCTION_OPAccess().getSumKeyword_3()); }
		'sum'
		{ after(grammarAccess.getAREDUCTION_OPAccess().getSumKeyword_3()); }
	)
	|
	(
		{ before(grammarAccess.getAREDUCTION_OPAccess().getAndKeyword_4()); }
		'and'
		{ after(grammarAccess.getAREDUCTION_OPAccess().getAndKeyword_4()); }
	)
	|
	(
		{ before(grammarAccess.getAREDUCTION_OPAccess().getOrKeyword_5()); }
		'or'
		{ after(grammarAccess.getAREDUCTION_OPAccess().getOrKeyword_5()); }
	)
	|
	(
		{ before(grammarAccess.getAREDUCTION_OPAccess().getXorKeyword_6()); }
		'xor'
		{ after(grammarAccess.getAREDUCTION_OPAccess().getXorKeyword_6()); }
	)
	|
	(
		{ before(grammarAccess.getAREDUCTION_OPAccess().getPlusSignKeyword_7()); }
		'+'
		{ after(grammarAccess.getAREDUCTION_OPAccess().getPlusSignKeyword_7()); }
	)
	|
	(
		{ before(grammarAccess.getAREDUCTION_OPAccess().getAsteriskKeyword_8()); }
		'*'
		{ after(grammarAccess.getAREDUCTION_OPAccess().getAsteriskKeyword_8()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AOrOP__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAOrOPAccess().getOrKeyword_0()); }
		'or'
		{ after(grammarAccess.getAOrOPAccess().getOrKeyword_0()); }
	)
	|
	(
		{ before(grammarAccess.getAOrOPAccess().getXorKeyword_1()); }
		'xor'
		{ after(grammarAccess.getAOrOPAccess().getXorKeyword_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ARelationalOP__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getARelationalOPAccess().getEqualsSignKeyword_0()); }
		'='
		{ after(grammarAccess.getARelationalOPAccess().getEqualsSignKeyword_0()); }
	)
	|
	(
		{ before(grammarAccess.getARelationalOPAccess().getExclamationMarkEqualsSignKeyword_1()); }
		'!='
		{ after(grammarAccess.getARelationalOPAccess().getExclamationMarkEqualsSignKeyword_1()); }
	)
	|
	(
		{ before(grammarAccess.getARelationalOPAccess().getGreaterThanSignEqualsSignKeyword_2()); }
		'>='
		{ after(grammarAccess.getARelationalOPAccess().getGreaterThanSignEqualsSignKeyword_2()); }
	)
	|
	(
		{ before(grammarAccess.getARelationalOPAccess().getGreaterThanSignKeyword_3()); }
		'>'
		{ after(grammarAccess.getARelationalOPAccess().getGreaterThanSignKeyword_3()); }
	)
	|
	(
		{ before(grammarAccess.getARelationalOPAccess().getLessThanSignKeyword_4()); }
		'<'
		{ after(grammarAccess.getARelationalOPAccess().getLessThanSignKeyword_4()); }
	)
	|
	(
		{ before(grammarAccess.getARelationalOPAccess().getLessThanSignEqualsSignKeyword_5()); }
		'<='
		{ after(grammarAccess.getARelationalOPAccess().getLessThanSignEqualsSignKeyword_5()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AAdditiveOP__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAAdditiveOPAccess().getPlusSignKeyword_0()); }
		'+'
		{ after(grammarAccess.getAAdditiveOPAccess().getPlusSignKeyword_0()); }
	)
	|
	(
		{ before(grammarAccess.getAAdditiveOPAccess().getHyphenMinusKeyword_1()); }
		'-'
		{ after(grammarAccess.getAAdditiveOPAccess().getHyphenMinusKeyword_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AMultiplicativeOP__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAMultiplicativeOPAccess().getAsteriskKeyword_0()); }
		'*'
		{ after(grammarAccess.getAMultiplicativeOPAccess().getAsteriskKeyword_0()); }
	)
	|
	(
		{ before(grammarAccess.getAMultiplicativeOPAccess().getSolidusKeyword_1()); }
		'/'
		{ after(grammarAccess.getAMultiplicativeOPAccess().getSolidusKeyword_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AMINMAX_OP__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAMINMAX_OPAccess().getMinKeyword_0()); }
		'min'
		{ after(grammarAccess.getAMINMAX_OPAccess().getMinKeyword_0()); }
	)
	|
	(
		{ before(grammarAccess.getAMINMAX_OPAccess().getMaxKeyword_1()); }
		'max'
		{ after(grammarAccess.getAMINMAX_OPAccess().getMaxKeyword_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AUnaryOP__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAUnaryOPAccess().getNotKeyword_0()); }
		'not'
		{ after(grammarAccess.getAUnaryOPAccess().getNotKeyword_0()); }
	)
	|
	(
		{ before(grammarAccess.getAUnaryOPAccess().getHyphenMinusKeyword_1()); }
		'-'
		{ after(grammarAccess.getAUnaryOPAccess().getHyphenMinusKeyword_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryOrTerminalCalculatorExpression__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUnaryOrTerminalCalculatorExpressionAccess().getUnaryCalculatorExpressionParserRuleCall_0()); }
		ruleUnaryCalculatorExpression
		{ after(grammarAccess.getUnaryOrTerminalCalculatorExpressionAccess().getUnaryCalculatorExpressionParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getUnaryOrTerminalCalculatorExpressionAccess().getCalculatorExpressionTerminalParserRuleCall_1()); }
		ruleCalculatorExpressionTerminal
		{ after(grammarAccess.getUnaryOrTerminalCalculatorExpressionAccess().getCalculatorExpressionTerminalParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CalculatorExpressionTerminal__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCalculatorExpressionTerminalAccess().getJNIDomainParserRuleCall_0()); }
		ruleJNIDomain
		{ after(grammarAccess.getCalculatorExpressionTerminalAccess().getJNIDomainParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getCalculatorExpressionTerminalAccess().getJNIRelationParserRuleCall_1()); }
		ruleJNIRelation
		{ after(grammarAccess.getCalculatorExpressionTerminalAccess().getJNIRelationParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getCalculatorExpressionTerminalAccess().getJNIFunctionParserRuleCall_2()); }
		ruleJNIFunction
		{ after(grammarAccess.getCalculatorExpressionTerminalAccess().getJNIFunctionParserRuleCall_2()); }
	)
	|
	(
		{ before(grammarAccess.getCalculatorExpressionTerminalAccess().getDefinedObjectParserRuleCall_3()); }
		ruleDefinedObject
		{ after(grammarAccess.getCalculatorExpressionTerminalAccess().getDefinedObjectParserRuleCall_3()); }
	)
	|
	(
		{ before(grammarAccess.getCalculatorExpressionTerminalAccess().getRectangularDomainParserRuleCall_4()); }
		ruleRectangularDomain
		{ after(grammarAccess.getCalculatorExpressionTerminalAccess().getRectangularDomainParserRuleCall_4()); }
	)
	|
	(
		{ before(grammarAccess.getCalculatorExpressionTerminalAccess().getVariableDomainParserRuleCall_5()); }
		ruleVariableDomain
		{ after(grammarAccess.getCalculatorExpressionTerminalAccess().getVariableDomainParserRuleCall_5()); }
	)
	|
	(
		{ before(grammarAccess.getCalculatorExpressionTerminalAccess().getGroup_6()); }
		(rule__CalculatorExpressionTerminal__Group_6__0)
		{ after(grammarAccess.getCalculatorExpressionTerminalAccess().getGroup_6()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AUnaryCalcOp__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAUnaryCalcOpAccess().getDomainKeyword_0()); }
		'domain'
		{ after(grammarAccess.getAUnaryCalcOpAccess().getDomainKeyword_0()); }
	)
	|
	(
		{ before(grammarAccess.getAUnaryCalcOpAccess().getRangeKeyword_1()); }
		'range'
		{ after(grammarAccess.getAUnaryCalcOpAccess().getRangeKeyword_1()); }
	)
	|
	(
		{ before(grammarAccess.getAUnaryCalcOpAccess().getComplementKeyword_2()); }
		'complement'
		{ after(grammarAccess.getAUnaryCalcOpAccess().getComplementKeyword_2()); }
	)
	|
	(
		{ before(grammarAccess.getAUnaryCalcOpAccess().getAffineHullKeyword_3()); }
		'affine-hull'
		{ after(grammarAccess.getAUnaryCalcOpAccess().getAffineHullKeyword_3()); }
	)
	|
	(
		{ before(grammarAccess.getAUnaryCalcOpAccess().getPolyHullKeyword_4()); }
		'poly-hull'
		{ after(grammarAccess.getAUnaryCalcOpAccess().getPolyHullKeyword_4()); }
	)
	|
	(
		{ before(grammarAccess.getAUnaryCalcOpAccess().getReverseKeyword_5()); }
		'reverse'
		{ after(grammarAccess.getAUnaryCalcOpAccess().getReverseKeyword_5()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ABinaryCalcOp__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getABinaryCalcOpAccess().getCrossKeyword_0()); }
		'cross'
		{ after(grammarAccess.getABinaryCalcOpAccess().getCrossKeyword_0()); }
	)
	|
	(
		{ before(grammarAccess.getABinaryCalcOpAccess().getPlusSignKeyword_1()); }
		'+'
		{ after(grammarAccess.getABinaryCalcOpAccess().getPlusSignKeyword_1()); }
	)
	|
	(
		{ before(grammarAccess.getABinaryCalcOpAccess().getHyphenMinusKeyword_2()); }
		'-'
		{ after(grammarAccess.getABinaryCalcOpAccess().getHyphenMinusKeyword_2()); }
	)
	|
	(
		{ before(grammarAccess.getABinaryCalcOpAccess().getAsteriskKeyword_3()); }
		'*'
		{ after(grammarAccess.getABinaryCalcOpAccess().getAsteriskKeyword_3()); }
	)
	|
	(
		{ before(grammarAccess.getABinaryCalcOpAccess().getCommercialAtKeyword_4()); }
		'@'
		{ after(grammarAccess.getABinaryCalcOpAccess().getCommercialAtKeyword_4()); }
	)
	|
	(
		{ before(grammarAccess.getABinaryCalcOpAccess().getHyphenMinusGreaterThanSignHyphenMinusKeyword_5()); }
		'->-'
		{ after(grammarAccess.getABinaryCalcOpAccess().getHyphenMinusGreaterThanSignHyphenMinusKeyword_5()); }
	)
	|
	(
		{ before(grammarAccess.getABinaryCalcOpAccess().getHyphenMinusGreaterThanSignAsteriskKeyword_6()); }
		'->*'
		{ after(grammarAccess.getABinaryCalcOpAccess().getHyphenMinusGreaterThanSignAsteriskKeyword_6()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AlphaConstant__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AlphaConstant__Group__0__Impl
	rule__AlphaConstant__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AlphaConstant__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAlphaConstantAccess().getConstantKeyword_0()); }
	'constant'
	{ after(grammarAccess.getAlphaConstantAccess().getConstantKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AlphaConstant__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AlphaConstant__Group__1__Impl
	rule__AlphaConstant__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AlphaConstant__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAlphaConstantAccess().getNameAssignment_1()); }
	(rule__AlphaConstant__NameAssignment_1)
	{ after(grammarAccess.getAlphaConstantAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AlphaConstant__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AlphaConstant__Group__2__Impl
	rule__AlphaConstant__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__AlphaConstant__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAlphaConstantAccess().getEqualsSignKeyword_2()); }
	'='
	{ after(grammarAccess.getAlphaConstantAccess().getEqualsSignKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AlphaConstant__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AlphaConstant__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AlphaConstant__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAlphaConstantAccess().getValueAssignment_3()); }
	(rule__AlphaConstant__ValueAssignment_3)
	{ after(grammarAccess.getAlphaConstantAccess().getValueAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ExternalFunction__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExternalFunction__Group__0__Impl
	rule__ExternalFunction__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExternalFunction__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExternalFunctionAccess().getExternalKeyword_0()); }
	'external'
	{ after(grammarAccess.getExternalFunctionAccess().getExternalKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExternalFunction__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExternalFunction__Group__1__Impl
	rule__ExternalFunction__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ExternalFunction__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExternalFunctionAccess().getNameAssignment_1()); }
	(rule__ExternalFunction__NameAssignment_1)
	{ after(grammarAccess.getExternalFunctionAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExternalFunction__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExternalFunction__Group__2__Impl
	rule__ExternalFunction__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ExternalFunction__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExternalFunctionAccess().getLeftParenthesisKeyword_2()); }
	'('
	{ after(grammarAccess.getExternalFunctionAccess().getLeftParenthesisKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExternalFunction__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExternalFunction__Group__3__Impl
	rule__ExternalFunction__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ExternalFunction__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExternalFunctionAccess().getCardinalityAssignment_3()); }
	(rule__ExternalFunction__CardinalityAssignment_3)
	{ after(grammarAccess.getExternalFunctionAccess().getCardinalityAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExternalFunction__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExternalFunction__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExternalFunction__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExternalFunctionAccess().getRightParenthesisKeyword_4()); }
	')'
	{ after(grammarAccess.getExternalFunctionAccess().getRightParenthesisKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Imports__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Imports__Group__0__Impl
	rule__Imports__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Imports__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImportsAccess().getImportKeyword_0()); }
	'import'
	{ after(grammarAccess.getImportsAccess().getImportKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Imports__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Imports__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Imports__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImportsAccess().getImportedNamespaceAssignment_1()); }
	(rule__Imports__ImportedNamespaceAssignment_1)
	{ after(grammarAccess.getImportsAccess().getImportedNamespaceAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AlphaPackage__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AlphaPackage__Group__0__Impl
	rule__AlphaPackage__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AlphaPackage__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAlphaPackageAccess().getPackageKeyword_0()); }
	'package'
	{ after(grammarAccess.getAlphaPackageAccess().getPackageKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AlphaPackage__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AlphaPackage__Group__1__Impl
	rule__AlphaPackage__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AlphaPackage__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAlphaPackageAccess().getNameAssignment_1()); }
	(rule__AlphaPackage__NameAssignment_1)
	{ after(grammarAccess.getAlphaPackageAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AlphaPackage__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AlphaPackage__Group__2__Impl
	rule__AlphaPackage__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__AlphaPackage__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAlphaPackageAccess().getLeftCurlyBracketKeyword_2()); }
	'{'
	{ after(grammarAccess.getAlphaPackageAccess().getLeftCurlyBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AlphaPackage__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AlphaPackage__Group__3__Impl
	rule__AlphaPackage__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__AlphaPackage__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAlphaPackageAccess().getElementsAssignment_3()); }
	(rule__AlphaPackage__ElementsAssignment_3)*
	{ after(grammarAccess.getAlphaPackageAccess().getElementsAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AlphaPackage__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AlphaPackage__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AlphaPackage__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAlphaPackageAccess().getRightCurlyBracketKeyword_4()); }
	'}'
	{ after(grammarAccess.getAlphaPackageAccess().getRightCurlyBracketKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AlphaSystem__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AlphaSystem__Group__0__Impl
	rule__AlphaSystem__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AlphaSystem__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAlphaSystemAccess().getAffineKeyword_0()); }
	'affine'
	{ after(grammarAccess.getAlphaSystemAccess().getAffineKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AlphaSystem__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AlphaSystem__Group__1__Impl
	rule__AlphaSystem__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AlphaSystem__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAlphaSystemAccess().getNameAssignment_1()); }
	(rule__AlphaSystem__NameAssignment_1)
	{ after(grammarAccess.getAlphaSystemAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AlphaSystem__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AlphaSystem__Group__2__Impl
	rule__AlphaSystem__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__AlphaSystem__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAlphaSystemAccess().getParameterDomainExprAssignment_2()); }
	(rule__AlphaSystem__ParameterDomainExprAssignment_2)
	{ after(grammarAccess.getAlphaSystemAccess().getParameterDomainExprAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AlphaSystem__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AlphaSystem__Group__3__Impl
	rule__AlphaSystem__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__AlphaSystem__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAlphaSystemAccess().getGroup_3()); }
	(rule__AlphaSystem__Group_3__0)?
	{ after(grammarAccess.getAlphaSystemAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AlphaSystem__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AlphaSystem__Group__4__Impl
	rule__AlphaSystem__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__AlphaSystem__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAlphaSystemAccess().getGroup_4()); }
	(rule__AlphaSystem__Group_4__0)?
	{ after(grammarAccess.getAlphaSystemAccess().getGroup_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AlphaSystem__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AlphaSystem__Group__5__Impl
	rule__AlphaSystem__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__AlphaSystem__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAlphaSystemAccess().getGroup_5()); }
	(rule__AlphaSystem__Group_5__0)?
	{ after(grammarAccess.getAlphaSystemAccess().getGroup_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AlphaSystem__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AlphaSystem__Group__6__Impl
	rule__AlphaSystem__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__AlphaSystem__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAlphaSystemAccess().getGroup_6()); }
	(rule__AlphaSystem__Group_6__0)?
	{ after(grammarAccess.getAlphaSystemAccess().getGroup_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AlphaSystem__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AlphaSystem__Group__7__Impl
	rule__AlphaSystem__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__AlphaSystem__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAlphaSystemAccess().getGroup_7()); }
	(rule__AlphaSystem__Group_7__0)?
	{ after(grammarAccess.getAlphaSystemAccess().getGroup_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AlphaSystem__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AlphaSystem__Group__8__Impl
	rule__AlphaSystem__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__AlphaSystem__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAlphaSystemAccess().getGroup_8()); }
	(rule__AlphaSystem__Group_8__0)?
	{ after(grammarAccess.getAlphaSystemAccess().getGroup_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AlphaSystem__Group__9
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AlphaSystem__Group__9__Impl
	rule__AlphaSystem__Group__10
;
finally {
	restoreStackSize(stackSize);
}

rule__AlphaSystem__Group__9__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAlphaSystemAccess().getGroup_9()); }
	(rule__AlphaSystem__Group_9__0)?
	{ after(grammarAccess.getAlphaSystemAccess().getGroup_9()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AlphaSystem__Group__10
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AlphaSystem__Group__10__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AlphaSystem__Group__10__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAlphaSystemAccess().getFullStopKeyword_10()); }
	'.'
	{ after(grammarAccess.getAlphaSystemAccess().getFullStopKeyword_10()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AlphaSystem__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AlphaSystem__Group_3__0__Impl
	rule__AlphaSystem__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AlphaSystem__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAlphaSystemAccess().getDefineKeyword_3_0()); }
	'define'
	{ after(grammarAccess.getAlphaSystemAccess().getDefineKeyword_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AlphaSystem__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AlphaSystem__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AlphaSystem__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getAlphaSystemAccess().getDefinedObjectsAssignment_3_1()); }
		(rule__AlphaSystem__DefinedObjectsAssignment_3_1)
		{ after(grammarAccess.getAlphaSystemAccess().getDefinedObjectsAssignment_3_1()); }
	)
	(
		{ before(grammarAccess.getAlphaSystemAccess().getDefinedObjectsAssignment_3_1()); }
		(rule__AlphaSystem__DefinedObjectsAssignment_3_1)*
		{ after(grammarAccess.getAlphaSystemAccess().getDefinedObjectsAssignment_3_1()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AlphaSystem__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AlphaSystem__Group_4__0__Impl
	rule__AlphaSystem__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AlphaSystem__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAlphaSystemAccess().getInputsKeyword_4_0()); }
	'inputs'
	{ after(grammarAccess.getAlphaSystemAccess().getInputsKeyword_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AlphaSystem__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AlphaSystem__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AlphaSystem__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getAlphaSystemAccess().getInputsAssignment_4_1()); }
		(rule__AlphaSystem__InputsAssignment_4_1)
		{ after(grammarAccess.getAlphaSystemAccess().getInputsAssignment_4_1()); }
	)
	(
		{ before(grammarAccess.getAlphaSystemAccess().getInputsAssignment_4_1()); }
		(rule__AlphaSystem__InputsAssignment_4_1)*
		{ after(grammarAccess.getAlphaSystemAccess().getInputsAssignment_4_1()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AlphaSystem__Group_5__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AlphaSystem__Group_5__0__Impl
	rule__AlphaSystem__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AlphaSystem__Group_5__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAlphaSystemAccess().getOutputsKeyword_5_0()); }
	'outputs'
	{ after(grammarAccess.getAlphaSystemAccess().getOutputsKeyword_5_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AlphaSystem__Group_5__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AlphaSystem__Group_5__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AlphaSystem__Group_5__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getAlphaSystemAccess().getOutputsAssignment_5_1()); }
		(rule__AlphaSystem__OutputsAssignment_5_1)
		{ after(grammarAccess.getAlphaSystemAccess().getOutputsAssignment_5_1()); }
	)
	(
		{ before(grammarAccess.getAlphaSystemAccess().getOutputsAssignment_5_1()); }
		(rule__AlphaSystem__OutputsAssignment_5_1)*
		{ after(grammarAccess.getAlphaSystemAccess().getOutputsAssignment_5_1()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AlphaSystem__Group_6__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AlphaSystem__Group_6__0__Impl
	rule__AlphaSystem__Group_6__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AlphaSystem__Group_6__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAlphaSystemAccess().getLocalsKeyword_6_0()); }
	'locals'
	{ after(grammarAccess.getAlphaSystemAccess().getLocalsKeyword_6_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AlphaSystem__Group_6__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AlphaSystem__Group_6__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AlphaSystem__Group_6__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getAlphaSystemAccess().getLocalsAssignment_6_1()); }
		(rule__AlphaSystem__LocalsAssignment_6_1)
		{ after(grammarAccess.getAlphaSystemAccess().getLocalsAssignment_6_1()); }
	)
	(
		{ before(grammarAccess.getAlphaSystemAccess().getLocalsAssignment_6_1()); }
		(rule__AlphaSystem__LocalsAssignment_6_1)*
		{ after(grammarAccess.getAlphaSystemAccess().getLocalsAssignment_6_1()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AlphaSystem__Group_7__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AlphaSystem__Group_7__0__Impl
	rule__AlphaSystem__Group_7__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AlphaSystem__Group_7__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAlphaSystemAccess().getFuzzyKeyword_7_0()); }
	'fuzzy'
	{ after(grammarAccess.getAlphaSystemAccess().getFuzzyKeyword_7_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AlphaSystem__Group_7__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AlphaSystem__Group_7__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AlphaSystem__Group_7__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getAlphaSystemAccess().getFuzzyVariablesAssignment_7_1()); }
		(rule__AlphaSystem__FuzzyVariablesAssignment_7_1)
		{ after(grammarAccess.getAlphaSystemAccess().getFuzzyVariablesAssignment_7_1()); }
	)
	(
		{ before(grammarAccess.getAlphaSystemAccess().getFuzzyVariablesAssignment_7_1()); }
		(rule__AlphaSystem__FuzzyVariablesAssignment_7_1)*
		{ after(grammarAccess.getAlphaSystemAccess().getFuzzyVariablesAssignment_7_1()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AlphaSystem__Group_8__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AlphaSystem__Group_8__0__Impl
	rule__AlphaSystem__Group_8__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AlphaSystem__Group_8__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAlphaSystemAccess().getOverKeyword_8_0()); }
	'over'
	{ after(grammarAccess.getAlphaSystemAccess().getOverKeyword_8_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AlphaSystem__Group_8__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AlphaSystem__Group_8__1__Impl
	rule__AlphaSystem__Group_8__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AlphaSystem__Group_8__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAlphaSystemAccess().getWhileDomainExprAssignment_8_1()); }
	(rule__AlphaSystem__WhileDomainExprAssignment_8_1)
	{ after(grammarAccess.getAlphaSystemAccess().getWhileDomainExprAssignment_8_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AlphaSystem__Group_8__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AlphaSystem__Group_8__2__Impl
	rule__AlphaSystem__Group_8__3
;
finally {
	restoreStackSize(stackSize);
}

rule__AlphaSystem__Group_8__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAlphaSystemAccess().getWhileKeyword_8_2()); }
	'while'
	{ after(grammarAccess.getAlphaSystemAccess().getWhileKeyword_8_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AlphaSystem__Group_8__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AlphaSystem__Group_8__3__Impl
	rule__AlphaSystem__Group_8__4
;
finally {
	restoreStackSize(stackSize);
}

rule__AlphaSystem__Group_8__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAlphaSystemAccess().getLeftParenthesisKeyword_8_3()); }
	'('
	{ after(grammarAccess.getAlphaSystemAccess().getLeftParenthesisKeyword_8_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AlphaSystem__Group_8__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AlphaSystem__Group_8__4__Impl
	rule__AlphaSystem__Group_8__5
;
finally {
	restoreStackSize(stackSize);
}

rule__AlphaSystem__Group_8__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAlphaSystemAccess().getTestExpressionAssignment_8_4()); }
	(rule__AlphaSystem__TestExpressionAssignment_8_4)
	{ after(grammarAccess.getAlphaSystemAccess().getTestExpressionAssignment_8_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AlphaSystem__Group_8__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AlphaSystem__Group_8__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AlphaSystem__Group_8__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAlphaSystemAccess().getRightParenthesisKeyword_8_5()); }
	')'
	{ after(grammarAccess.getAlphaSystemAccess().getRightParenthesisKeyword_8_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AlphaSystem__Group_9__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AlphaSystem__Group_9__0__Impl
	rule__AlphaSystem__Group_9__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AlphaSystem__Group_9__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAlphaSystemAccess().getLetKeyword_9_0()); }
	'let'
	{ after(grammarAccess.getAlphaSystemAccess().getLetKeyword_9_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AlphaSystem__Group_9__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AlphaSystem__Group_9__1__Impl
	rule__AlphaSystem__Group_9__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AlphaSystem__Group_9__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAlphaSystemAccess().getUseEquationsAssignment_9_1()); }
	(rule__AlphaSystem__UseEquationsAssignment_9_1)*
	{ after(grammarAccess.getAlphaSystemAccess().getUseEquationsAssignment_9_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AlphaSystem__Group_9__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AlphaSystem__Group_9__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AlphaSystem__Group_9__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAlphaSystemAccess().getEquationsAssignment_9_2()); }
	(rule__AlphaSystem__EquationsAssignment_9_2)*
	{ after(grammarAccess.getAlphaSystemAccess().getEquationsAssignment_9_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__InputVariable__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InputVariable__Group__0__Impl
	rule__InputVariable__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__InputVariable__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInputVariableAccess().getNameAssignment_0()); }
	(rule__InputVariable__NameAssignment_0)
	{ after(grammarAccess.getInputVariableAccess().getNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__InputVariable__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InputVariable__Group__1__Impl
	rule__InputVariable__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__InputVariable__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInputVariableAccess().getColonKeyword_1()); }
	':'
	{ after(grammarAccess.getInputVariableAccess().getColonKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__InputVariable__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InputVariable__Group__2__Impl
	rule__InputVariable__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__InputVariable__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInputVariableAccess().getDomainExprAssignment_2()); }
	(rule__InputVariable__DomainExprAssignment_2)?
	{ after(grammarAccess.getInputVariableAccess().getDomainExprAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__InputVariable__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InputVariable__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__InputVariable__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInputVariableAccess().getSemicolonKeyword_3()); }
	(';')?
	{ after(grammarAccess.getInputVariableAccess().getSemicolonKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__OutputVariable__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OutputVariable__Group__0__Impl
	rule__OutputVariable__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OutputVariable__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOutputVariableAccess().getNameAssignment_0()); }
	(rule__OutputVariable__NameAssignment_0)
	{ after(grammarAccess.getOutputVariableAccess().getNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OutputVariable__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OutputVariable__Group__1__Impl
	rule__OutputVariable__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__OutputVariable__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOutputVariableAccess().getColonKeyword_1()); }
	':'
	{ after(grammarAccess.getOutputVariableAccess().getColonKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OutputVariable__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OutputVariable__Group__2__Impl
	rule__OutputVariable__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__OutputVariable__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOutputVariableAccess().getDomainExprAssignment_2()); }
	(rule__OutputVariable__DomainExprAssignment_2)?
	{ after(grammarAccess.getOutputVariableAccess().getDomainExprAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OutputVariable__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OutputVariable__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OutputVariable__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOutputVariableAccess().getSemicolonKeyword_3()); }
	(';')?
	{ after(grammarAccess.getOutputVariableAccess().getSemicolonKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__LocalVariable__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LocalVariable__Group__0__Impl
	rule__LocalVariable__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LocalVariable__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLocalVariableAccess().getNameAssignment_0()); }
	(rule__LocalVariable__NameAssignment_0)
	{ after(grammarAccess.getLocalVariableAccess().getNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LocalVariable__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LocalVariable__Group__1__Impl
	rule__LocalVariable__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__LocalVariable__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLocalVariableAccess().getColonKeyword_1()); }
	':'
	{ after(grammarAccess.getLocalVariableAccess().getColonKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LocalVariable__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LocalVariable__Group__2__Impl
	rule__LocalVariable__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__LocalVariable__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLocalVariableAccess().getDomainExprAssignment_2()); }
	(rule__LocalVariable__DomainExprAssignment_2)?
	{ after(grammarAccess.getLocalVariableAccess().getDomainExprAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LocalVariable__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LocalVariable__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LocalVariable__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLocalVariableAccess().getSemicolonKeyword_3()); }
	(';')?
	{ after(grammarAccess.getLocalVariableAccess().getSemicolonKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__FuzzyVariable__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FuzzyVariable__Group__0__Impl
	rule__FuzzyVariable__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FuzzyVariable__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFuzzyVariableAccess().getNameAssignment_0()); }
	(rule__FuzzyVariable__NameAssignment_0)
	{ after(grammarAccess.getFuzzyVariableAccess().getNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FuzzyVariable__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FuzzyVariable__Group__1__Impl
	rule__FuzzyVariable__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FuzzyVariable__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFuzzyVariableAccess().getColonKeyword_1()); }
	':'
	{ after(grammarAccess.getFuzzyVariableAccess().getColonKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FuzzyVariable__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FuzzyVariable__Group__2__Impl
	rule__FuzzyVariable__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__FuzzyVariable__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFuzzyVariableAccess().getDomainExprAssignment_2()); }
	(rule__FuzzyVariable__DomainExprAssignment_2)?
	{ after(grammarAccess.getFuzzyVariableAccess().getDomainExprAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FuzzyVariable__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FuzzyVariable__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FuzzyVariable__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFuzzyVariableAccess().getSemicolonKeyword_3()); }
	(';')?
	{ after(grammarAccess.getFuzzyVariableAccess().getSemicolonKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__JNIDomainInArrayNotation__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__JNIDomainInArrayNotation__Group__0__Impl
	rule__JNIDomainInArrayNotation__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__JNIDomainInArrayNotation__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJNIDomainInArrayNotationAccess().getLeftCurlyBracketKeyword_0()); }
	'{'
	{ after(grammarAccess.getJNIDomainInArrayNotationAccess().getLeftCurlyBracketKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__JNIDomainInArrayNotation__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__JNIDomainInArrayNotation__Group__1__Impl
	rule__JNIDomainInArrayNotation__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__JNIDomainInArrayNotation__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJNIDomainInArrayNotationAccess().getColonKeyword_1()); }
	':'
	{ after(grammarAccess.getJNIDomainInArrayNotationAccess().getColonKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__JNIDomainInArrayNotation__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__JNIDomainInArrayNotation__Group__2__Impl
	rule__JNIDomainInArrayNotation__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__JNIDomainInArrayNotation__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJNIDomainInArrayNotationAccess().getIslStringAssignment_2()); }
	(rule__JNIDomainInArrayNotation__IslStringAssignment_2)
	{ after(grammarAccess.getJNIDomainInArrayNotationAccess().getIslStringAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__JNIDomainInArrayNotation__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__JNIDomainInArrayNotation__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__JNIDomainInArrayNotation__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJNIDomainInArrayNotationAccess().getRightCurlyBracketKeyword_3()); }
	'}'
	{ after(grammarAccess.getJNIDomainInArrayNotationAccess().getRightCurlyBracketKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__JNIFunctionInArrayNotation__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__JNIFunctionInArrayNotation__Group__0__Impl
	rule__JNIFunctionInArrayNotation__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__JNIFunctionInArrayNotation__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJNIFunctionInArrayNotationAccess().getLeftSquareBracketKeyword_0()); }
	'['
	{ after(grammarAccess.getJNIFunctionInArrayNotationAccess().getLeftSquareBracketKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__JNIFunctionInArrayNotation__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__JNIFunctionInArrayNotation__Group__1__Impl
	rule__JNIFunctionInArrayNotation__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__JNIFunctionInArrayNotation__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJNIFunctionInArrayNotationAccess().getJNIFunctionInArrayNotationAction_1()); }
	()
	{ after(grammarAccess.getJNIFunctionInArrayNotationAccess().getJNIFunctionInArrayNotationAction_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__JNIFunctionInArrayNotation__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__JNIFunctionInArrayNotation__Group__2__Impl
	rule__JNIFunctionInArrayNotation__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__JNIFunctionInArrayNotation__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJNIFunctionInArrayNotationAccess().getGroup_2()); }
	(rule__JNIFunctionInArrayNotation__Group_2__0)?
	{ after(grammarAccess.getJNIFunctionInArrayNotationAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__JNIFunctionInArrayNotation__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__JNIFunctionInArrayNotation__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__JNIFunctionInArrayNotation__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJNIFunctionInArrayNotationAccess().getRightSquareBracketKeyword_3()); }
	']'
	{ after(grammarAccess.getJNIFunctionInArrayNotationAccess().getRightSquareBracketKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__JNIFunctionInArrayNotation__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__JNIFunctionInArrayNotation__Group_2__0__Impl
	rule__JNIFunctionInArrayNotation__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__JNIFunctionInArrayNotation__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJNIFunctionInArrayNotationAccess().getArrayNotationAssignment_2_0()); }
	(rule__JNIFunctionInArrayNotation__ArrayNotationAssignment_2_0)
	{ after(grammarAccess.getJNIFunctionInArrayNotationAccess().getArrayNotationAssignment_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__JNIFunctionInArrayNotation__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__JNIFunctionInArrayNotation__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__JNIFunctionInArrayNotation__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJNIFunctionInArrayNotationAccess().getGroup_2_1()); }
	(rule__JNIFunctionInArrayNotation__Group_2_1__0)*
	{ after(grammarAccess.getJNIFunctionInArrayNotationAccess().getGroup_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__JNIFunctionInArrayNotation__Group_2_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__JNIFunctionInArrayNotation__Group_2_1__0__Impl
	rule__JNIFunctionInArrayNotation__Group_2_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__JNIFunctionInArrayNotation__Group_2_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJNIFunctionInArrayNotationAccess().getCommaKeyword_2_1_0()); }
	','
	{ after(grammarAccess.getJNIFunctionInArrayNotationAccess().getCommaKeyword_2_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__JNIFunctionInArrayNotation__Group_2_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__JNIFunctionInArrayNotation__Group_2_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__JNIFunctionInArrayNotation__Group_2_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJNIFunctionInArrayNotationAccess().getArrayNotationAssignment_2_1_1()); }
	(rule__JNIFunctionInArrayNotation__ArrayNotationAssignment_2_1_1)
	{ after(grammarAccess.getJNIFunctionInArrayNotationAccess().getArrayNotationAssignment_2_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__QualifiedName__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QualifiedName__Group__0__Impl
	rule__QualifiedName__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_0()); }
	RULE_ID
	{ after(grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QualifiedName__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQualifiedNameAccess().getGroup_1()); }
	(rule__QualifiedName__Group_1__0)*
	{ after(grammarAccess.getQualifiedNameAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__QualifiedName__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QualifiedName__Group_1__0__Impl
	rule__QualifiedName__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQualifiedNameAccess().getFullStopKeyword_1_0()); }
	'.'
	{ after(grammarAccess.getQualifiedNameAccess().getFullStopKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QualifiedName__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_1_1()); }
	RULE_ID
	{ after(grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__QualifiedNameWithWildcard__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QualifiedNameWithWildcard__Group__0__Impl
	rule__QualifiedNameWithWildcard__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedNameWithWildcard__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQualifiedNameWithWildcardAccess().getQualifiedNameParserRuleCall_0()); }
	ruleQualifiedName
	{ after(grammarAccess.getQualifiedNameWithWildcardAccess().getQualifiedNameParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedNameWithWildcard__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QualifiedNameWithWildcard__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedNameWithWildcard__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQualifiedNameWithWildcardAccess().getFullStopAsteriskKeyword_1()); }
	('.*')?
	{ after(grammarAccess.getQualifiedNameWithWildcardAccess().getFullStopAsteriskKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__IndexName__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IndexName__Group__0__Impl
	rule__IndexName__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IndexName__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIndexNameAccess().getIDTerminalRuleCall_0()); }
	RULE_ID
	{ after(grammarAccess.getIndexNameAccess().getIDTerminalRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IndexName__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IndexName__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IndexName__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIndexNameAccess().getApostropheKeyword_1()); }
	('\'')*
	{ after(grammarAccess.getIndexNameAccess().getApostropheKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AIndexList__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AIndexList__Group__0__Impl
	rule__AIndexList__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AIndexList__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAIndexListAccess().getIndexNameParserRuleCall_0()); }
	ruleIndexName
	{ after(grammarAccess.getAIndexListAccess().getIndexNameParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AIndexList__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AIndexList__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AIndexList__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAIndexListAccess().getGroup_1()); }
	(rule__AIndexList__Group_1__0)*
	{ after(grammarAccess.getAIndexListAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AIndexList__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AIndexList__Group_1__0__Impl
	rule__AIndexList__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AIndexList__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAIndexListAccess().getCommaKeyword_1_0()); }
	','
	{ after(grammarAccess.getAIndexListAccess().getCommaKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AIndexList__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AIndexList__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AIndexList__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAIndexListAccess().getIndexNameParserRuleCall_1_1()); }
	ruleIndexName
	{ after(grammarAccess.getAIndexListAccess().getIndexNameParserRuleCall_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AParamDomain__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AParamDomain__Group__0__Impl
	rule__AParamDomain__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AParamDomain__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAParamDomainAccess().getLeftSquareBracketKeyword_0()); }
	'['
	{ after(grammarAccess.getAParamDomainAccess().getLeftSquareBracketKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AParamDomain__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AParamDomain__Group__1__Impl
	rule__AParamDomain__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AParamDomain__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAParamDomainAccess().getAIndexListParserRuleCall_1()); }
	ruleAIndexList
	{ after(grammarAccess.getAParamDomainAccess().getAIndexListParserRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AParamDomain__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AParamDomain__Group__2__Impl
	rule__AParamDomain__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__AParamDomain__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAParamDomainAccess().getRightSquareBracketKeyword_2()); }
	']'
	{ after(grammarAccess.getAParamDomainAccess().getRightSquareBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AParamDomain__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AParamDomain__Group__3__Impl
	rule__AParamDomain__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__AParamDomain__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAParamDomainAccess().getHyphenMinusGreaterThanSignKeyword_3()); }
	'->'
	{ after(grammarAccess.getAParamDomainAccess().getHyphenMinusGreaterThanSignKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AParamDomain__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AParamDomain__Group__4__Impl
	rule__AParamDomain__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__AParamDomain__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAParamDomainAccess().getLeftCurlyBracketKeyword_4()); }
	'{'
	{ after(grammarAccess.getAParamDomainAccess().getLeftCurlyBracketKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AParamDomain__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AParamDomain__Group__5__Impl
	rule__AParamDomain__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__AParamDomain__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAParamDomainAccess().getColonKeyword_5()); }
	':'
	{ after(grammarAccess.getAParamDomainAccess().getColonKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AParamDomain__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AParamDomain__Group__6__Impl
	rule__AParamDomain__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__AParamDomain__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAParamDomainAccess().getAISLStringParserRuleCall_6()); }
	ruleAISLString
	{ after(grammarAccess.getAParamDomainAccess().getAISLStringParserRuleCall_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AParamDomain__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AParamDomain__Group__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AParamDomain__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAParamDomainAccess().getRightCurlyBracketKeyword_7()); }
	'}'
	{ after(grammarAccess.getAParamDomainAccess().getRightCurlyBracketKeyword_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AISLSet__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AISLSet__Group__0__Impl
	rule__AISLSet__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AISLSet__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAISLSetAccess().getLeftCurlyBracketKeyword_0()); }
	'{'
	{ after(grammarAccess.getAISLSetAccess().getLeftCurlyBracketKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AISLSet__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AISLSet__Group__1__Impl
	rule__AISLSet__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AISLSet__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAISLSetAccess().getAISLBasicSetParserRuleCall_1()); }
	ruleAISLBasicSet
	{ after(grammarAccess.getAISLSetAccess().getAISLBasicSetParserRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AISLSet__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AISLSet__Group__2__Impl
	rule__AISLSet__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__AISLSet__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAISLSetAccess().getGroup_2()); }
	(rule__AISLSet__Group_2__0)*
	{ after(grammarAccess.getAISLSetAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AISLSet__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AISLSet__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AISLSet__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAISLSetAccess().getRightCurlyBracketKeyword_3()); }
	'}'
	{ after(grammarAccess.getAISLSetAccess().getRightCurlyBracketKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AISLSet__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AISLSet__Group_2__0__Impl
	rule__AISLSet__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AISLSet__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAISLSetAccess().getSemicolonKeyword_2_0()); }
	';'
	{ after(grammarAccess.getAISLSetAccess().getSemicolonKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AISLSet__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AISLSet__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AISLSet__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAISLSetAccess().getAISLBasicSetParserRuleCall_2_1()); }
	ruleAISLBasicSet
	{ after(grammarAccess.getAISLSetAccess().getAISLBasicSetParserRuleCall_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AISLBasicSet__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AISLBasicSet__Group__0__Impl
	rule__AISLBasicSet__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AISLBasicSet__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAISLBasicSetAccess().getLeftSquareBracketKeyword_0()); }
	'['
	{ after(grammarAccess.getAISLBasicSetAccess().getLeftSquareBracketKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AISLBasicSet__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AISLBasicSet__Group__1__Impl
	rule__AISLBasicSet__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AISLBasicSet__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAISLBasicSetAccess().getAIndexListParserRuleCall_1()); }
	ruleAIndexList
	{ after(grammarAccess.getAISLBasicSetAccess().getAIndexListParserRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AISLBasicSet__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AISLBasicSet__Group__2__Impl
	rule__AISLBasicSet__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__AISLBasicSet__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAISLBasicSetAccess().getRightSquareBracketKeyword_2()); }
	']'
	{ after(grammarAccess.getAISLBasicSetAccess().getRightSquareBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AISLBasicSet__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AISLBasicSet__Group__3__Impl
	rule__AISLBasicSet__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__AISLBasicSet__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAISLBasicSetAccess().getColonKeyword_3()); }
	':'
	{ after(grammarAccess.getAISLBasicSetAccess().getColonKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AISLBasicSet__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AISLBasicSet__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AISLBasicSet__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAISLBasicSetAccess().getAISLStringParserRuleCall_4()); }
	ruleAISLString
	{ after(grammarAccess.getAISLBasicSetAccess().getAISLStringParserRuleCall_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AISLRelation__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AISLRelation__Group__0__Impl
	rule__AISLRelation__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AISLRelation__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAISLRelationAccess().getLeftCurlyBracketKeyword_0()); }
	'{'
	{ after(grammarAccess.getAISLRelationAccess().getLeftCurlyBracketKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AISLRelation__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AISLRelation__Group__1__Impl
	rule__AISLRelation__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AISLRelation__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAISLRelationAccess().getAISLBasicRelationParserRuleCall_1()); }
	ruleAISLBasicRelation
	{ after(grammarAccess.getAISLRelationAccess().getAISLBasicRelationParserRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AISLRelation__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AISLRelation__Group__2__Impl
	rule__AISLRelation__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__AISLRelation__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAISLRelationAccess().getGroup_2()); }
	(rule__AISLRelation__Group_2__0)*
	{ after(grammarAccess.getAISLRelationAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AISLRelation__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AISLRelation__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AISLRelation__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAISLRelationAccess().getRightCurlyBracketKeyword_3()); }
	'}'
	{ after(grammarAccess.getAISLRelationAccess().getRightCurlyBracketKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AISLRelation__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AISLRelation__Group_2__0__Impl
	rule__AISLRelation__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AISLRelation__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAISLRelationAccess().getSemicolonKeyword_2_0()); }
	';'
	{ after(grammarAccess.getAISLRelationAccess().getSemicolonKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AISLRelation__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AISLRelation__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AISLRelation__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAISLRelationAccess().getAISLBasicRelationParserRuleCall_2_1()); }
	ruleAISLBasicRelation
	{ after(grammarAccess.getAISLRelationAccess().getAISLBasicRelationParserRuleCall_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AISLBasicRelation__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AISLBasicRelation__Group__0__Impl
	rule__AISLBasicRelation__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AISLBasicRelation__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAISLBasicRelationAccess().getLeftSquareBracketKeyword_0()); }
	'['
	{ after(grammarAccess.getAISLBasicRelationAccess().getLeftSquareBracketKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AISLBasicRelation__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AISLBasicRelation__Group__1__Impl
	rule__AISLBasicRelation__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AISLBasicRelation__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAISLBasicRelationAccess().getAIndexListParserRuleCall_1()); }
	ruleAIndexList
	{ after(grammarAccess.getAISLBasicRelationAccess().getAIndexListParserRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AISLBasicRelation__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AISLBasicRelation__Group__2__Impl
	rule__AISLBasicRelation__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__AISLBasicRelation__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAISLBasicRelationAccess().getRightSquareBracketKeyword_2()); }
	']'
	{ after(grammarAccess.getAISLBasicRelationAccess().getRightSquareBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AISLBasicRelation__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AISLBasicRelation__Group__3__Impl
	rule__AISLBasicRelation__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__AISLBasicRelation__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAISLBasicRelationAccess().getHyphenMinusGreaterThanSignKeyword_3()); }
	'->'
	{ after(grammarAccess.getAISLBasicRelationAccess().getHyphenMinusGreaterThanSignKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AISLBasicRelation__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AISLBasicRelation__Group__4__Impl
	rule__AISLBasicRelation__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__AISLBasicRelation__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAISLBasicRelationAccess().getLeftSquareBracketKeyword_4()); }
	'['
	{ after(grammarAccess.getAISLBasicRelationAccess().getLeftSquareBracketKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AISLBasicRelation__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AISLBasicRelation__Group__5__Impl
	rule__AISLBasicRelation__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__AISLBasicRelation__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAISLBasicRelationAccess().getAIndexListParserRuleCall_5()); }
	ruleAIndexList
	{ after(grammarAccess.getAISLBasicRelationAccess().getAIndexListParserRuleCall_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AISLBasicRelation__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AISLBasicRelation__Group__6__Impl
	rule__AISLBasicRelation__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__AISLBasicRelation__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAISLBasicRelationAccess().getRightSquareBracketKeyword_6()); }
	']'
	{ after(grammarAccess.getAISLBasicRelationAccess().getRightSquareBracketKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AISLBasicRelation__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AISLBasicRelation__Group__7__Impl
	rule__AISLBasicRelation__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__AISLBasicRelation__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAISLBasicRelationAccess().getColonKeyword_7()); }
	':'
	{ after(grammarAccess.getAISLBasicRelationAccess().getColonKeyword_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AISLBasicRelation__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AISLBasicRelation__Group__8__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AISLBasicRelation__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAISLBasicRelationAccess().getAISLStringParserRuleCall_8()); }
	ruleAISLString
	{ after(grammarAccess.getAISLBasicRelationAccess().getAISLStringParserRuleCall_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AISLExpressionList__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AISLExpressionList__Group__0__Impl
	rule__AISLExpressionList__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AISLExpressionList__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAISLExpressionListAccess().getAISLExpressionParserRuleCall_0()); }
	ruleAISLExpression
	{ after(grammarAccess.getAISLExpressionListAccess().getAISLExpressionParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AISLExpressionList__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AISLExpressionList__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AISLExpressionList__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAISLExpressionListAccess().getGroup_1()); }
	(rule__AISLExpressionList__Group_1__0)*
	{ after(grammarAccess.getAISLExpressionListAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AISLExpressionList__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AISLExpressionList__Group_1__0__Impl
	rule__AISLExpressionList__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AISLExpressionList__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAISLExpressionListAccess().getCommaKeyword_1_0()); }
	','
	{ after(grammarAccess.getAISLExpressionListAccess().getCommaKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AISLExpressionList__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AISLExpressionList__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AISLExpressionList__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAISLExpressionListAccess().getAISLExpressionParserRuleCall_1_1()); }
	ruleAISLExpression
	{ after(grammarAccess.getAISLExpressionListAccess().getAISLExpressionParserRuleCall_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AAlphaFunction__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AAlphaFunction__Group__0__Impl
	rule__AAlphaFunction__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AAlphaFunction__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAAlphaFunctionAccess().getLeftParenthesisKeyword_0()); }
	'('
	{ after(grammarAccess.getAAlphaFunctionAccess().getLeftParenthesisKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AAlphaFunction__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AAlphaFunction__Group__1__Impl
	rule__AAlphaFunction__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AAlphaFunction__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAAlphaFunctionAccess().getAIndexListParserRuleCall_1()); }
	ruleAIndexList
	{ after(grammarAccess.getAAlphaFunctionAccess().getAIndexListParserRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AAlphaFunction__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AAlphaFunction__Group__2__Impl
	rule__AAlphaFunction__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__AAlphaFunction__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAAlphaFunctionAccess().getHyphenMinusGreaterThanSignKeyword_2()); }
	'->'
	{ after(grammarAccess.getAAlphaFunctionAccess().getHyphenMinusGreaterThanSignKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AAlphaFunction__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AAlphaFunction__Group__3__Impl
	rule__AAlphaFunction__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__AAlphaFunction__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAAlphaFunctionAccess().getAISLExpressionListParserRuleCall_3()); }
	ruleAISLExpressionList
	{ after(grammarAccess.getAAlphaFunctionAccess().getAISLExpressionListParserRuleCall_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AAlphaFunction__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AAlphaFunction__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AAlphaFunction__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAAlphaFunctionAccess().getRightParenthesisKeyword_4()); }
	')'
	{ after(grammarAccess.getAAlphaFunctionAccess().getRightParenthesisKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__StandardEquation__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StandardEquation__Group__0__Impl
	rule__StandardEquation__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StandardEquation__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStandardEquationAccess().getVariableAssignment_0()); }
	(rule__StandardEquation__VariableAssignment_0)
	{ after(grammarAccess.getStandardEquationAccess().getVariableAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StandardEquation__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StandardEquation__Group__1__Impl
	rule__StandardEquation__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__StandardEquation__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStandardEquationAccess().getGroup_1()); }
	(rule__StandardEquation__Group_1__0)?
	{ after(grammarAccess.getStandardEquationAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StandardEquation__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StandardEquation__Group__2__Impl
	rule__StandardEquation__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__StandardEquation__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStandardEquationAccess().getEqualsSignKeyword_2()); }
	'='
	{ after(grammarAccess.getStandardEquationAccess().getEqualsSignKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StandardEquation__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StandardEquation__Group__3__Impl
	rule__StandardEquation__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__StandardEquation__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStandardEquationAccess().getExprAssignment_3()); }
	(rule__StandardEquation__ExprAssignment_3)
	{ after(grammarAccess.getStandardEquationAccess().getExprAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StandardEquation__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StandardEquation__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StandardEquation__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStandardEquationAccess().getSemicolonKeyword_4()); }
	';'
	{ after(grammarAccess.getStandardEquationAccess().getSemicolonKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__StandardEquation__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StandardEquation__Group_1__0__Impl
	rule__StandardEquation__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StandardEquation__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStandardEquationAccess().getLeftSquareBracketKeyword_1_0()); }
	'['
	{ after(grammarAccess.getStandardEquationAccess().getLeftSquareBracketKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StandardEquation__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StandardEquation__Group_1__1__Impl
	rule__StandardEquation__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__StandardEquation__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStandardEquationAccess().getIndexNamesAssignment_1_1()); }
	(rule__StandardEquation__IndexNamesAssignment_1_1)
	{ after(grammarAccess.getStandardEquationAccess().getIndexNamesAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StandardEquation__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StandardEquation__Group_1__2__Impl
	rule__StandardEquation__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__StandardEquation__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStandardEquationAccess().getGroup_1_2()); }
	(rule__StandardEquation__Group_1_2__0)*
	{ after(grammarAccess.getStandardEquationAccess().getGroup_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StandardEquation__Group_1__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StandardEquation__Group_1__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StandardEquation__Group_1__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStandardEquationAccess().getRightSquareBracketKeyword_1_3()); }
	']'
	{ after(grammarAccess.getStandardEquationAccess().getRightSquareBracketKeyword_1_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__StandardEquation__Group_1_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StandardEquation__Group_1_2__0__Impl
	rule__StandardEquation__Group_1_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StandardEquation__Group_1_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStandardEquationAccess().getCommaKeyword_1_2_0()); }
	','
	{ after(grammarAccess.getStandardEquationAccess().getCommaKeyword_1_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StandardEquation__Group_1_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StandardEquation__Group_1_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StandardEquation__Group_1_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStandardEquationAccess().getIndexNamesAssignment_1_2_1()); }
	(rule__StandardEquation__IndexNamesAssignment_1_2_1)
	{ after(grammarAccess.getStandardEquationAccess().getIndexNamesAssignment_1_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__UseEquation__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UseEquation__Group__0__Impl
	rule__UseEquation__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UseEquation__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUseEquationAccess().getGroup_0()); }
	(rule__UseEquation__Group_0__0)?
	{ after(grammarAccess.getUseEquationAccess().getGroup_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UseEquation__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UseEquation__Group__1__Impl
	rule__UseEquation__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__UseEquation__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUseEquationAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getUseEquationAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UseEquation__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UseEquation__Group__2__Impl
	rule__UseEquation__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__UseEquation__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUseEquationAccess().getGroup_2()); }
	(rule__UseEquation__Group_2__0)?
	{ after(grammarAccess.getUseEquationAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UseEquation__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UseEquation__Group__3__Impl
	rule__UseEquation__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__UseEquation__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUseEquationAccess().getRightParenthesisKeyword_3()); }
	')'
	{ after(grammarAccess.getUseEquationAccess().getRightParenthesisKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UseEquation__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UseEquation__Group__4__Impl
	rule__UseEquation__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__UseEquation__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUseEquationAccess().getEqualsSignKeyword_4()); }
	'='
	{ after(grammarAccess.getUseEquationAccess().getEqualsSignKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UseEquation__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UseEquation__Group__5__Impl
	rule__UseEquation__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__UseEquation__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUseEquationAccess().getSystemAssignment_5()); }
	(rule__UseEquation__SystemAssignment_5)
	{ after(grammarAccess.getUseEquationAccess().getSystemAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UseEquation__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UseEquation__Group__6__Impl
	rule__UseEquation__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__UseEquation__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUseEquationAccess().getCallParamsExprAssignment_6()); }
	(rule__UseEquation__CallParamsExprAssignment_6)
	{ after(grammarAccess.getUseEquationAccess().getCallParamsExprAssignment_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UseEquation__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UseEquation__Group__7__Impl
	rule__UseEquation__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__UseEquation__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUseEquationAccess().getLeftParenthesisKeyword_7()); }
	'('
	{ after(grammarAccess.getUseEquationAccess().getLeftParenthesisKeyword_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UseEquation__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UseEquation__Group__8__Impl
	rule__UseEquation__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__UseEquation__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUseEquationAccess().getGroup_8()); }
	(rule__UseEquation__Group_8__0)?
	{ after(grammarAccess.getUseEquationAccess().getGroup_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UseEquation__Group__9
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UseEquation__Group__9__Impl
	rule__UseEquation__Group__10
;
finally {
	restoreStackSize(stackSize);
}

rule__UseEquation__Group__9__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUseEquationAccess().getRightParenthesisKeyword_9()); }
	')'
	{ after(grammarAccess.getUseEquationAccess().getRightParenthesisKeyword_9()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UseEquation__Group__10
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UseEquation__Group__10__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UseEquation__Group__10__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUseEquationAccess().getSemicolonKeyword_10()); }
	';'
	{ after(grammarAccess.getUseEquationAccess().getSemicolonKeyword_10()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__UseEquation__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UseEquation__Group_0__0__Impl
	rule__UseEquation__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UseEquation__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUseEquationAccess().getOverKeyword_0_0()); }
	'over'
	{ after(grammarAccess.getUseEquationAccess().getOverKeyword_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UseEquation__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UseEquation__Group_0__1__Impl
	rule__UseEquation__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__UseEquation__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUseEquationAccess().getInstantiationDomainExprAssignment_0_1()); }
	(rule__UseEquation__InstantiationDomainExprAssignment_0_1)
	{ after(grammarAccess.getUseEquationAccess().getInstantiationDomainExprAssignment_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UseEquation__Group_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UseEquation__Group_0__2__Impl
	rule__UseEquation__Group_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__UseEquation__Group_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUseEquationAccess().getGroup_0_2()); }
	(rule__UseEquation__Group_0_2__0)?
	{ after(grammarAccess.getUseEquationAccess().getGroup_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UseEquation__Group_0__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UseEquation__Group_0__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UseEquation__Group_0__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUseEquationAccess().getColonKeyword_0_3()); }
	':'
	{ after(grammarAccess.getUseEquationAccess().getColonKeyword_0_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__UseEquation__Group_0_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UseEquation__Group_0_2__0__Impl
	rule__UseEquation__Group_0_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UseEquation__Group_0_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUseEquationAccess().getWithKeyword_0_2_0()); }
	'with'
	{ after(grammarAccess.getUseEquationAccess().getWithKeyword_0_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UseEquation__Group_0_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UseEquation__Group_0_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UseEquation__Group_0_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUseEquationAccess().getGroup_0_2_1()); }
	(rule__UseEquation__Group_0_2_1__0)?
	{ after(grammarAccess.getUseEquationAccess().getGroup_0_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__UseEquation__Group_0_2_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UseEquation__Group_0_2_1__0__Impl
	rule__UseEquation__Group_0_2_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UseEquation__Group_0_2_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUseEquationAccess().getLeftSquareBracketKeyword_0_2_1_0()); }
	'['
	{ after(grammarAccess.getUseEquationAccess().getLeftSquareBracketKeyword_0_2_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UseEquation__Group_0_2_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UseEquation__Group_0_2_1__1__Impl
	rule__UseEquation__Group_0_2_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__UseEquation__Group_0_2_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUseEquationAccess().getSubsystemDimsAssignment_0_2_1_1()); }
	(rule__UseEquation__SubsystemDimsAssignment_0_2_1_1)
	{ after(grammarAccess.getUseEquationAccess().getSubsystemDimsAssignment_0_2_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UseEquation__Group_0_2_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UseEquation__Group_0_2_1__2__Impl
	rule__UseEquation__Group_0_2_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__UseEquation__Group_0_2_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUseEquationAccess().getGroup_0_2_1_2()); }
	(rule__UseEquation__Group_0_2_1_2__0)*
	{ after(grammarAccess.getUseEquationAccess().getGroup_0_2_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UseEquation__Group_0_2_1__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UseEquation__Group_0_2_1__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UseEquation__Group_0_2_1__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUseEquationAccess().getRightSquareBracketKeyword_0_2_1_3()); }
	']'
	{ after(grammarAccess.getUseEquationAccess().getRightSquareBracketKeyword_0_2_1_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__UseEquation__Group_0_2_1_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UseEquation__Group_0_2_1_2__0__Impl
	rule__UseEquation__Group_0_2_1_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UseEquation__Group_0_2_1_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUseEquationAccess().getCommaKeyword_0_2_1_2_0()); }
	','
	{ after(grammarAccess.getUseEquationAccess().getCommaKeyword_0_2_1_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UseEquation__Group_0_2_1_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UseEquation__Group_0_2_1_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UseEquation__Group_0_2_1_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUseEquationAccess().getSubsystemDimsAssignment_0_2_1_2_1()); }
	(rule__UseEquation__SubsystemDimsAssignment_0_2_1_2_1)
	{ after(grammarAccess.getUseEquationAccess().getSubsystemDimsAssignment_0_2_1_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__UseEquation__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UseEquation__Group_2__0__Impl
	rule__UseEquation__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UseEquation__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUseEquationAccess().getOutputExprsAssignment_2_0()); }
	(rule__UseEquation__OutputExprsAssignment_2_0)
	{ after(grammarAccess.getUseEquationAccess().getOutputExprsAssignment_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UseEquation__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UseEquation__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UseEquation__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUseEquationAccess().getGroup_2_1()); }
	(rule__UseEquation__Group_2_1__0)*
	{ after(grammarAccess.getUseEquationAccess().getGroup_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__UseEquation__Group_2_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UseEquation__Group_2_1__0__Impl
	rule__UseEquation__Group_2_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UseEquation__Group_2_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUseEquationAccess().getCommaKeyword_2_1_0()); }
	','
	{ after(grammarAccess.getUseEquationAccess().getCommaKeyword_2_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UseEquation__Group_2_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UseEquation__Group_2_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UseEquation__Group_2_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUseEquationAccess().getOutputExprsAssignment_2_1_1()); }
	(rule__UseEquation__OutputExprsAssignment_2_1_1)
	{ after(grammarAccess.getUseEquationAccess().getOutputExprsAssignment_2_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__UseEquation__Group_8__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UseEquation__Group_8__0__Impl
	rule__UseEquation__Group_8__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UseEquation__Group_8__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUseEquationAccess().getInputExprsAssignment_8_0()); }
	(rule__UseEquation__InputExprsAssignment_8_0)
	{ after(grammarAccess.getUseEquationAccess().getInputExprsAssignment_8_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UseEquation__Group_8__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UseEquation__Group_8__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UseEquation__Group_8__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUseEquationAccess().getGroup_8_1()); }
	(rule__UseEquation__Group_8_1__0)*
	{ after(grammarAccess.getUseEquationAccess().getGroup_8_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__UseEquation__Group_8_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UseEquation__Group_8_1__0__Impl
	rule__UseEquation__Group_8_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UseEquation__Group_8_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUseEquationAccess().getCommaKeyword_8_1_0()); }
	','
	{ after(grammarAccess.getUseEquationAccess().getCommaKeyword_8_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UseEquation__Group_8_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UseEquation__Group_8_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UseEquation__Group_8_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUseEquationAccess().getInputExprsAssignment_8_1_1()); }
	(rule__UseEquation__InputExprsAssignment_8_1_1)
	{ after(grammarAccess.getUseEquationAccess().getInputExprsAssignment_8_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AlphaTerminalExpression__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AlphaTerminalExpression__Group_0__0__Impl
	rule__AlphaTerminalExpression__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AlphaTerminalExpression__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAlphaTerminalExpressionAccess().getLeftParenthesisKeyword_0_0()); }
	'('
	{ after(grammarAccess.getAlphaTerminalExpressionAccess().getLeftParenthesisKeyword_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AlphaTerminalExpression__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AlphaTerminalExpression__Group_0__1__Impl
	rule__AlphaTerminalExpression__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AlphaTerminalExpression__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAlphaTerminalExpressionAccess().getAlphaExpressionParserRuleCall_0_1()); }
	ruleAlphaExpression
	{ after(grammarAccess.getAlphaTerminalExpressionAccess().getAlphaExpressionParserRuleCall_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AlphaTerminalExpression__Group_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AlphaTerminalExpression__Group_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AlphaTerminalExpression__Group_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAlphaTerminalExpressionAccess().getRightParenthesisKeyword_0_2()); }
	')'
	{ after(grammarAccess.getAlphaTerminalExpressionAccess().getRightParenthesisKeyword_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__IfExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfExpression__Group__0__Impl
	rule__IfExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IfExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfExpressionAccess().getIfKeyword_0()); }
	'if'
	{ after(grammarAccess.getIfExpressionAccess().getIfKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfExpression__Group__1__Impl
	rule__IfExpression__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__IfExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfExpressionAccess().getCondExprAssignment_1()); }
	(rule__IfExpression__CondExprAssignment_1)
	{ after(grammarAccess.getIfExpressionAccess().getCondExprAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfExpression__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfExpression__Group__2__Impl
	rule__IfExpression__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__IfExpression__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfExpressionAccess().getThenKeyword_2()); }
	'then'
	{ after(grammarAccess.getIfExpressionAccess().getThenKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfExpression__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfExpression__Group__3__Impl
	rule__IfExpression__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__IfExpression__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfExpressionAccess().getThenExprAssignment_3()); }
	(rule__IfExpression__ThenExprAssignment_3)
	{ after(grammarAccess.getIfExpressionAccess().getThenExprAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfExpression__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfExpression__Group__4__Impl
	rule__IfExpression__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__IfExpression__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfExpressionAccess().getElseKeyword_4()); }
	'else'
	{ after(grammarAccess.getIfExpressionAccess().getElseKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfExpression__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfExpression__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IfExpression__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfExpressionAccess().getElseExprAssignment_5()); }
	(rule__IfExpression__ElseExprAssignment_5)
	{ after(grammarAccess.getIfExpressionAccess().getElseExprAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RestrictExpression__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RestrictExpression__Group_0__0__Impl
	rule__RestrictExpression__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RestrictExpression__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRestrictExpressionAccess().getDomainExprAssignment_0_0()); }
	(rule__RestrictExpression__DomainExprAssignment_0_0)
	{ after(grammarAccess.getRestrictExpressionAccess().getDomainExprAssignment_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RestrictExpression__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RestrictExpression__Group_0__1__Impl
	rule__RestrictExpression__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__RestrictExpression__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRestrictExpressionAccess().getColonKeyword_0_1()); }
	':'
	{ after(grammarAccess.getRestrictExpressionAccess().getColonKeyword_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RestrictExpression__Group_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RestrictExpression__Group_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RestrictExpression__Group_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRestrictExpressionAccess().getExprAssignment_0_2()); }
	(rule__RestrictExpression__ExprAssignment_0_2)
	{ after(grammarAccess.getRestrictExpressionAccess().getExprAssignment_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RestrictExpression__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RestrictExpression__Group_1__0__Impl
	rule__RestrictExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RestrictExpression__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRestrictExpressionAccess().getLeftCurlyBracketKeyword_1_0()); }
	'{'
	{ after(grammarAccess.getRestrictExpressionAccess().getLeftCurlyBracketKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RestrictExpression__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RestrictExpression__Group_1__1__Impl
	rule__RestrictExpression__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__RestrictExpression__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRestrictExpressionAccess().getDomainExprAssignment_1_1()); }
	(rule__RestrictExpression__DomainExprAssignment_1_1)
	{ after(grammarAccess.getRestrictExpressionAccess().getDomainExprAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RestrictExpression__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RestrictExpression__Group_1__2__Impl
	rule__RestrictExpression__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__RestrictExpression__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRestrictExpressionAccess().getRightCurlyBracketKeyword_1_2()); }
	'}'
	{ after(grammarAccess.getRestrictExpressionAccess().getRightCurlyBracketKeyword_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RestrictExpression__Group_1__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RestrictExpression__Group_1__3__Impl
	rule__RestrictExpression__Group_1__4
;
finally {
	restoreStackSize(stackSize);
}

rule__RestrictExpression__Group_1__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRestrictExpressionAccess().getColonKeyword_1_3()); }
	':'
	{ after(grammarAccess.getRestrictExpressionAccess().getColonKeyword_1_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RestrictExpression__Group_1__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RestrictExpression__Group_1__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RestrictExpression__Group_1__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRestrictExpressionAccess().getExprAssignment_1_4()); }
	(rule__RestrictExpression__ExprAssignment_1_4)
	{ after(grammarAccess.getRestrictExpressionAccess().getExprAssignment_1_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AutoRestrictExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AutoRestrictExpression__Group__0__Impl
	rule__AutoRestrictExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AutoRestrictExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAutoRestrictExpressionAccess().getAutoKeyword_0()); }
	'auto'
	{ after(grammarAccess.getAutoRestrictExpressionAccess().getAutoKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AutoRestrictExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AutoRestrictExpression__Group__1__Impl
	rule__AutoRestrictExpression__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AutoRestrictExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAutoRestrictExpressionAccess().getColonKeyword_1()); }
	':'
	{ after(grammarAccess.getAutoRestrictExpressionAccess().getColonKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AutoRestrictExpression__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AutoRestrictExpression__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AutoRestrictExpression__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAutoRestrictExpressionAccess().getExprAssignment_2()); }
	(rule__AutoRestrictExpression__ExprAssignment_2)
	{ after(grammarAccess.getAutoRestrictExpressionAccess().getExprAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__CaseExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CaseExpression__Group__0__Impl
	rule__CaseExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CaseExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCaseExpressionAccess().getCaseKeyword_0()); }
	'case'
	{ after(grammarAccess.getCaseExpressionAccess().getCaseKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CaseExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CaseExpression__Group__1__Impl
	rule__CaseExpression__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__CaseExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCaseExpressionAccess().getNameAssignment_1()); }
	(rule__CaseExpression__NameAssignment_1)?
	{ after(grammarAccess.getCaseExpressionAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CaseExpression__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CaseExpression__Group__2__Impl
	rule__CaseExpression__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__CaseExpression__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCaseExpressionAccess().getLeftCurlyBracketKeyword_2()); }
	'{'
	{ after(grammarAccess.getCaseExpressionAccess().getLeftCurlyBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CaseExpression__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CaseExpression__Group__3__Impl
	rule__CaseExpression__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__CaseExpression__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getCaseExpressionAccess().getGroup_3()); }
		(rule__CaseExpression__Group_3__0)
		{ after(grammarAccess.getCaseExpressionAccess().getGroup_3()); }
	)
	(
		{ before(grammarAccess.getCaseExpressionAccess().getGroup_3()); }
		(rule__CaseExpression__Group_3__0)*
		{ after(grammarAccess.getCaseExpressionAccess().getGroup_3()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CaseExpression__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CaseExpression__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CaseExpression__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCaseExpressionAccess().getRightCurlyBracketKeyword_4()); }
	'}'
	{ after(grammarAccess.getCaseExpressionAccess().getRightCurlyBracketKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__CaseExpression__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CaseExpression__Group_3__0__Impl
	rule__CaseExpression__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CaseExpression__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCaseExpressionAccess().getExprsAssignment_3_0()); }
	(rule__CaseExpression__ExprsAssignment_3_0)
	{ after(grammarAccess.getCaseExpressionAccess().getExprsAssignment_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CaseExpression__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CaseExpression__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CaseExpression__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCaseExpressionAccess().getSemicolonKeyword_3_1()); }
	';'
	{ after(grammarAccess.getCaseExpressionAccess().getSemicolonKeyword_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__DependenceExpression__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DependenceExpression__Group_0__0__Impl
	rule__DependenceExpression__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DependenceExpression__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDependenceExpressionAccess().getFunctionExprAssignment_0_0()); }
	(rule__DependenceExpression__FunctionExprAssignment_0_0)
	{ after(grammarAccess.getDependenceExpressionAccess().getFunctionExprAssignment_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DependenceExpression__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DependenceExpression__Group_0__1__Impl
	rule__DependenceExpression__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DependenceExpression__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDependenceExpressionAccess().getCommercialAtKeyword_0_1()); }
	'@'
	{ after(grammarAccess.getDependenceExpressionAccess().getCommercialAtKeyword_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DependenceExpression__Group_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DependenceExpression__Group_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DependenceExpression__Group_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDependenceExpressionAccess().getExprAssignment_0_2()); }
	(rule__DependenceExpression__ExprAssignment_0_2)
	{ after(grammarAccess.getDependenceExpressionAccess().getExprAssignment_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__DependenceExpression__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DependenceExpression__Group_1__0__Impl
	rule__DependenceExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DependenceExpression__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDependenceExpressionAccess().getExprAssignment_1_0()); }
	(rule__DependenceExpression__ExprAssignment_1_0)
	{ after(grammarAccess.getDependenceExpressionAccess().getExprAssignment_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DependenceExpression__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DependenceExpression__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DependenceExpression__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDependenceExpressionAccess().getFunctionExprAssignment_1_1()); }
	(rule__DependenceExpression__FunctionExprAssignment_1_1)
	{ after(grammarAccess.getDependenceExpressionAccess().getFunctionExprAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__IndexExpression__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IndexExpression__Group_0__0__Impl
	rule__IndexExpression__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IndexExpression__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIndexExpressionAccess().getValKeyword_0_0()); }
	'val'
	{ after(grammarAccess.getIndexExpressionAccess().getValKeyword_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IndexExpression__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IndexExpression__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IndexExpression__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIndexExpressionAccess().getFunctionExprAssignment_0_1()); }
	(rule__IndexExpression__FunctionExprAssignment_0_1)
	{ after(grammarAccess.getIndexExpressionAccess().getFunctionExprAssignment_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ReduceExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ReduceExpression__Group__0__Impl
	rule__ReduceExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ReduceExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReduceExpressionAccess().getReduceKeyword_0()); }
	'reduce'
	{ after(grammarAccess.getReduceExpressionAccess().getReduceKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ReduceExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ReduceExpression__Group__1__Impl
	rule__ReduceExpression__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ReduceExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReduceExpressionAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getReduceExpressionAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ReduceExpression__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ReduceExpression__Group__2__Impl
	rule__ReduceExpression__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ReduceExpression__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReduceExpressionAccess().getOperatorAssignment_2()); }
	(rule__ReduceExpression__OperatorAssignment_2)
	{ after(grammarAccess.getReduceExpressionAccess().getOperatorAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ReduceExpression__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ReduceExpression__Group__3__Impl
	rule__ReduceExpression__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ReduceExpression__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReduceExpressionAccess().getCommaKeyword_3()); }
	','
	{ after(grammarAccess.getReduceExpressionAccess().getCommaKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ReduceExpression__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ReduceExpression__Group__4__Impl
	rule__ReduceExpression__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__ReduceExpression__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReduceExpressionAccess().getProjectionExprAssignment_4()); }
	(rule__ReduceExpression__ProjectionExprAssignment_4)
	{ after(grammarAccess.getReduceExpressionAccess().getProjectionExprAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ReduceExpression__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ReduceExpression__Group__5__Impl
	rule__ReduceExpression__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__ReduceExpression__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReduceExpressionAccess().getCommaKeyword_5()); }
	','
	{ after(grammarAccess.getReduceExpressionAccess().getCommaKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ReduceExpression__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ReduceExpression__Group__6__Impl
	rule__ReduceExpression__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__ReduceExpression__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReduceExpressionAccess().getBodyAssignment_6()); }
	(rule__ReduceExpression__BodyAssignment_6)
	{ after(grammarAccess.getReduceExpressionAccess().getBodyAssignment_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ReduceExpression__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ReduceExpression__Group__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ReduceExpression__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReduceExpressionAccess().getRightParenthesisKeyword_7()); }
	')'
	{ after(grammarAccess.getReduceExpressionAccess().getRightParenthesisKeyword_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ExternalReduceExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExternalReduceExpression__Group__0__Impl
	rule__ExternalReduceExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExternalReduceExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExternalReduceExpressionAccess().getReduceKeyword_0()); }
	'reduce'
	{ after(grammarAccess.getExternalReduceExpressionAccess().getReduceKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExternalReduceExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExternalReduceExpression__Group__1__Impl
	rule__ExternalReduceExpression__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ExternalReduceExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExternalReduceExpressionAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getExternalReduceExpressionAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExternalReduceExpression__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExternalReduceExpression__Group__2__Impl
	rule__ExternalReduceExpression__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ExternalReduceExpression__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExternalReduceExpressionAccess().getExternalFunctionAssignment_2()); }
	(rule__ExternalReduceExpression__ExternalFunctionAssignment_2)
	{ after(grammarAccess.getExternalReduceExpressionAccess().getExternalFunctionAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExternalReduceExpression__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExternalReduceExpression__Group__3__Impl
	rule__ExternalReduceExpression__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ExternalReduceExpression__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExternalReduceExpressionAccess().getCommaKeyword_3()); }
	','
	{ after(grammarAccess.getExternalReduceExpressionAccess().getCommaKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExternalReduceExpression__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExternalReduceExpression__Group__4__Impl
	rule__ExternalReduceExpression__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__ExternalReduceExpression__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExternalReduceExpressionAccess().getProjectionExprAssignment_4()); }
	(rule__ExternalReduceExpression__ProjectionExprAssignment_4)
	{ after(grammarAccess.getExternalReduceExpressionAccess().getProjectionExprAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExternalReduceExpression__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExternalReduceExpression__Group__5__Impl
	rule__ExternalReduceExpression__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__ExternalReduceExpression__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExternalReduceExpressionAccess().getCommaKeyword_5()); }
	','
	{ after(grammarAccess.getExternalReduceExpressionAccess().getCommaKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExternalReduceExpression__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExternalReduceExpression__Group__6__Impl
	rule__ExternalReduceExpression__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__ExternalReduceExpression__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExternalReduceExpressionAccess().getBodyAssignment_6()); }
	(rule__ExternalReduceExpression__BodyAssignment_6)
	{ after(grammarAccess.getExternalReduceExpressionAccess().getBodyAssignment_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExternalReduceExpression__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExternalReduceExpression__Group__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExternalReduceExpression__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExternalReduceExpressionAccess().getRightParenthesisKeyword_7()); }
	')'
	{ after(grammarAccess.getExternalReduceExpressionAccess().getRightParenthesisKeyword_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ArgReduceExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ArgReduceExpression__Group__0__Impl
	rule__ArgReduceExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ArgReduceExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArgReduceExpressionAccess().getArgreduceKeyword_0()); }
	'argreduce'
	{ after(grammarAccess.getArgReduceExpressionAccess().getArgreduceKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArgReduceExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ArgReduceExpression__Group__1__Impl
	rule__ArgReduceExpression__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ArgReduceExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArgReduceExpressionAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getArgReduceExpressionAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArgReduceExpression__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ArgReduceExpression__Group__2__Impl
	rule__ArgReduceExpression__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ArgReduceExpression__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArgReduceExpressionAccess().getOperatorAssignment_2()); }
	(rule__ArgReduceExpression__OperatorAssignment_2)
	{ after(grammarAccess.getArgReduceExpressionAccess().getOperatorAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArgReduceExpression__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ArgReduceExpression__Group__3__Impl
	rule__ArgReduceExpression__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ArgReduceExpression__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArgReduceExpressionAccess().getCommaKeyword_3()); }
	','
	{ after(grammarAccess.getArgReduceExpressionAccess().getCommaKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArgReduceExpression__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ArgReduceExpression__Group__4__Impl
	rule__ArgReduceExpression__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__ArgReduceExpression__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArgReduceExpressionAccess().getProjectionExprAssignment_4()); }
	(rule__ArgReduceExpression__ProjectionExprAssignment_4)
	{ after(grammarAccess.getArgReduceExpressionAccess().getProjectionExprAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArgReduceExpression__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ArgReduceExpression__Group__5__Impl
	rule__ArgReduceExpression__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__ArgReduceExpression__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArgReduceExpressionAccess().getCommaKeyword_5()); }
	','
	{ after(grammarAccess.getArgReduceExpressionAccess().getCommaKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArgReduceExpression__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ArgReduceExpression__Group__6__Impl
	rule__ArgReduceExpression__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__ArgReduceExpression__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArgReduceExpressionAccess().getBodyAssignment_6()); }
	(rule__ArgReduceExpression__BodyAssignment_6)
	{ after(grammarAccess.getArgReduceExpressionAccess().getBodyAssignment_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArgReduceExpression__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ArgReduceExpression__Group__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ArgReduceExpression__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArgReduceExpressionAccess().getRightParenthesisKeyword_7()); }
	')'
	{ after(grammarAccess.getArgReduceExpressionAccess().getRightParenthesisKeyword_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ExternalArgReduceExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExternalArgReduceExpression__Group__0__Impl
	rule__ExternalArgReduceExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExternalArgReduceExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExternalArgReduceExpressionAccess().getArgreduceKeyword_0()); }
	'argreduce'
	{ after(grammarAccess.getExternalArgReduceExpressionAccess().getArgreduceKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExternalArgReduceExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExternalArgReduceExpression__Group__1__Impl
	rule__ExternalArgReduceExpression__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ExternalArgReduceExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExternalArgReduceExpressionAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getExternalArgReduceExpressionAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExternalArgReduceExpression__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExternalArgReduceExpression__Group__2__Impl
	rule__ExternalArgReduceExpression__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ExternalArgReduceExpression__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExternalArgReduceExpressionAccess().getExternalFunctionAssignment_2()); }
	(rule__ExternalArgReduceExpression__ExternalFunctionAssignment_2)
	{ after(grammarAccess.getExternalArgReduceExpressionAccess().getExternalFunctionAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExternalArgReduceExpression__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExternalArgReduceExpression__Group__3__Impl
	rule__ExternalArgReduceExpression__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ExternalArgReduceExpression__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExternalArgReduceExpressionAccess().getCommaKeyword_3()); }
	','
	{ after(grammarAccess.getExternalArgReduceExpressionAccess().getCommaKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExternalArgReduceExpression__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExternalArgReduceExpression__Group__4__Impl
	rule__ExternalArgReduceExpression__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__ExternalArgReduceExpression__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExternalArgReduceExpressionAccess().getProjectionExprAssignment_4()); }
	(rule__ExternalArgReduceExpression__ProjectionExprAssignment_4)
	{ after(grammarAccess.getExternalArgReduceExpressionAccess().getProjectionExprAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExternalArgReduceExpression__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExternalArgReduceExpression__Group__5__Impl
	rule__ExternalArgReduceExpression__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__ExternalArgReduceExpression__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExternalArgReduceExpressionAccess().getCommaKeyword_5()); }
	','
	{ after(grammarAccess.getExternalArgReduceExpressionAccess().getCommaKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExternalArgReduceExpression__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExternalArgReduceExpression__Group__6__Impl
	rule__ExternalArgReduceExpression__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__ExternalArgReduceExpression__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExternalArgReduceExpressionAccess().getBodyAssignment_6()); }
	(rule__ExternalArgReduceExpression__BodyAssignment_6)
	{ after(grammarAccess.getExternalArgReduceExpressionAccess().getBodyAssignment_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExternalArgReduceExpression__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExternalArgReduceExpression__Group__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExternalArgReduceExpression__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExternalArgReduceExpressionAccess().getRightParenthesisKeyword_7()); }
	')'
	{ after(grammarAccess.getExternalArgReduceExpressionAccess().getRightParenthesisKeyword_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ConvolutionExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConvolutionExpression__Group__0__Impl
	rule__ConvolutionExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ConvolutionExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConvolutionExpressionAccess().getConvKeyword_0()); }
	'conv'
	{ after(grammarAccess.getConvolutionExpressionAccess().getConvKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConvolutionExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConvolutionExpression__Group__1__Impl
	rule__ConvolutionExpression__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ConvolutionExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConvolutionExpressionAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getConvolutionExpressionAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConvolutionExpression__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConvolutionExpression__Group__2__Impl
	rule__ConvolutionExpression__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ConvolutionExpression__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConvolutionExpressionAccess().getKernelDomainExprAssignment_2()); }
	(rule__ConvolutionExpression__KernelDomainExprAssignment_2)
	{ after(grammarAccess.getConvolutionExpressionAccess().getKernelDomainExprAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConvolutionExpression__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConvolutionExpression__Group__3__Impl
	rule__ConvolutionExpression__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ConvolutionExpression__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConvolutionExpressionAccess().getCommaKeyword_3()); }
	','
	{ after(grammarAccess.getConvolutionExpressionAccess().getCommaKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConvolutionExpression__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConvolutionExpression__Group__4__Impl
	rule__ConvolutionExpression__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__ConvolutionExpression__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConvolutionExpressionAccess().getKernelExpressionAssignment_4()); }
	(rule__ConvolutionExpression__KernelExpressionAssignment_4)
	{ after(grammarAccess.getConvolutionExpressionAccess().getKernelExpressionAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConvolutionExpression__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConvolutionExpression__Group__5__Impl
	rule__ConvolutionExpression__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__ConvolutionExpression__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConvolutionExpressionAccess().getCommaKeyword_5()); }
	','
	{ after(grammarAccess.getConvolutionExpressionAccess().getCommaKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConvolutionExpression__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConvolutionExpression__Group__6__Impl
	rule__ConvolutionExpression__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__ConvolutionExpression__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConvolutionExpressionAccess().getDataExpressionAssignment_6()); }
	(rule__ConvolutionExpression__DataExpressionAssignment_6)
	{ after(grammarAccess.getConvolutionExpressionAccess().getDataExpressionAssignment_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConvolutionExpression__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConvolutionExpression__Group__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ConvolutionExpression__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConvolutionExpressionAccess().getRightParenthesisKeyword_7()); }
	')'
	{ after(grammarAccess.getConvolutionExpressionAccess().getRightParenthesisKeyword_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SelectExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SelectExpression__Group__0__Impl
	rule__SelectExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSelectExpressionAccess().getSelectKeyword_0()); }
	'select'
	{ after(grammarAccess.getSelectExpressionAccess().getSelectKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SelectExpression__Group__1__Impl
	rule__SelectExpression__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSelectExpressionAccess().getRelationExprAssignment_1()); }
	(rule__SelectExpression__RelationExprAssignment_1)
	{ after(grammarAccess.getSelectExpressionAccess().getRelationExprAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectExpression__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SelectExpression__Group__2__Impl
	rule__SelectExpression__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectExpression__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSelectExpressionAccess().getFromKeyword_2()); }
	'from'
	{ after(grammarAccess.getSelectExpressionAccess().getFromKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectExpression__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SelectExpression__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectExpression__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSelectExpressionAccess().getExprAssignment_3()); }
	(rule__SelectExpression__ExprAssignment_3)
	{ after(grammarAccess.getSelectExpressionAccess().getExprAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__OrExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OrExpression__Group__0__Impl
	rule__OrExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OrExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOrExpressionAccess().getAndExpressionParserRuleCall_0()); }
	ruleAndExpression
	{ after(grammarAccess.getOrExpressionAccess().getAndExpressionParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OrExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OrExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OrExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOrExpressionAccess().getGroup_1()); }
	(rule__OrExpression__Group_1__0)*
	{ after(grammarAccess.getOrExpressionAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__OrExpression__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OrExpression__Group_1__0__Impl
	rule__OrExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OrExpression__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOrExpressionAccess().getBinaryExpressionLeftAction_1_0()); }
	()
	{ after(grammarAccess.getOrExpressionAccess().getBinaryExpressionLeftAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OrExpression__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OrExpression__Group_1__1__Impl
	rule__OrExpression__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__OrExpression__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOrExpressionAccess().getOperatorAssignment_1_1()); }
	(rule__OrExpression__OperatorAssignment_1_1)
	{ after(grammarAccess.getOrExpressionAccess().getOperatorAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OrExpression__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OrExpression__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OrExpression__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOrExpressionAccess().getRightAssignment_1_2()); }
	(rule__OrExpression__RightAssignment_1_2)
	{ after(grammarAccess.getOrExpressionAccess().getRightAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AndExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AndExpression__Group__0__Impl
	rule__AndExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AndExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAndExpressionAccess().getRelationalExpressionParserRuleCall_0()); }
	ruleRelationalExpression
	{ after(grammarAccess.getAndExpressionAccess().getRelationalExpressionParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AndExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AndExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AndExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAndExpressionAccess().getGroup_1()); }
	(rule__AndExpression__Group_1__0)*
	{ after(grammarAccess.getAndExpressionAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AndExpression__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AndExpression__Group_1__0__Impl
	rule__AndExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AndExpression__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAndExpressionAccess().getBinaryExpressionLeftAction_1_0()); }
	()
	{ after(grammarAccess.getAndExpressionAccess().getBinaryExpressionLeftAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AndExpression__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AndExpression__Group_1__1__Impl
	rule__AndExpression__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AndExpression__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAndExpressionAccess().getOperatorAssignment_1_1()); }
	(rule__AndExpression__OperatorAssignment_1_1)
	{ after(grammarAccess.getAndExpressionAccess().getOperatorAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AndExpression__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AndExpression__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AndExpression__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAndExpressionAccess().getRightAssignment_1_2()); }
	(rule__AndExpression__RightAssignment_1_2)
	{ after(grammarAccess.getAndExpressionAccess().getRightAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RelationalExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RelationalExpression__Group__0__Impl
	rule__RelationalExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationalExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRelationalExpressionAccess().getAdditiveExpressionParserRuleCall_0()); }
	ruleAdditiveExpression
	{ after(grammarAccess.getRelationalExpressionAccess().getAdditiveExpressionParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationalExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RelationalExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationalExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRelationalExpressionAccess().getGroup_1()); }
	(rule__RelationalExpression__Group_1__0)*
	{ after(grammarAccess.getRelationalExpressionAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RelationalExpression__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RelationalExpression__Group_1__0__Impl
	rule__RelationalExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationalExpression__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRelationalExpressionAccess().getBinaryExpressionLeftAction_1_0()); }
	()
	{ after(grammarAccess.getRelationalExpressionAccess().getBinaryExpressionLeftAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationalExpression__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RelationalExpression__Group_1__1__Impl
	rule__RelationalExpression__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationalExpression__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRelationalExpressionAccess().getOperatorAssignment_1_1()); }
	(rule__RelationalExpression__OperatorAssignment_1_1)
	{ after(grammarAccess.getRelationalExpressionAccess().getOperatorAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationalExpression__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RelationalExpression__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationalExpression__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRelationalExpressionAccess().getRightAssignment_1_2()); }
	(rule__RelationalExpression__RightAssignment_1_2)
	{ after(grammarAccess.getRelationalExpressionAccess().getRightAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AdditiveExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AdditiveExpression__Group__0__Impl
	rule__AdditiveExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AdditiveExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAdditiveExpressionAccess().getMultiplicativeExpressionParserRuleCall_0()); }
	ruleMultiplicativeExpression
	{ after(grammarAccess.getAdditiveExpressionAccess().getMultiplicativeExpressionParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AdditiveExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AdditiveExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AdditiveExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAdditiveExpressionAccess().getGroup_1()); }
	(rule__AdditiveExpression__Group_1__0)*
	{ after(grammarAccess.getAdditiveExpressionAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AdditiveExpression__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AdditiveExpression__Group_1__0__Impl
	rule__AdditiveExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AdditiveExpression__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAdditiveExpressionAccess().getBinaryExpressionLeftAction_1_0()); }
	()
	{ after(grammarAccess.getAdditiveExpressionAccess().getBinaryExpressionLeftAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AdditiveExpression__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AdditiveExpression__Group_1__1__Impl
	rule__AdditiveExpression__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AdditiveExpression__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAdditiveExpressionAccess().getOperatorAssignment_1_1()); }
	(rule__AdditiveExpression__OperatorAssignment_1_1)
	{ after(grammarAccess.getAdditiveExpressionAccess().getOperatorAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AdditiveExpression__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AdditiveExpression__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AdditiveExpression__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAdditiveExpressionAccess().getRightAssignment_1_2()); }
	(rule__AdditiveExpression__RightAssignment_1_2)
	{ after(grammarAccess.getAdditiveExpressionAccess().getRightAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MultiplicativeExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MultiplicativeExpression__Group__0__Impl
	rule__MultiplicativeExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicativeExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultiplicativeExpressionAccess().getMinMaxExpressionParserRuleCall_0()); }
	ruleMinMaxExpression
	{ after(grammarAccess.getMultiplicativeExpressionAccess().getMinMaxExpressionParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicativeExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MultiplicativeExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicativeExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultiplicativeExpressionAccess().getGroup_1()); }
	(rule__MultiplicativeExpression__Group_1__0)*
	{ after(grammarAccess.getMultiplicativeExpressionAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MultiplicativeExpression__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MultiplicativeExpression__Group_1__0__Impl
	rule__MultiplicativeExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicativeExpression__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultiplicativeExpressionAccess().getBinaryExpressionLeftAction_1_0()); }
	()
	{ after(grammarAccess.getMultiplicativeExpressionAccess().getBinaryExpressionLeftAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicativeExpression__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MultiplicativeExpression__Group_1__1__Impl
	rule__MultiplicativeExpression__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicativeExpression__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultiplicativeExpressionAccess().getOperatorAssignment_1_1()); }
	(rule__MultiplicativeExpression__OperatorAssignment_1_1)
	{ after(grammarAccess.getMultiplicativeExpressionAccess().getOperatorAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicativeExpression__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MultiplicativeExpression__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicativeExpression__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultiplicativeExpressionAccess().getRightAssignment_1_2()); }
	(rule__MultiplicativeExpression__RightAssignment_1_2)
	{ after(grammarAccess.getMultiplicativeExpressionAccess().getRightAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MinMaxExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MinMaxExpression__Group__0__Impl
	rule__MinMaxExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MinMaxExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMinMaxExpressionAccess().getUnaryOrTerminalExpressionParserRuleCall_0()); }
	ruleUnaryOrTerminalExpression
	{ after(grammarAccess.getMinMaxExpressionAccess().getUnaryOrTerminalExpressionParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MinMaxExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MinMaxExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MinMaxExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMinMaxExpressionAccess().getGroup_1()); }
	(rule__MinMaxExpression__Group_1__0)*
	{ after(grammarAccess.getMinMaxExpressionAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MinMaxExpression__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MinMaxExpression__Group_1__0__Impl
	rule__MinMaxExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MinMaxExpression__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMinMaxExpressionAccess().getBinaryExpressionLeftAction_1_0()); }
	()
	{ after(grammarAccess.getMinMaxExpressionAccess().getBinaryExpressionLeftAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MinMaxExpression__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MinMaxExpression__Group_1__1__Impl
	rule__MinMaxExpression__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MinMaxExpression__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMinMaxExpressionAccess().getOperatorAssignment_1_1()); }
	(rule__MinMaxExpression__OperatorAssignment_1_1)
	{ after(grammarAccess.getMinMaxExpressionAccess().getOperatorAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MinMaxExpression__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MinMaxExpression__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MinMaxExpression__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMinMaxExpressionAccess().getRightAssignment_1_2()); }
	(rule__MinMaxExpression__RightAssignment_1_2)
	{ after(grammarAccess.getMinMaxExpressionAccess().getRightAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MultiArgExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MultiArgExpression__Group__0__Impl
	rule__MultiArgExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiArgExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultiArgExpressionAccess().getOperatorAssignment_0()); }
	(rule__MultiArgExpression__OperatorAssignment_0)
	{ after(grammarAccess.getMultiArgExpressionAccess().getOperatorAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiArgExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MultiArgExpression__Group__1__Impl
	rule__MultiArgExpression__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiArgExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultiArgExpressionAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getMultiArgExpressionAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiArgExpression__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MultiArgExpression__Group__2__Impl
	rule__MultiArgExpression__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiArgExpression__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultiArgExpressionAccess().getExprsAssignment_2()); }
	(rule__MultiArgExpression__ExprsAssignment_2)
	{ after(grammarAccess.getMultiArgExpressionAccess().getExprsAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiArgExpression__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MultiArgExpression__Group__3__Impl
	rule__MultiArgExpression__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiArgExpression__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultiArgExpressionAccess().getGroup_3()); }
	(rule__MultiArgExpression__Group_3__0)*
	{ after(grammarAccess.getMultiArgExpressionAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiArgExpression__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MultiArgExpression__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiArgExpression__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultiArgExpressionAccess().getRightParenthesisKeyword_4()); }
	')'
	{ after(grammarAccess.getMultiArgExpressionAccess().getRightParenthesisKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MultiArgExpression__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MultiArgExpression__Group_3__0__Impl
	rule__MultiArgExpression__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiArgExpression__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultiArgExpressionAccess().getCommaKeyword_3_0()); }
	','
	{ after(grammarAccess.getMultiArgExpressionAccess().getCommaKeyword_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiArgExpression__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MultiArgExpression__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiArgExpression__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultiArgExpressionAccess().getExprsAssignment_3_1()); }
	(rule__MultiArgExpression__ExprsAssignment_3_1)
	{ after(grammarAccess.getMultiArgExpressionAccess().getExprsAssignment_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ExternalMultiArgExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExternalMultiArgExpression__Group__0__Impl
	rule__ExternalMultiArgExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExternalMultiArgExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExternalMultiArgExpressionAccess().getExternalFunctionAssignment_0()); }
	(rule__ExternalMultiArgExpression__ExternalFunctionAssignment_0)
	{ after(grammarAccess.getExternalMultiArgExpressionAccess().getExternalFunctionAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExternalMultiArgExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExternalMultiArgExpression__Group__1__Impl
	rule__ExternalMultiArgExpression__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ExternalMultiArgExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExternalMultiArgExpressionAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getExternalMultiArgExpressionAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExternalMultiArgExpression__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExternalMultiArgExpression__Group__2__Impl
	rule__ExternalMultiArgExpression__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ExternalMultiArgExpression__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExternalMultiArgExpressionAccess().getExprsAssignment_2()); }
	(rule__ExternalMultiArgExpression__ExprsAssignment_2)
	{ after(grammarAccess.getExternalMultiArgExpressionAccess().getExprsAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExternalMultiArgExpression__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExternalMultiArgExpression__Group__3__Impl
	rule__ExternalMultiArgExpression__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ExternalMultiArgExpression__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExternalMultiArgExpressionAccess().getGroup_3()); }
	(rule__ExternalMultiArgExpression__Group_3__0)*
	{ after(grammarAccess.getExternalMultiArgExpressionAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExternalMultiArgExpression__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExternalMultiArgExpression__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExternalMultiArgExpression__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExternalMultiArgExpressionAccess().getRightParenthesisKeyword_4()); }
	')'
	{ after(grammarAccess.getExternalMultiArgExpressionAccess().getRightParenthesisKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ExternalMultiArgExpression__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExternalMultiArgExpression__Group_3__0__Impl
	rule__ExternalMultiArgExpression__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExternalMultiArgExpression__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExternalMultiArgExpressionAccess().getCommaKeyword_3_0()); }
	','
	{ after(grammarAccess.getExternalMultiArgExpressionAccess().getCommaKeyword_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExternalMultiArgExpression__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExternalMultiArgExpression__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExternalMultiArgExpression__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExternalMultiArgExpressionAccess().getExprsAssignment_3_1()); }
	(rule__ExternalMultiArgExpression__ExprsAssignment_3_1)
	{ after(grammarAccess.getExternalMultiArgExpressionAccess().getExprsAssignment_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__UnaryExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UnaryExpression__Group__0__Impl
	rule__UnaryExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUnaryExpressionAccess().getOperatorAssignment_0()); }
	(rule__UnaryExpression__OperatorAssignment_0)
	{ after(grammarAccess.getUnaryExpressionAccess().getOperatorAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UnaryExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUnaryExpressionAccess().getExprAssignment_1()); }
	(rule__UnaryExpression__ExprAssignment_1)
	{ after(grammarAccess.getUnaryExpressionAccess().getExprAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PolyhedralObject__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PolyhedralObject__Group__0__Impl
	rule__PolyhedralObject__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PolyhedralObject__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPolyhedralObjectAccess().getNameAssignment_0()); }
	(rule__PolyhedralObject__NameAssignment_0)
	{ after(grammarAccess.getPolyhedralObjectAccess().getNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PolyhedralObject__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PolyhedralObject__Group__1__Impl
	rule__PolyhedralObject__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PolyhedralObject__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPolyhedralObjectAccess().getEqualsSignKeyword_1()); }
	'='
	{ after(grammarAccess.getPolyhedralObjectAccess().getEqualsSignKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PolyhedralObject__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PolyhedralObject__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PolyhedralObject__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPolyhedralObjectAccess().getExprAssignment_2()); }
	(rule__PolyhedralObject__ExprAssignment_2)
	{ after(grammarAccess.getPolyhedralObjectAccess().getExprAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__CalculatorExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CalculatorExpression__Group__0__Impl
	rule__CalculatorExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CalculatorExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCalculatorExpressionAccess().getUnaryOrTerminalCalculatorExpressionParserRuleCall_0()); }
	ruleUnaryOrTerminalCalculatorExpression
	{ after(grammarAccess.getCalculatorExpressionAccess().getUnaryOrTerminalCalculatorExpressionParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CalculatorExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CalculatorExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CalculatorExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCalculatorExpressionAccess().getGroup_1()); }
	(rule__CalculatorExpression__Group_1__0)*
	{ after(grammarAccess.getCalculatorExpressionAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__CalculatorExpression__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CalculatorExpression__Group_1__0__Impl
	rule__CalculatorExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CalculatorExpression__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCalculatorExpressionAccess().getBinaryCalculatorExpressionLeftAction_1_0()); }
	()
	{ after(grammarAccess.getCalculatorExpressionAccess().getBinaryCalculatorExpressionLeftAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CalculatorExpression__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CalculatorExpression__Group_1__1__Impl
	rule__CalculatorExpression__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__CalculatorExpression__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCalculatorExpressionAccess().getOperatorAssignment_1_1()); }
	(rule__CalculatorExpression__OperatorAssignment_1_1)
	{ after(grammarAccess.getCalculatorExpressionAccess().getOperatorAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CalculatorExpression__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CalculatorExpression__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CalculatorExpression__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCalculatorExpressionAccess().getRightAssignment_1_2()); }
	(rule__CalculatorExpression__RightAssignment_1_2)
	{ after(grammarAccess.getCalculatorExpressionAccess().getRightAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__CalculatorExpressionTerminal__Group_6__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CalculatorExpressionTerminal__Group_6__0__Impl
	rule__CalculatorExpressionTerminal__Group_6__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CalculatorExpressionTerminal__Group_6__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCalculatorExpressionTerminalAccess().getLeftParenthesisKeyword_6_0()); }
	'('
	{ after(grammarAccess.getCalculatorExpressionTerminalAccess().getLeftParenthesisKeyword_6_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CalculatorExpressionTerminal__Group_6__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CalculatorExpressionTerminal__Group_6__1__Impl
	rule__CalculatorExpressionTerminal__Group_6__2
;
finally {
	restoreStackSize(stackSize);
}

rule__CalculatorExpressionTerminal__Group_6__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCalculatorExpressionTerminalAccess().getCalculatorExpressionParserRuleCall_6_1()); }
	ruleCalculatorExpression
	{ after(grammarAccess.getCalculatorExpressionTerminalAccess().getCalculatorExpressionParserRuleCall_6_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CalculatorExpressionTerminal__Group_6__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CalculatorExpressionTerminal__Group_6__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CalculatorExpressionTerminal__Group_6__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCalculatorExpressionTerminalAccess().getRightParenthesisKeyword_6_2()); }
	')'
	{ after(grammarAccess.getCalculatorExpressionTerminalAccess().getRightParenthesisKeyword_6_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__UnaryCalculatorExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UnaryCalculatorExpression__Group__0__Impl
	rule__UnaryCalculatorExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryCalculatorExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUnaryCalculatorExpressionAccess().getOperatorAssignment_0()); }
	(rule__UnaryCalculatorExpression__OperatorAssignment_0)
	{ after(grammarAccess.getUnaryCalculatorExpressionAccess().getOperatorAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryCalculatorExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UnaryCalculatorExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryCalculatorExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUnaryCalculatorExpressionAccess().getExprAssignment_1()); }
	(rule__UnaryCalculatorExpression__ExprAssignment_1)
	{ after(grammarAccess.getUnaryCalculatorExpressionAccess().getExprAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__VariableDomain__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VariableDomain__Group__0__Impl
	rule__VariableDomain__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDomain__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableDomainAccess().getLeftCurlyBracketKeyword_0()); }
	'{'
	{ after(grammarAccess.getVariableDomainAccess().getLeftCurlyBracketKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDomain__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VariableDomain__Group__1__Impl
	rule__VariableDomain__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDomain__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableDomainAccess().getVariableAssignment_1()); }
	(rule__VariableDomain__VariableAssignment_1)
	{ after(grammarAccess.getVariableDomainAccess().getVariableAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDomain__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VariableDomain__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDomain__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableDomainAccess().getRightCurlyBracketKeyword_2()); }
	'}'
	{ after(grammarAccess.getVariableDomainAccess().getRightCurlyBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RectangularDomain__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RectangularDomain__Group__0__Impl
	rule__RectangularDomain__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RectangularDomain__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRectangularDomainAccess().getLeftSquareBracketKeyword_0()); }
	'['
	{ after(grammarAccess.getRectangularDomainAccess().getLeftSquareBracketKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RectangularDomain__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RectangularDomain__Group__1__Impl
	rule__RectangularDomain__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__RectangularDomain__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRectangularDomainAccess().getUpperBoundsAssignment_1()); }
	(rule__RectangularDomain__UpperBoundsAssignment_1)
	{ after(grammarAccess.getRectangularDomainAccess().getUpperBoundsAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RectangularDomain__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RectangularDomain__Group__2__Impl
	rule__RectangularDomain__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__RectangularDomain__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRectangularDomainAccess().getGroup_2()); }
	(rule__RectangularDomain__Group_2__0)*
	{ after(grammarAccess.getRectangularDomainAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RectangularDomain__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RectangularDomain__Group__3__Impl
	rule__RectangularDomain__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__RectangularDomain__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRectangularDomainAccess().getRightSquareBracketKeyword_3()); }
	']'
	{ after(grammarAccess.getRectangularDomainAccess().getRightSquareBracketKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RectangularDomain__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RectangularDomain__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RectangularDomain__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRectangularDomainAccess().getGroup_4()); }
	(rule__RectangularDomain__Group_4__0)?
	{ after(grammarAccess.getRectangularDomainAccess().getGroup_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RectangularDomain__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RectangularDomain__Group_2__0__Impl
	rule__RectangularDomain__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RectangularDomain__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRectangularDomainAccess().getCommaKeyword_2_0()); }
	','
	{ after(grammarAccess.getRectangularDomainAccess().getCommaKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RectangularDomain__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RectangularDomain__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RectangularDomain__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRectangularDomainAccess().getUpperBoundsAssignment_2_1()); }
	(rule__RectangularDomain__UpperBoundsAssignment_2_1)
	{ after(grammarAccess.getRectangularDomainAccess().getUpperBoundsAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RectangularDomain__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RectangularDomain__Group_4__0__Impl
	rule__RectangularDomain__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RectangularDomain__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRectangularDomainAccess().getAsKeyword_4_0()); }
	'as'
	{ after(grammarAccess.getRectangularDomainAccess().getAsKeyword_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RectangularDomain__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RectangularDomain__Group_4__1__Impl
	rule__RectangularDomain__Group_4__2
;
finally {
	restoreStackSize(stackSize);
}

rule__RectangularDomain__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRectangularDomainAccess().getLeftSquareBracketKeyword_4_1()); }
	'['
	{ after(grammarAccess.getRectangularDomainAccess().getLeftSquareBracketKeyword_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RectangularDomain__Group_4__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RectangularDomain__Group_4__2__Impl
	rule__RectangularDomain__Group_4__3
;
finally {
	restoreStackSize(stackSize);
}

rule__RectangularDomain__Group_4__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRectangularDomainAccess().getIndexNamesAssignment_4_2()); }
	(rule__RectangularDomain__IndexNamesAssignment_4_2)
	{ after(grammarAccess.getRectangularDomainAccess().getIndexNamesAssignment_4_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RectangularDomain__Group_4__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RectangularDomain__Group_4__3__Impl
	rule__RectangularDomain__Group_4__4
;
finally {
	restoreStackSize(stackSize);
}

rule__RectangularDomain__Group_4__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRectangularDomainAccess().getGroup_4_3()); }
	(rule__RectangularDomain__Group_4_3__0)*
	{ after(grammarAccess.getRectangularDomainAccess().getGroup_4_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RectangularDomain__Group_4__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RectangularDomain__Group_4__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RectangularDomain__Group_4__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRectangularDomainAccess().getRightSquareBracketKeyword_4_4()); }
	']'
	{ after(grammarAccess.getRectangularDomainAccess().getRightSquareBracketKeyword_4_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RectangularDomain__Group_4_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RectangularDomain__Group_4_3__0__Impl
	rule__RectangularDomain__Group_4_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RectangularDomain__Group_4_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRectangularDomainAccess().getCommaKeyword_4_3_0()); }
	','
	{ after(grammarAccess.getRectangularDomainAccess().getCommaKeyword_4_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RectangularDomain__Group_4_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RectangularDomain__Group_4_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RectangularDomain__Group_4_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRectangularDomainAccess().getIndexNamesAssignment_4_3_1()); }
	(rule__RectangularDomain__IndexNamesAssignment_4_3_1)
	{ after(grammarAccess.getRectangularDomainAccess().getIndexNamesAssignment_4_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AlphaRoot__ElementsAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAlphaRootAccess().getElementsAlternatives_0()); }
		(rule__AlphaRoot__ElementsAlternatives_0)
		{ after(grammarAccess.getAlphaRootAccess().getElementsAlternatives_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AlphaConstant__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAlphaConstantAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getAlphaConstantAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AlphaConstant__ValueAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAlphaConstantAccess().getValueINTTerminalRuleCall_3_0()); }
		RULE_INT
		{ after(grammarAccess.getAlphaConstantAccess().getValueINTTerminalRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExternalFunction__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExternalFunctionAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getExternalFunctionAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExternalFunction__CardinalityAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExternalFunctionAccess().getCardinalityINTTerminalRuleCall_3_0()); }
		RULE_INT
		{ after(grammarAccess.getExternalFunctionAccess().getCardinalityINTTerminalRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Imports__ImportedNamespaceAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getImportsAccess().getImportedNamespaceQualifiedNameWithWildcardParserRuleCall_1_0()); }
		ruleQualifiedNameWithWildcard
		{ after(grammarAccess.getImportsAccess().getImportedNamespaceQualifiedNameWithWildcardParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AlphaPackage__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAlphaPackageAccess().getNameQualifiedNameParserRuleCall_1_0()); }
		ruleQualifiedName
		{ after(grammarAccess.getAlphaPackageAccess().getNameQualifiedNameParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AlphaPackage__ElementsAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAlphaPackageAccess().getElementsAlternatives_3_0()); }
		(rule__AlphaPackage__ElementsAlternatives_3_0)
		{ after(grammarAccess.getAlphaPackageAccess().getElementsAlternatives_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AlphaSystem__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAlphaSystemAccess().getNameSystemNameParserRuleCall_1_0()); }
		ruleSystemName
		{ after(grammarAccess.getAlphaSystemAccess().getNameSystemNameParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AlphaSystem__ParameterDomainExprAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAlphaSystemAccess().getParameterDomainExprJNIParamDomainParserRuleCall_2_0()); }
		ruleJNIParamDomain
		{ after(grammarAccess.getAlphaSystemAccess().getParameterDomainExprJNIParamDomainParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AlphaSystem__DefinedObjectsAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAlphaSystemAccess().getDefinedObjectsPolyhedralObjectParserRuleCall_3_1_0()); }
		rulePolyhedralObject
		{ after(grammarAccess.getAlphaSystemAccess().getDefinedObjectsPolyhedralObjectParserRuleCall_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AlphaSystem__InputsAssignment_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAlphaSystemAccess().getInputsInputVariableParserRuleCall_4_1_0()); }
		ruleInputVariable
		{ after(grammarAccess.getAlphaSystemAccess().getInputsInputVariableParserRuleCall_4_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AlphaSystem__OutputsAssignment_5_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAlphaSystemAccess().getOutputsOutputVariableParserRuleCall_5_1_0()); }
		ruleOutputVariable
		{ after(grammarAccess.getAlphaSystemAccess().getOutputsOutputVariableParserRuleCall_5_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AlphaSystem__LocalsAssignment_6_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAlphaSystemAccess().getLocalsLocalVariableParserRuleCall_6_1_0()); }
		ruleLocalVariable
		{ after(grammarAccess.getAlphaSystemAccess().getLocalsLocalVariableParserRuleCall_6_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AlphaSystem__FuzzyVariablesAssignment_7_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAlphaSystemAccess().getFuzzyVariablesFuzzyVariableParserRuleCall_7_1_0()); }
		ruleFuzzyVariable
		{ after(grammarAccess.getAlphaSystemAccess().getFuzzyVariablesFuzzyVariableParserRuleCall_7_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AlphaSystem__WhileDomainExprAssignment_8_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAlphaSystemAccess().getWhileDomainExprCalculatorExpressionParserRuleCall_8_1_0()); }
		ruleCalculatorExpression
		{ after(grammarAccess.getAlphaSystemAccess().getWhileDomainExprCalculatorExpressionParserRuleCall_8_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AlphaSystem__TestExpressionAssignment_8_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAlphaSystemAccess().getTestExpressionAlphaExpressionParserRuleCall_8_4_0()); }
		ruleAlphaExpression
		{ after(grammarAccess.getAlphaSystemAccess().getTestExpressionAlphaExpressionParserRuleCall_8_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AlphaSystem__UseEquationsAssignment_9_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAlphaSystemAccess().getUseEquationsUseEquationParserRuleCall_9_1_0()); }
		ruleUseEquation
		{ after(grammarAccess.getAlphaSystemAccess().getUseEquationsUseEquationParserRuleCall_9_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AlphaSystem__EquationsAssignment_9_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAlphaSystemAccess().getEquationsStandardEquationParserRuleCall_9_2_0()); }
		ruleStandardEquation
		{ after(grammarAccess.getAlphaSystemAccess().getEquationsStandardEquationParserRuleCall_9_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__InputVariable__NameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInputVariableAccess().getNameIDTerminalRuleCall_0_0()); }
		RULE_ID
		{ after(grammarAccess.getInputVariableAccess().getNameIDTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__InputVariable__DomainExprAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInputVariableAccess().getDomainExprCalculatorExpressionParserRuleCall_2_0()); }
		ruleCalculatorExpression
		{ after(grammarAccess.getInputVariableAccess().getDomainExprCalculatorExpressionParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OutputVariable__NameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOutputVariableAccess().getNameIDTerminalRuleCall_0_0()); }
		RULE_ID
		{ after(grammarAccess.getOutputVariableAccess().getNameIDTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OutputVariable__DomainExprAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOutputVariableAccess().getDomainExprCalculatorExpressionParserRuleCall_2_0()); }
		ruleCalculatorExpression
		{ after(grammarAccess.getOutputVariableAccess().getDomainExprCalculatorExpressionParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LocalVariable__NameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLocalVariableAccess().getNameIDTerminalRuleCall_0_0()); }
		RULE_ID
		{ after(grammarAccess.getLocalVariableAccess().getNameIDTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LocalVariable__DomainExprAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLocalVariableAccess().getDomainExprCalculatorExpressionParserRuleCall_2_0()); }
		ruleCalculatorExpression
		{ after(grammarAccess.getLocalVariableAccess().getDomainExprCalculatorExpressionParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FuzzyVariable__NameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFuzzyVariableAccess().getNameIDTerminalRuleCall_0_0()); }
		RULE_ID
		{ after(grammarAccess.getFuzzyVariableAccess().getNameIDTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FuzzyVariable__DomainExprAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFuzzyVariableAccess().getDomainExprCalculatorExpressionParserRuleCall_2_0()); }
		ruleCalculatorExpression
		{ after(grammarAccess.getFuzzyVariableAccess().getDomainExprCalculatorExpressionParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__JNIDomain__IslStringAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getJNIDomainAccess().getIslStringAISLSetParserRuleCall_0()); }
		ruleAISLSet
		{ after(grammarAccess.getJNIDomainAccess().getIslStringAISLSetParserRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__JNIDomainInArrayNotation__IslStringAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getJNIDomainInArrayNotationAccess().getIslStringAISLStringParserRuleCall_2_0()); }
		ruleAISLString
		{ after(grammarAccess.getJNIDomainInArrayNotationAccess().getIslStringAISLStringParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__JNIParamDomain__IslStringAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getJNIParamDomainAccess().getIslStringAParamDomainParserRuleCall_0()); }
		ruleAParamDomain
		{ after(grammarAccess.getJNIParamDomainAccess().getIslStringAParamDomainParserRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__JNIRelation__IslStringAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getJNIRelationAccess().getIslStringAISLRelationParserRuleCall_0()); }
		ruleAISLRelation
		{ after(grammarAccess.getJNIRelationAccess().getIslStringAISLRelationParserRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__JNIFunction__AlphaStringAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getJNIFunctionAccess().getAlphaStringAAlphaFunctionParserRuleCall_0()); }
		ruleAAlphaFunction
		{ after(grammarAccess.getJNIFunctionAccess().getAlphaStringAAlphaFunctionParserRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__JNIFunctionInArrayNotation__ArrayNotationAssignment_2_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getJNIFunctionInArrayNotationAccess().getArrayNotationAISLExpressionParserRuleCall_2_0_0()); }
		ruleAISLExpression
		{ after(grammarAccess.getJNIFunctionInArrayNotationAccess().getArrayNotationAISLExpressionParserRuleCall_2_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__JNIFunctionInArrayNotation__ArrayNotationAssignment_2_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getJNIFunctionInArrayNotationAccess().getArrayNotationAISLExpressionParserRuleCall_2_1_1_0()); }
		ruleAISLExpression
		{ after(grammarAccess.getJNIFunctionInArrayNotationAccess().getArrayNotationAISLExpressionParserRuleCall_2_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StandardEquation__VariableAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStandardEquationAccess().getVariableVariableCrossReference_0_0()); }
		(
			{ before(grammarAccess.getStandardEquationAccess().getVariableVariableIDTerminalRuleCall_0_0_1()); }
			RULE_ID
			{ after(grammarAccess.getStandardEquationAccess().getVariableVariableIDTerminalRuleCall_0_0_1()); }
		)
		{ after(grammarAccess.getStandardEquationAccess().getVariableVariableCrossReference_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StandardEquation__IndexNamesAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStandardEquationAccess().getIndexNamesIndexNameParserRuleCall_1_1_0()); }
		ruleIndexName
		{ after(grammarAccess.getStandardEquationAccess().getIndexNamesIndexNameParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StandardEquation__IndexNamesAssignment_1_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStandardEquationAccess().getIndexNamesIndexNameParserRuleCall_1_2_1_0()); }
		ruleIndexName
		{ after(grammarAccess.getStandardEquationAccess().getIndexNamesIndexNameParserRuleCall_1_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StandardEquation__ExprAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStandardEquationAccess().getExprAlphaExpressionParserRuleCall_3_0()); }
		ruleAlphaExpression
		{ after(grammarAccess.getStandardEquationAccess().getExprAlphaExpressionParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UseEquation__InstantiationDomainExprAssignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUseEquationAccess().getInstantiationDomainExprCalculatorExpressionParserRuleCall_0_1_0()); }
		ruleCalculatorExpression
		{ after(grammarAccess.getUseEquationAccess().getInstantiationDomainExprCalculatorExpressionParserRuleCall_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UseEquation__SubsystemDimsAssignment_0_2_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUseEquationAccess().getSubsystemDimsIndexNameParserRuleCall_0_2_1_1_0()); }
		ruleIndexName
		{ after(grammarAccess.getUseEquationAccess().getSubsystemDimsIndexNameParserRuleCall_0_2_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UseEquation__SubsystemDimsAssignment_0_2_1_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUseEquationAccess().getSubsystemDimsIndexNameParserRuleCall_0_2_1_2_1_0()); }
		ruleIndexName
		{ after(grammarAccess.getUseEquationAccess().getSubsystemDimsIndexNameParserRuleCall_0_2_1_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UseEquation__OutputExprsAssignment_2_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUseEquationAccess().getOutputExprsAlphaExpressionParserRuleCall_2_0_0()); }
		ruleAlphaExpression
		{ after(grammarAccess.getUseEquationAccess().getOutputExprsAlphaExpressionParserRuleCall_2_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UseEquation__OutputExprsAssignment_2_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUseEquationAccess().getOutputExprsAlphaExpressionParserRuleCall_2_1_1_0()); }
		ruleAlphaExpression
		{ after(grammarAccess.getUseEquationAccess().getOutputExprsAlphaExpressionParserRuleCall_2_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UseEquation__SystemAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUseEquationAccess().getSystemAlphaSystemCrossReference_5_0()); }
		(
			{ before(grammarAccess.getUseEquationAccess().getSystemAlphaSystemQualifiedNameParserRuleCall_5_0_1()); }
			ruleQualifiedName
			{ after(grammarAccess.getUseEquationAccess().getSystemAlphaSystemQualifiedNameParserRuleCall_5_0_1()); }
		)
		{ after(grammarAccess.getUseEquationAccess().getSystemAlphaSystemCrossReference_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UseEquation__CallParamsExprAssignment_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUseEquationAccess().getCallParamsExprJNIFunctionInArrayNotationParserRuleCall_6_0()); }
		ruleJNIFunctionInArrayNotation
		{ after(grammarAccess.getUseEquationAccess().getCallParamsExprJNIFunctionInArrayNotationParserRuleCall_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UseEquation__InputExprsAssignment_8_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUseEquationAccess().getInputExprsAlphaExpressionParserRuleCall_8_0_0()); }
		ruleAlphaExpression
		{ after(grammarAccess.getUseEquationAccess().getInputExprsAlphaExpressionParserRuleCall_8_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UseEquation__InputExprsAssignment_8_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUseEquationAccess().getInputExprsAlphaExpressionParserRuleCall_8_1_1_0()); }
		ruleAlphaExpression
		{ after(grammarAccess.getUseEquationAccess().getInputExprsAlphaExpressionParserRuleCall_8_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfExpression__CondExprAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIfExpressionAccess().getCondExprAlphaExpressionParserRuleCall_1_0()); }
		ruleAlphaExpression
		{ after(grammarAccess.getIfExpressionAccess().getCondExprAlphaExpressionParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfExpression__ThenExprAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIfExpressionAccess().getThenExprAlphaExpressionParserRuleCall_3_0()); }
		ruleAlphaExpression
		{ after(grammarAccess.getIfExpressionAccess().getThenExprAlphaExpressionParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfExpression__ElseExprAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIfExpressionAccess().getElseExprAlphaExpressionParserRuleCall_5_0()); }
		ruleAlphaExpression
		{ after(grammarAccess.getIfExpressionAccess().getElseExprAlphaExpressionParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RestrictExpression__DomainExprAssignment_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRestrictExpressionAccess().getDomainExprAlternatives_0_0_0()); }
		(rule__RestrictExpression__DomainExprAlternatives_0_0_0)
		{ after(grammarAccess.getRestrictExpressionAccess().getDomainExprAlternatives_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RestrictExpression__ExprAssignment_0_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRestrictExpressionAccess().getExprAlphaExpressionParserRuleCall_0_2_0()); }
		ruleAlphaExpression
		{ after(grammarAccess.getRestrictExpressionAccess().getExprAlphaExpressionParserRuleCall_0_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RestrictExpression__DomainExprAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRestrictExpressionAccess().getDomainExprCalculatorExpressionParserRuleCall_1_1_0()); }
		ruleCalculatorExpression
		{ after(grammarAccess.getRestrictExpressionAccess().getDomainExprCalculatorExpressionParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RestrictExpression__ExprAssignment_1_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRestrictExpressionAccess().getExprAlphaExpressionParserRuleCall_1_4_0()); }
		ruleAlphaExpression
		{ after(grammarAccess.getRestrictExpressionAccess().getExprAlphaExpressionParserRuleCall_1_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AutoRestrictExpression__ExprAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAutoRestrictExpressionAccess().getExprAlphaExpressionParserRuleCall_2_0()); }
		ruleAlphaExpression
		{ after(grammarAccess.getAutoRestrictExpressionAccess().getExprAlphaExpressionParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CaseExpression__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCaseExpressionAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getCaseExpressionAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CaseExpression__ExprsAssignment_3_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCaseExpressionAccess().getExprsAlphaExpressionParserRuleCall_3_0_0()); }
		ruleAlphaExpression
		{ after(grammarAccess.getCaseExpressionAccess().getExprsAlphaExpressionParserRuleCall_3_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DependenceExpression__FunctionExprAssignment_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDependenceExpressionAccess().getFunctionExprJNIFunctionParserRuleCall_0_0_0()); }
		ruleJNIFunction
		{ after(grammarAccess.getDependenceExpressionAccess().getFunctionExprJNIFunctionParserRuleCall_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DependenceExpression__ExprAssignment_0_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDependenceExpressionAccess().getExprAlphaTerminalExpressionParserRuleCall_0_2_0()); }
		ruleAlphaTerminalExpression
		{ after(grammarAccess.getDependenceExpressionAccess().getExprAlphaTerminalExpressionParserRuleCall_0_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DependenceExpression__ExprAssignment_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDependenceExpressionAccess().getExprVariableExpressionParserRuleCall_1_0_0()); }
		ruleVariableExpression
		{ after(grammarAccess.getDependenceExpressionAccess().getExprVariableExpressionParserRuleCall_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DependenceExpression__FunctionExprAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDependenceExpressionAccess().getFunctionExprJNIFunctionInArrayNotationParserRuleCall_1_1_0()); }
		ruleJNIFunctionInArrayNotation
		{ after(grammarAccess.getDependenceExpressionAccess().getFunctionExprJNIFunctionInArrayNotationParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IndexExpression__FunctionExprAssignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIndexExpressionAccess().getFunctionExprJNIFunctionParserRuleCall_0_1_0()); }
		ruleJNIFunction
		{ after(grammarAccess.getIndexExpressionAccess().getFunctionExprJNIFunctionParserRuleCall_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IndexExpression__FunctionExprAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIndexExpressionAccess().getFunctionExprJNIFunctionInArrayNotationParserRuleCall_1_0()); }
		ruleJNIFunctionInArrayNotation
		{ after(grammarAccess.getIndexExpressionAccess().getFunctionExprJNIFunctionInArrayNotationParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ReduceExpression__OperatorAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getReduceExpressionAccess().getOperatorAREDUCTION_OPParserRuleCall_2_0()); }
		ruleAREDUCTION_OP
		{ after(grammarAccess.getReduceExpressionAccess().getOperatorAREDUCTION_OPParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ReduceExpression__ProjectionExprAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getReduceExpressionAccess().getProjectionExprAlternatives_4_0()); }
		(rule__ReduceExpression__ProjectionExprAlternatives_4_0)
		{ after(grammarAccess.getReduceExpressionAccess().getProjectionExprAlternatives_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ReduceExpression__BodyAssignment_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getReduceExpressionAccess().getBodyAlphaExpressionParserRuleCall_6_0()); }
		ruleAlphaExpression
		{ after(grammarAccess.getReduceExpressionAccess().getBodyAlphaExpressionParserRuleCall_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExternalReduceExpression__ExternalFunctionAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExternalReduceExpressionAccess().getExternalFunctionExternalFunctionCrossReference_2_0()); }
		(
			{ before(grammarAccess.getExternalReduceExpressionAccess().getExternalFunctionExternalFunctionIDTerminalRuleCall_2_0_1()); }
			RULE_ID
			{ after(grammarAccess.getExternalReduceExpressionAccess().getExternalFunctionExternalFunctionIDTerminalRuleCall_2_0_1()); }
		)
		{ after(grammarAccess.getExternalReduceExpressionAccess().getExternalFunctionExternalFunctionCrossReference_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExternalReduceExpression__ProjectionExprAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExternalReduceExpressionAccess().getProjectionExprAlternatives_4_0()); }
		(rule__ExternalReduceExpression__ProjectionExprAlternatives_4_0)
		{ after(grammarAccess.getExternalReduceExpressionAccess().getProjectionExprAlternatives_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExternalReduceExpression__BodyAssignment_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExternalReduceExpressionAccess().getBodyAlphaExpressionParserRuleCall_6_0()); }
		ruleAlphaExpression
		{ after(grammarAccess.getExternalReduceExpressionAccess().getBodyAlphaExpressionParserRuleCall_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArgReduceExpression__OperatorAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getArgReduceExpressionAccess().getOperatorAREDUCTION_OPParserRuleCall_2_0()); }
		ruleAREDUCTION_OP
		{ after(grammarAccess.getArgReduceExpressionAccess().getOperatorAREDUCTION_OPParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArgReduceExpression__ProjectionExprAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getArgReduceExpressionAccess().getProjectionExprAlternatives_4_0()); }
		(rule__ArgReduceExpression__ProjectionExprAlternatives_4_0)
		{ after(grammarAccess.getArgReduceExpressionAccess().getProjectionExprAlternatives_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArgReduceExpression__BodyAssignment_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getArgReduceExpressionAccess().getBodyAlphaExpressionParserRuleCall_6_0()); }
		ruleAlphaExpression
		{ after(grammarAccess.getArgReduceExpressionAccess().getBodyAlphaExpressionParserRuleCall_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExternalArgReduceExpression__ExternalFunctionAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExternalArgReduceExpressionAccess().getExternalFunctionExternalFunctionCrossReference_2_0()); }
		(
			{ before(grammarAccess.getExternalArgReduceExpressionAccess().getExternalFunctionExternalFunctionIDTerminalRuleCall_2_0_1()); }
			RULE_ID
			{ after(grammarAccess.getExternalArgReduceExpressionAccess().getExternalFunctionExternalFunctionIDTerminalRuleCall_2_0_1()); }
		)
		{ after(grammarAccess.getExternalArgReduceExpressionAccess().getExternalFunctionExternalFunctionCrossReference_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExternalArgReduceExpression__ProjectionExprAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExternalArgReduceExpressionAccess().getProjectionExprAlternatives_4_0()); }
		(rule__ExternalArgReduceExpression__ProjectionExprAlternatives_4_0)
		{ after(grammarAccess.getExternalArgReduceExpressionAccess().getProjectionExprAlternatives_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExternalArgReduceExpression__BodyAssignment_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExternalArgReduceExpressionAccess().getBodyAlphaExpressionParserRuleCall_6_0()); }
		ruleAlphaExpression
		{ after(grammarAccess.getExternalArgReduceExpressionAccess().getBodyAlphaExpressionParserRuleCall_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConvolutionExpression__KernelDomainExprAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConvolutionExpressionAccess().getKernelDomainExprCalculatorExpressionParserRuleCall_2_0()); }
		ruleCalculatorExpression
		{ after(grammarAccess.getConvolutionExpressionAccess().getKernelDomainExprCalculatorExpressionParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConvolutionExpression__KernelExpressionAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConvolutionExpressionAccess().getKernelExpressionAlphaExpressionParserRuleCall_4_0()); }
		ruleAlphaExpression
		{ after(grammarAccess.getConvolutionExpressionAccess().getKernelExpressionAlphaExpressionParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConvolutionExpression__DataExpressionAssignment_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConvolutionExpressionAccess().getDataExpressionAlphaExpressionParserRuleCall_6_0()); }
		ruleAlphaExpression
		{ after(grammarAccess.getConvolutionExpressionAccess().getDataExpressionAlphaExpressionParserRuleCall_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectExpression__RelationExprAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSelectExpressionAccess().getRelationExprCalculatorExpressionParserRuleCall_1_0()); }
		ruleCalculatorExpression
		{ after(grammarAccess.getSelectExpressionAccess().getRelationExprCalculatorExpressionParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectExpression__ExprAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSelectExpressionAccess().getExprAlphaTerminalExpressionParserRuleCall_3_0()); }
		ruleAlphaTerminalExpression
		{ after(grammarAccess.getSelectExpressionAccess().getExprAlphaTerminalExpressionParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OrExpression__OperatorAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOrExpressionAccess().getOperatorAOrOPParserRuleCall_1_1_0()); }
		ruleAOrOP
		{ after(grammarAccess.getOrExpressionAccess().getOperatorAOrOPParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OrExpression__RightAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOrExpressionAccess().getRightAndExpressionParserRuleCall_1_2_0()); }
		ruleAndExpression
		{ after(grammarAccess.getOrExpressionAccess().getRightAndExpressionParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AndExpression__OperatorAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAndExpressionAccess().getOperatorAAndOPParserRuleCall_1_1_0()); }
		ruleAAndOP
		{ after(grammarAccess.getAndExpressionAccess().getOperatorAAndOPParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AndExpression__RightAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAndExpressionAccess().getRightRelationalExpressionParserRuleCall_1_2_0()); }
		ruleRelationalExpression
		{ after(grammarAccess.getAndExpressionAccess().getRightRelationalExpressionParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationalExpression__OperatorAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRelationalExpressionAccess().getOperatorARelationalOPParserRuleCall_1_1_0()); }
		ruleARelationalOP
		{ after(grammarAccess.getRelationalExpressionAccess().getOperatorARelationalOPParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationalExpression__RightAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRelationalExpressionAccess().getRightAdditiveExpressionParserRuleCall_1_2_0()); }
		ruleAdditiveExpression
		{ after(grammarAccess.getRelationalExpressionAccess().getRightAdditiveExpressionParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AdditiveExpression__OperatorAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAdditiveExpressionAccess().getOperatorAAdditiveOPParserRuleCall_1_1_0()); }
		ruleAAdditiveOP
		{ after(grammarAccess.getAdditiveExpressionAccess().getOperatorAAdditiveOPParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AdditiveExpression__RightAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAdditiveExpressionAccess().getRightMultiplicativeExpressionParserRuleCall_1_2_0()); }
		ruleMultiplicativeExpression
		{ after(grammarAccess.getAdditiveExpressionAccess().getRightMultiplicativeExpressionParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicativeExpression__OperatorAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMultiplicativeExpressionAccess().getOperatorAMultiplicativeOPParserRuleCall_1_1_0()); }
		ruleAMultiplicativeOP
		{ after(grammarAccess.getMultiplicativeExpressionAccess().getOperatorAMultiplicativeOPParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicativeExpression__RightAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMultiplicativeExpressionAccess().getRightMinMaxExpressionParserRuleCall_1_2_0()); }
		ruleMinMaxExpression
		{ after(grammarAccess.getMultiplicativeExpressionAccess().getRightMinMaxExpressionParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MinMaxExpression__OperatorAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMinMaxExpressionAccess().getOperatorAMINMAX_OPParserRuleCall_1_1_0()); }
		ruleAMINMAX_OP
		{ after(grammarAccess.getMinMaxExpressionAccess().getOperatorAMINMAX_OPParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MinMaxExpression__RightAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMinMaxExpressionAccess().getRightUnaryOrTerminalExpressionParserRuleCall_1_2_0()); }
		ruleUnaryOrTerminalExpression
		{ after(grammarAccess.getMinMaxExpressionAccess().getRightUnaryOrTerminalExpressionParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiArgExpression__OperatorAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMultiArgExpressionAccess().getOperatorAREDUCTION_OPParserRuleCall_0_0()); }
		ruleAREDUCTION_OP
		{ after(grammarAccess.getMultiArgExpressionAccess().getOperatorAREDUCTION_OPParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiArgExpression__ExprsAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMultiArgExpressionAccess().getExprsAlphaExpressionParserRuleCall_2_0()); }
		ruleAlphaExpression
		{ after(grammarAccess.getMultiArgExpressionAccess().getExprsAlphaExpressionParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiArgExpression__ExprsAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMultiArgExpressionAccess().getExprsAlphaExpressionParserRuleCall_3_1_0()); }
		ruleAlphaExpression
		{ after(grammarAccess.getMultiArgExpressionAccess().getExprsAlphaExpressionParserRuleCall_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExternalMultiArgExpression__ExternalFunctionAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExternalMultiArgExpressionAccess().getExternalFunctionExternalFunctionCrossReference_0_0()); }
		(
			{ before(grammarAccess.getExternalMultiArgExpressionAccess().getExternalFunctionExternalFunctionIDTerminalRuleCall_0_0_1()); }
			RULE_ID
			{ after(grammarAccess.getExternalMultiArgExpressionAccess().getExternalFunctionExternalFunctionIDTerminalRuleCall_0_0_1()); }
		)
		{ after(grammarAccess.getExternalMultiArgExpressionAccess().getExternalFunctionExternalFunctionCrossReference_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExternalMultiArgExpression__ExprsAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExternalMultiArgExpressionAccess().getExprsAlphaExpressionParserRuleCall_2_0()); }
		ruleAlphaExpression
		{ after(grammarAccess.getExternalMultiArgExpressionAccess().getExprsAlphaExpressionParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExternalMultiArgExpression__ExprsAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExternalMultiArgExpressionAccess().getExprsAlphaExpressionParserRuleCall_3_1_0()); }
		ruleAlphaExpression
		{ after(grammarAccess.getExternalMultiArgExpressionAccess().getExprsAlphaExpressionParserRuleCall_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpression__OperatorAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUnaryExpressionAccess().getOperatorAUnaryOPParserRuleCall_0_0()); }
		ruleAUnaryOP
		{ after(grammarAccess.getUnaryExpressionAccess().getOperatorAUnaryOPParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpression__ExprAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUnaryExpressionAccess().getExprAlphaTerminalExpressionParserRuleCall_1_0()); }
		ruleAlphaTerminalExpression
		{ after(grammarAccess.getUnaryExpressionAccess().getExprAlphaTerminalExpressionParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableExpression__VariableAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVariableExpressionAccess().getVariableVariableCrossReference_0()); }
		(
			{ before(grammarAccess.getVariableExpressionAccess().getVariableVariableIDTerminalRuleCall_0_1()); }
			RULE_ID
			{ after(grammarAccess.getVariableExpressionAccess().getVariableVariableIDTerminalRuleCall_0_1()); }
		)
		{ after(grammarAccess.getVariableExpressionAccess().getVariableVariableCrossReference_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanExpression__ValueAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBooleanExpressionAccess().getValueBOOLEANTerminalRuleCall_0()); }
		RULE_BOOLEAN
		{ after(grammarAccess.getBooleanExpressionAccess().getValueBOOLEANTerminalRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IntegerExpression__ValueAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIntegerExpressionAccess().getValueINTTerminalRuleCall_0()); }
		RULE_INT
		{ after(grammarAccess.getIntegerExpressionAccess().getValueINTTerminalRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RealExpression__ValueAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRealExpressionAccess().getValueFLOATTerminalRuleCall_0()); }
		RULE_FLOAT
		{ after(grammarAccess.getRealExpressionAccess().getValueFLOATTerminalRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PolyhedralObject__NameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPolyhedralObjectAccess().getNameIDTerminalRuleCall_0_0()); }
		RULE_ID
		{ after(grammarAccess.getPolyhedralObjectAccess().getNameIDTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PolyhedralObject__ExprAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPolyhedralObjectAccess().getExprCalculatorExpressionParserRuleCall_2_0()); }
		ruleCalculatorExpression
		{ after(grammarAccess.getPolyhedralObjectAccess().getExprCalculatorExpressionParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CalculatorExpression__OperatorAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCalculatorExpressionAccess().getOperatorABinaryCalcOpParserRuleCall_1_1_0()); }
		ruleABinaryCalcOp
		{ after(grammarAccess.getCalculatorExpressionAccess().getOperatorABinaryCalcOpParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CalculatorExpression__RightAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCalculatorExpressionAccess().getRightUnaryOrTerminalCalculatorExpressionParserRuleCall_1_2_0()); }
		ruleUnaryOrTerminalCalculatorExpression
		{ after(grammarAccess.getCalculatorExpressionAccess().getRightUnaryOrTerminalCalculatorExpressionParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryCalculatorExpression__OperatorAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUnaryCalculatorExpressionAccess().getOperatorAUnaryCalcOpParserRuleCall_0_0()); }
		ruleAUnaryCalcOp
		{ after(grammarAccess.getUnaryCalculatorExpressionAccess().getOperatorAUnaryCalcOpParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryCalculatorExpression__ExprAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUnaryCalculatorExpressionAccess().getExprCalculatorExpressionTerminalParserRuleCall_1_0()); }
		ruleCalculatorExpressionTerminal
		{ after(grammarAccess.getUnaryCalculatorExpressionAccess().getExprCalculatorExpressionTerminalParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDomain__VariableAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVariableDomainAccess().getVariableVariableCrossReference_1_0()); }
		(
			{ before(grammarAccess.getVariableDomainAccess().getVariableVariableIDTerminalRuleCall_1_0_1()); }
			RULE_ID
			{ after(grammarAccess.getVariableDomainAccess().getVariableVariableIDTerminalRuleCall_1_0_1()); }
		)
		{ after(grammarAccess.getVariableDomainAccess().getVariableVariableCrossReference_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RectangularDomain__UpperBoundsAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRectangularDomainAccess().getUpperBoundsIndexNameParserRuleCall_1_0()); }
		ruleIndexName
		{ after(grammarAccess.getRectangularDomainAccess().getUpperBoundsIndexNameParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RectangularDomain__UpperBoundsAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRectangularDomainAccess().getUpperBoundsIndexNameParserRuleCall_2_1_0()); }
		ruleIndexName
		{ after(grammarAccess.getRectangularDomainAccess().getUpperBoundsIndexNameParserRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RectangularDomain__IndexNamesAssignment_4_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRectangularDomainAccess().getIndexNamesIndexNameParserRuleCall_4_2_0()); }
		ruleIndexName
		{ after(grammarAccess.getRectangularDomainAccess().getIndexNamesIndexNameParserRuleCall_4_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RectangularDomain__IndexNamesAssignment_4_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRectangularDomainAccess().getIndexNamesIndexNameParserRuleCall_4_3_1_0()); }
		ruleIndexName
		{ after(grammarAccess.getRectangularDomainAccess().getIndexNamesIndexNameParserRuleCall_4_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DefinedObject__ObjectAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDefinedObjectAccess().getObjectPolyhedralObjectCrossReference_0()); }
		(
			{ before(grammarAccess.getDefinedObjectAccess().getObjectPolyhedralObjectIDTerminalRuleCall_0_1()); }
			RULE_ID
			{ after(grammarAccess.getDefinedObjectAccess().getObjectPolyhedralObjectIDTerminalRuleCall_0_1()); }
		)
		{ after(grammarAccess.getDefinedObjectAccess().getObjectPolyhedralObjectCrossReference_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

RULE_BOOLEAN : ('true'|'false');

RULE_FLOAT : ('0'..'9')+ '.' ('0'..'9')+;

RULE_STRING : '"' ('\\' .|~(('\\'|'"')))* '"';

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
