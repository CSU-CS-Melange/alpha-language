/*
 * generated by Xtext 2.18.0.M3
 */
package alpha.model.ide.contentassist.antlr;

import alpha.model.ide.contentassist.antlr.internal.InternalAlphaParser;
import alpha.model.services.AlphaGrammarAccess;
import com.google.common.collect.ImmutableMap;
import com.google.inject.Inject;
import com.google.inject.Singleton;
import java.util.Map;
import org.eclipse.xtext.AbstractElement;
import org.eclipse.xtext.ide.editor.contentassist.antlr.AbstractContentAssistParser;

public class AlphaParser extends AbstractContentAssistParser {

	@Singleton
	public static final class NameMappings {
		
		private final Map<AbstractElement, String> mappings;
		
		@Inject
		public NameMappings(AlphaGrammarAccess grammarAccess) {
			ImmutableMap.Builder<AbstractElement, String> builder = ImmutableMap.builder();
			init(builder, grammarAccess);
			this.mappings = builder.build();
		}
		
		public String getRuleName(AbstractElement element) {
			return mappings.get(element);
		}
		
		private static void init(ImmutableMap.Builder<AbstractElement, String> builder, AlphaGrammarAccess grammarAccess) {
			builder.put(grammarAccess.getAlphaRootAccess().getElementsAlternatives_1_0(), "rule__AlphaRoot__ElementsAlternatives_1_0");
			builder.put(grammarAccess.getAlphaPackageAccess().getElementsAlternatives_3_0(), "rule__AlphaPackage__ElementsAlternatives_3_0");
			builder.put(grammarAccess.getAlphaSystemAccess().getAlternatives_4_1(), "rule__AlphaSystem__Alternatives_4_1");
			builder.put(grammarAccess.getAlphaSystemAccess().getAlternatives_5_1(), "rule__AlphaSystem__Alternatives_5_1");
			builder.put(grammarAccess.getAlphaSystemAccess().getAlternatives_6_1(), "rule__AlphaSystem__Alternatives_6_1");
			builder.put(grammarAccess.getSystemBodyAccess().getAlternatives_1(), "rule__SystemBody__Alternatives_1");
			builder.put(grammarAccess.getFuzzyVariableUseAccess().getAlternatives(), "rule__FuzzyVariableUse__Alternatives");
			builder.put(grammarAccess.getAISLSetAccess().getAlternatives(), "rule__AISLSet__Alternatives");
			builder.put(grammarAccess.getAISLStringAccess().getAlternatives(), "rule__AISLString__Alternatives");
			builder.put(grammarAccess.getAISLExpressionAccess().getAlternatives(), "rule__AISLExpression__Alternatives");
			builder.put(grammarAccess.getAISLPolynomialExpressionAccess().getAlternatives(), "rule__AISLPolynomialExpression__Alternatives");
			builder.put(grammarAccess.getAISLExpressionLiteralAccess().getAlternatives_1(), "rule__AISLExpressionLiteral__Alternatives_1");
			builder.put(grammarAccess.getAISLExpressionOperatorAccess().getAlternatives(), "rule__AISLExpressionOperator__Alternatives");
			builder.put(grammarAccess.getAlphaFunctionTerminalExpressionAccess().getAlternatives(), "rule__AlphaFunctionTerminalExpression__Alternatives");
			builder.put(grammarAccess.getAISLFuzzyExpressionAccess().getAlternatives(), "rule__AISLFuzzyExpression__Alternatives");
			builder.put(grammarAccess.getEquationAccess().getAlternatives(), "rule__Equation__Alternatives");
			builder.put(grammarAccess.getAlphaExpressionAccess().getAlternatives(), "rule__AlphaExpression__Alternatives");
			builder.put(grammarAccess.getAlphaTerminalExpressionAccess().getAlternatives(), "rule__AlphaTerminalExpression__Alternatives");
			builder.put(grammarAccess.getAlphaUnaryTerminalExpressionAccess().getAlternatives(), "rule__AlphaUnaryTerminalExpression__Alternatives");
			builder.put(grammarAccess.getReductionsAccess().getAlternatives(), "rule__Reductions__Alternatives");
			builder.put(grammarAccess.getRestrictExpressionAccess().getAlternatives(), "rule__RestrictExpression__Alternatives");
			builder.put(grammarAccess.getRestrictExpressionAccess().getDomainExprAlternatives_0_0_0(), "rule__RestrictExpression__DomainExprAlternatives_0_0_0");
			builder.put(grammarAccess.getDependenceExpressionAccess().getAlternatives(), "rule__DependenceExpression__Alternatives");
			builder.put(grammarAccess.getFuzzyDependenceExpressionAccess().getAlternatives(), "rule__FuzzyDependenceExpression__Alternatives");
			builder.put(grammarAccess.getIndexExpressionAccess().getAlternatives(), "rule__IndexExpression__Alternatives");
			builder.put(grammarAccess.getPolynomialIndexExpressionAccess().getAlternatives(), "rule__PolynomialIndexExpression__Alternatives");
			builder.put(grammarAccess.getFuzzyIndexExpressionAccess().getAlternatives(), "rule__FuzzyIndexExpression__Alternatives");
			builder.put(grammarAccess.getReduceExpressionAccess().getProjectionExprAlternatives_4_0(), "rule__ReduceExpression__ProjectionExprAlternatives_4_0");
			builder.put(grammarAccess.getExternalReduceExpressionAccess().getProjectionExprAlternatives_4_0(), "rule__ExternalReduceExpression__ProjectionExprAlternatives_4_0");
			builder.put(grammarAccess.getArgReduceExpressionAccess().getProjectionExprAlternatives_4_0(), "rule__ArgReduceExpression__ProjectionExprAlternatives_4_0");
			builder.put(grammarAccess.getExternalArgReduceExpressionAccess().getProjectionExprAlternatives_4_0(), "rule__ExternalArgReduceExpression__ProjectionExprAlternatives_4_0");
			builder.put(grammarAccess.getUnaryOrTerminalExpressionAccess().getAlternatives(), "rule__UnaryOrTerminalExpression__Alternatives");
			builder.put(grammarAccess.getConstantExpressionAccess().getAlternatives(), "rule__ConstantExpression__Alternatives");
			builder.put(grammarAccess.getAREDUCTION_OPAccess().getAlternatives(), "rule__AREDUCTION_OP__Alternatives");
			builder.put(grammarAccess.getAOrOPAccess().getAlternatives(), "rule__AOrOP__Alternatives");
			builder.put(grammarAccess.getARelationalOPAccess().getAlternatives(), "rule__ARelationalOP__Alternatives");
			builder.put(grammarAccess.getAAdditiveOPAccess().getAlternatives(), "rule__AAdditiveOP__Alternatives");
			builder.put(grammarAccess.getAMultiplicativeOPAccess().getAlternatives(), "rule__AMultiplicativeOP__Alternatives");
			builder.put(grammarAccess.getAMINMAX_OPAccess().getAlternatives(), "rule__AMINMAX_OP__Alternatives");
			builder.put(grammarAccess.getAUnaryOPAccess().getAlternatives(), "rule__AUnaryOP__Alternatives");
			builder.put(grammarAccess.getUnaryOrTerminalCalculatorExpressionAccess().getAlternatives(), "rule__UnaryOrTerminalCalculatorExpression__Alternatives");
			builder.put(grammarAccess.getCalculatorExpressionTerminalAccess().getAlternatives(), "rule__CalculatorExpressionTerminal__Alternatives");
			builder.put(grammarAccess.getRectangularDomainAccess().getAlternatives(), "rule__RectangularDomain__Alternatives");
			builder.put(grammarAccess.getAUnaryCalcOpAccess().getAlternatives(), "rule__AUnaryCalcOp__Alternatives");
			builder.put(grammarAccess.getABinaryCalcOpAccess().getAlternatives(), "rule__ABinaryCalcOp__Alternatives");
			builder.put(grammarAccess.getAlphaRootAccess().getGroup(), "rule__AlphaRoot__Group__0");
			builder.put(grammarAccess.getAlphaConstantAccess().getGroup(), "rule__AlphaConstant__Group__0");
			builder.put(grammarAccess.getExternalFunctionAccess().getGroup(), "rule__ExternalFunction__Group__0");
			builder.put(grammarAccess.getImportsAccess().getGroup(), "rule__Imports__Group__0");
			builder.put(grammarAccess.getAlphaPackageAccess().getGroup(), "rule__AlphaPackage__Group__0");
			builder.put(grammarAccess.getAlphaSystemAccess().getGroup(), "rule__AlphaSystem__Group__0");
			builder.put(grammarAccess.getAlphaSystemAccess().getGroup_3(), "rule__AlphaSystem__Group_3__0");
			builder.put(grammarAccess.getAlphaSystemAccess().getGroup_4(), "rule__AlphaSystem__Group_4__0");
			builder.put(grammarAccess.getAlphaSystemAccess().getGroup_4_1_1(), "rule__AlphaSystem__Group_4_1_1__0");
			builder.put(grammarAccess.getAlphaSystemAccess().getGroup_4_1_1_2(), "rule__AlphaSystem__Group_4_1_1_2__0");
			builder.put(grammarAccess.getAlphaSystemAccess().getGroup_4_1_3(), "rule__AlphaSystem__Group_4_1_3__0");
			builder.put(grammarAccess.getAlphaSystemAccess().getGroup_4_1_3_2(), "rule__AlphaSystem__Group_4_1_3_2__0");
			builder.put(grammarAccess.getAlphaSystemAccess().getGroup_5(), "rule__AlphaSystem__Group_5__0");
			builder.put(grammarAccess.getAlphaSystemAccess().getGroup_5_1_1(), "rule__AlphaSystem__Group_5_1_1__0");
			builder.put(grammarAccess.getAlphaSystemAccess().getGroup_5_1_1_2(), "rule__AlphaSystem__Group_5_1_1_2__0");
			builder.put(grammarAccess.getAlphaSystemAccess().getGroup_5_1_3(), "rule__AlphaSystem__Group_5_1_3__0");
			builder.put(grammarAccess.getAlphaSystemAccess().getGroup_5_1_3_2(), "rule__AlphaSystem__Group_5_1_3_2__0");
			builder.put(grammarAccess.getAlphaSystemAccess().getGroup_6(), "rule__AlphaSystem__Group_6__0");
			builder.put(grammarAccess.getAlphaSystemAccess().getGroup_6_1_1(), "rule__AlphaSystem__Group_6_1_1__0");
			builder.put(grammarAccess.getAlphaSystemAccess().getGroup_6_1_1_2(), "rule__AlphaSystem__Group_6_1_1_2__0");
			builder.put(grammarAccess.getAlphaSystemAccess().getGroup_6_1_3(), "rule__AlphaSystem__Group_6_1_3__0");
			builder.put(grammarAccess.getAlphaSystemAccess().getGroup_6_1_3_2(), "rule__AlphaSystem__Group_6_1_3_2__0");
			builder.put(grammarAccess.getAlphaSystemAccess().getGroup_7(), "rule__AlphaSystem__Group_7__0");
			builder.put(grammarAccess.getSystemBodyAccess().getGroup(), "rule__SystemBody__Group__0");
			builder.put(grammarAccess.getSystemBodyAccess().getGroup_1_0(), "rule__SystemBody__Group_1_0__0");
			builder.put(grammarAccess.getVariableAccess().getGroup(), "rule__Variable__Group__0");
			builder.put(grammarAccess.getFuzzyVariableAccess().getGroup(), "rule__FuzzyVariable__Group__0");
			builder.put(grammarAccess.getJNIDomainInArrayNotationAccess().getGroup(), "rule__JNIDomainInArrayNotation__Group__0");
			builder.put(grammarAccess.getJNIFunctionInArrayNotationAccess().getGroup(), "rule__JNIFunctionInArrayNotation__Group__0");
			builder.put(grammarAccess.getJNIFunctionInArrayNotationAccess().getGroup_2(), "rule__JNIFunctionInArrayNotation__Group_2__0");
			builder.put(grammarAccess.getJNIFunctionInArrayNotationAccess().getGroup_2_1(), "rule__JNIFunctionInArrayNotation__Group_2_1__0");
			builder.put(grammarAccess.getJNIPolynomialInArrayNotationAccess().getGroup(), "rule__JNIPolynomialInArrayNotation__Group__0");
			builder.put(grammarAccess.getJNIPolynomialInArrayNotationAccess().getGroup_2(), "rule__JNIPolynomialInArrayNotation__Group_2__0");
			builder.put(grammarAccess.getFuzzyFunctionAccess().getGroup(), "rule__FuzzyFunction__Group__0");
			builder.put(grammarAccess.getFuzzyFunctionAccess().getGroup_2(), "rule__FuzzyFunction__Group_2__0");
			builder.put(grammarAccess.getNestedFuzzyFunctionAccess().getGroup(), "rule__NestedFuzzyFunction__Group__0");
			builder.put(grammarAccess.getNestedFuzzyFunctionAccess().getGroup_5(), "rule__NestedFuzzyFunction__Group_5__0");
			builder.put(grammarAccess.getAffineFuzzyVariableUseAccess().getGroup(), "rule__AffineFuzzyVariableUse__Group__0");
			builder.put(grammarAccess.getFuzzyFunctionInArrayNotationAccess().getGroup(), "rule__FuzzyFunctionInArrayNotation__Group__0");
			builder.put(grammarAccess.getFuzzyFunctionInArrayNotationAccess().getGroup_2(), "rule__FuzzyFunctionInArrayNotation__Group_2__0");
			builder.put(grammarAccess.getFuzzyFunctionInArrayNotationAccess().getGroup_2_1(), "rule__FuzzyFunctionInArrayNotation__Group_2_1__0");
			builder.put(grammarAccess.getQualifiedNameAccess().getGroup(), "rule__QualifiedName__Group__0");
			builder.put(grammarAccess.getQualifiedNameAccess().getGroup_1(), "rule__QualifiedName__Group_1__0");
			builder.put(grammarAccess.getQualifiedNameWithWildcardAccess().getGroup(), "rule__QualifiedNameWithWildcard__Group__0");
			builder.put(grammarAccess.getAIndexListAccess().getGroup(), "rule__AIndexList__Group__0");
			builder.put(grammarAccess.getAIndexListAccess().getGroup_1(), "rule__AIndexList__Group_1__0");
			builder.put(grammarAccess.getAParamDomainAccess().getGroup(), "rule__AParamDomain__Group__0");
			builder.put(grammarAccess.getAParamDomainInArrayNotationAccess().getGroup(), "rule__AParamDomainInArrayNotation__Group__0");
			builder.put(grammarAccess.getAISLSetAccess().getGroup_0(), "rule__AISLSet__Group_0__0");
			builder.put(grammarAccess.getAISLSetAccess().getGroup_0_2(), "rule__AISLSet__Group_0_2__0");
			builder.put(grammarAccess.getAISLBasicSetAccess().getGroup(), "rule__AISLBasicSet__Group__0");
			builder.put(grammarAccess.getAISLRelationAccess().getGroup(), "rule__AISLRelation__Group__0");
			builder.put(grammarAccess.getAISLRelationAccess().getGroup_2(), "rule__AISLRelation__Group_2__0");
			builder.put(grammarAccess.getAISLQPolynomialAccess().getGroup(), "rule__AISLQPolynomial__Group__0");
			builder.put(grammarAccess.getAISLQPolynomialBodyAccess().getGroup(), "rule__AISLQPolynomialBody__Group__0");
			builder.put(grammarAccess.getAISLQPolynomialBodyAccess().getGroup_1(), "rule__AISLQPolynomialBody__Group_1__0");
			builder.put(grammarAccess.getAISLPWQPolynomialAccess().getGroup(), "rule__AISLPWQPolynomial__Group__0");
			builder.put(grammarAccess.getAISLPWQPolynomialAccess().getGroup_2(), "rule__AISLPWQPolynomial__Group_2__0");
			builder.put(grammarAccess.getAISLExpressionLiteralAccess().getGroup(), "rule__AISLExpressionLiteral__Group__0");
			builder.put(grammarAccess.getAISLExpressionListAccess().getGroup(), "rule__AISLExpressionList__Group__0");
			builder.put(grammarAccess.getAISLExpressionListAccess().getGroup_1(), "rule__AISLExpressionList__Group_1__0");
			builder.put(grammarAccess.getAlphaFunctionTerminalExpressionAccess().getGroup_1(), "rule__AlphaFunctionTerminalExpression__Group_1__0");
			builder.put(grammarAccess.getAlphaFunctionBinaryExpressionAccess().getGroup(), "rule__AlphaFunctionBinaryExpression__Group__0");
			builder.put(grammarAccess.getAlphaFunctionBinaryExpressionAccess().getGroup_1(), "rule__AlphaFunctionBinaryExpression__Group_1__0");
			builder.put(grammarAccess.getAlphaFunctionLiteralAccess().getGroup(), "rule__AlphaFunctionLiteral__Group__0");
			builder.put(grammarAccess.getAlphaFunctionAccess().getGroup(), "rule__AlphaFunction__Group__0");
			builder.put(grammarAccess.getAlphaFunctionAccess().getGroup_3(), "rule__AlphaFunction__Group_3__0");
			builder.put(grammarAccess.getAlphaFunctionAccess().getGroup_3_1(), "rule__AlphaFunction__Group_3_1__0");
			builder.put(grammarAccess.getAISLBasicRelationAccess().getGroup(), "rule__AISLBasicRelation__Group__0");
			builder.put(grammarAccess.getAISLWrappedBasicRelationAccess().getGroup(), "rule__AISLWrappedBasicRelation__Group__0");
			builder.put(grammarAccess.getStandardEquationAccess().getGroup(), "rule__StandardEquation__Group__0");
			builder.put(grammarAccess.getStandardEquationAccess().getGroup_1(), "rule__StandardEquation__Group_1__0");
			builder.put(grammarAccess.getStandardEquationAccess().getGroup_1_2(), "rule__StandardEquation__Group_1_2__0");
			builder.put(grammarAccess.getUseEquationAccess().getGroup(), "rule__UseEquation__Group__0");
			builder.put(grammarAccess.getUseEquationAccess().getGroup_0(), "rule__UseEquation__Group_0__0");
			builder.put(grammarAccess.getUseEquationAccess().getGroup_0_0(), "rule__UseEquation__Group_0_0__0");
			builder.put(grammarAccess.getUseEquationAccess().getGroup_0_1(), "rule__UseEquation__Group_0_1__0");
			builder.put(grammarAccess.getUseEquationAccess().getGroup_0_1_1(), "rule__UseEquation__Group_0_1_1__0");
			builder.put(grammarAccess.getUseEquationAccess().getGroup_0_1_1_2(), "rule__UseEquation__Group_0_1_1_2__0");
			builder.put(grammarAccess.getUseEquationAccess().getGroup_2(), "rule__UseEquation__Group_2__0");
			builder.put(grammarAccess.getUseEquationAccess().getGroup_2_1(), "rule__UseEquation__Group_2_1__0");
			builder.put(grammarAccess.getUseEquationAccess().getGroup_8(), "rule__UseEquation__Group_8__0");
			builder.put(grammarAccess.getUseEquationAccess().getGroup_8_1(), "rule__UseEquation__Group_8_1__0");
			builder.put(grammarAccess.getAlphaTerminalExpressionAccess().getGroup_0(), "rule__AlphaTerminalExpression__Group_0__0");
			builder.put(grammarAccess.getAlphaUnaryTerminalExpressionAccess().getGroup_0(), "rule__AlphaUnaryTerminalExpression__Group_0__0");
			builder.put(grammarAccess.getIfExpressionAccess().getGroup(), "rule__IfExpression__Group__0");
			builder.put(grammarAccess.getRestrictExpressionAccess().getGroup_0(), "rule__RestrictExpression__Group_0__0");
			builder.put(grammarAccess.getRestrictExpressionAccess().getGroup_1(), "rule__RestrictExpression__Group_1__0");
			builder.put(grammarAccess.getAutoRestrictExpressionAccess().getGroup(), "rule__AutoRestrictExpression__Group__0");
			builder.put(grammarAccess.getCaseExpressionAccess().getGroup(), "rule__CaseExpression__Group__0");
			builder.put(grammarAccess.getCaseExpressionAccess().getGroup_3(), "rule__CaseExpression__Group_3__0");
			builder.put(grammarAccess.getDependenceExpressionAccess().getGroup_0(), "rule__DependenceExpression__Group_0__0");
			builder.put(grammarAccess.getDependenceExpressionAccess().getGroup_1(), "rule__DependenceExpression__Group_1__0");
			builder.put(grammarAccess.getDependenceExpressionAccess().getGroup_2(), "rule__DependenceExpression__Group_2__0");
			builder.put(grammarAccess.getFuzzyDependenceExpressionAccess().getGroup_0(), "rule__FuzzyDependenceExpression__Group_0__0");
			builder.put(grammarAccess.getFuzzyDependenceExpressionAccess().getGroup_1(), "rule__FuzzyDependenceExpression__Group_1__0");
			builder.put(grammarAccess.getIndexExpressionAccess().getGroup_0(), "rule__IndexExpression__Group_0__0");
			builder.put(grammarAccess.getIndexExpressionAccess().getGroup_1(), "rule__IndexExpression__Group_1__0");
			builder.put(grammarAccess.getPolynomialIndexExpressionAccess().getGroup_0(), "rule__PolynomialIndexExpression__Group_0__0");
			builder.put(grammarAccess.getPolynomialIndexExpressionAccess().getGroup_1(), "rule__PolynomialIndexExpression__Group_1__0");
			builder.put(grammarAccess.getFuzzyIndexExpressionAccess().getGroup_0(), "rule__FuzzyIndexExpression__Group_0__0");
			builder.put(grammarAccess.getReduceExpressionAccess().getGroup(), "rule__ReduceExpression__Group__0");
			builder.put(grammarAccess.getExternalReduceExpressionAccess().getGroup(), "rule__ExternalReduceExpression__Group__0");
			builder.put(grammarAccess.getArgReduceExpressionAccess().getGroup(), "rule__ArgReduceExpression__Group__0");
			builder.put(grammarAccess.getExternalArgReduceExpressionAccess().getGroup(), "rule__ExternalArgReduceExpression__Group__0");
			builder.put(grammarAccess.getFuzzyReduceExpressionAccess().getGroup(), "rule__FuzzyReduceExpression__Group__0");
			builder.put(grammarAccess.getExternalFuzzyReduceExpressionAccess().getGroup(), "rule__ExternalFuzzyReduceExpression__Group__0");
			builder.put(grammarAccess.getFuzzyArgReduceExpressionAccess().getGroup(), "rule__FuzzyArgReduceExpression__Group__0");
			builder.put(grammarAccess.getExternalFuzzyArgReduceExpressionAccess().getGroup(), "rule__ExternalFuzzyArgReduceExpression__Group__0");
			builder.put(grammarAccess.getConvolutionExpressionAccess().getGroup(), "rule__ConvolutionExpression__Group__0");
			builder.put(grammarAccess.getSelectExpressionAccess().getGroup(), "rule__SelectExpression__Group__0");
			builder.put(grammarAccess.getOrExpressionAccess().getGroup(), "rule__OrExpression__Group__0");
			builder.put(grammarAccess.getOrExpressionAccess().getGroup_1(), "rule__OrExpression__Group_1__0");
			builder.put(grammarAccess.getAndExpressionAccess().getGroup(), "rule__AndExpression__Group__0");
			builder.put(grammarAccess.getAndExpressionAccess().getGroup_1(), "rule__AndExpression__Group_1__0");
			builder.put(grammarAccess.getRelationalExpressionAccess().getGroup(), "rule__RelationalExpression__Group__0");
			builder.put(grammarAccess.getRelationalExpressionAccess().getGroup_1(), "rule__RelationalExpression__Group_1__0");
			builder.put(grammarAccess.getAdditiveExpressionAccess().getGroup(), "rule__AdditiveExpression__Group__0");
			builder.put(grammarAccess.getAdditiveExpressionAccess().getGroup_1(), "rule__AdditiveExpression__Group_1__0");
			builder.put(grammarAccess.getMultiplicativeExpressionAccess().getGroup(), "rule__MultiplicativeExpression__Group__0");
			builder.put(grammarAccess.getMultiplicativeExpressionAccess().getGroup_1(), "rule__MultiplicativeExpression__Group_1__0");
			builder.put(grammarAccess.getMinMaxExpressionAccess().getGroup(), "rule__MinMaxExpression__Group__0");
			builder.put(grammarAccess.getMinMaxExpressionAccess().getGroup_1(), "rule__MinMaxExpression__Group_1__0");
			builder.put(grammarAccess.getMultiArgExpressionAccess().getGroup(), "rule__MultiArgExpression__Group__0");
			builder.put(grammarAccess.getMultiArgExpressionAccess().getGroup_3(), "rule__MultiArgExpression__Group_3__0");
			builder.put(grammarAccess.getExternalMultiArgExpressionAccess().getGroup(), "rule__ExternalMultiArgExpression__Group__0");
			builder.put(grammarAccess.getExternalMultiArgExpressionAccess().getGroup_3(), "rule__ExternalMultiArgExpression__Group_3__0");
			builder.put(grammarAccess.getUnaryExpressionAccess().getGroup(), "rule__UnaryExpression__Group__0");
			builder.put(grammarAccess.getPolyhedralObjectAccess().getGroup(), "rule__PolyhedralObject__Group__0");
			builder.put(grammarAccess.getCalculatorExpressionAccess().getGroup(), "rule__CalculatorExpression__Group__0");
			builder.put(grammarAccess.getCalculatorExpressionAccess().getGroup_1(), "rule__CalculatorExpression__Group_1__0");
			builder.put(grammarAccess.getCalculatorExpressionTerminalAccess().getGroup_6(), "rule__CalculatorExpressionTerminal__Group_6__0");
			builder.put(grammarAccess.getUnaryCalculatorExpressionAccess().getGroup(), "rule__UnaryCalculatorExpression__Group__0");
			builder.put(grammarAccess.getVariableDomainAccess().getGroup(), "rule__VariableDomain__Group__0");
			builder.put(grammarAccess.getRectangularDomainAccess().getGroup_0(), "rule__RectangularDomain__Group_0__0");
			builder.put(grammarAccess.getRectangularDomainAccess().getGroup_0_2(), "rule__RectangularDomain__Group_0_2__0");
			builder.put(grammarAccess.getRectangularDomainAccess().getGroup_0_4(), "rule__RectangularDomain__Group_0_4__0");
			builder.put(grammarAccess.getRectangularDomainAccess().getGroup_0_4_3(), "rule__RectangularDomain__Group_0_4_3__0");
			builder.put(grammarAccess.getRectangularDomainAccess().getGroup_1(), "rule__RectangularDomain__Group_1__0");
			builder.put(grammarAccess.getRectangularDomainAccess().getGroup_1_4(), "rule__RectangularDomain__Group_1_4__0");
			builder.put(grammarAccess.getRectangularDomainAccess().getGroup_1_6(), "rule__RectangularDomain__Group_1_6__0");
			builder.put(grammarAccess.getRectangularDomainAccess().getGroup_1_6_3(), "rule__RectangularDomain__Group_1_6_3__0");
			builder.put(grammarAccess.getFLOATAccess().getGroup(), "rule__FLOAT__Group__0");
			builder.put(grammarAccess.getSINTAccess().getGroup(), "rule__SINT__Group__0");
			builder.put(grammarAccess.getAlphaRootAccess().getImportsAssignment_0(), "rule__AlphaRoot__ImportsAssignment_0");
			builder.put(grammarAccess.getAlphaRootAccess().getElementsAssignment_1(), "rule__AlphaRoot__ElementsAssignment_1");
			builder.put(grammarAccess.getAlphaConstantAccess().getNameAssignment_1(), "rule__AlphaConstant__NameAssignment_1");
			builder.put(grammarAccess.getAlphaConstantAccess().getValueAssignment_3(), "rule__AlphaConstant__ValueAssignment_3");
			builder.put(grammarAccess.getExternalFunctionAccess().getNameAssignment_1(), "rule__ExternalFunction__NameAssignment_1");
			builder.put(grammarAccess.getExternalFunctionAccess().getCardinalityAssignment_3(), "rule__ExternalFunction__CardinalityAssignment_3");
			builder.put(grammarAccess.getImportsAccess().getImportedNamespaceAssignment_1(), "rule__Imports__ImportedNamespaceAssignment_1");
			builder.put(grammarAccess.getAlphaPackageAccess().getNameAssignment_1(), "rule__AlphaPackage__NameAssignment_1");
			builder.put(grammarAccess.getAlphaPackageAccess().getElementsAssignment_3(), "rule__AlphaPackage__ElementsAssignment_3");
			builder.put(grammarAccess.getAlphaSystemAccess().getNameAssignment_1(), "rule__AlphaSystem__NameAssignment_1");
			builder.put(grammarAccess.getAlphaSystemAccess().getParameterDomainExprAssignment_2(), "rule__AlphaSystem__ParameterDomainExprAssignment_2");
			builder.put(grammarAccess.getAlphaSystemAccess().getDefinedObjectsAssignment_3_1(), "rule__AlphaSystem__DefinedObjectsAssignment_3_1");
			builder.put(grammarAccess.getAlphaSystemAccess().getInputsAssignment_4_1_0(), "rule__AlphaSystem__InputsAssignment_4_1_0");
			builder.put(grammarAccess.getAlphaSystemAccess().getInputsAssignment_4_1_1_0(), "rule__AlphaSystem__InputsAssignment_4_1_1_0");
			builder.put(grammarAccess.getAlphaSystemAccess().getInputsAssignment_4_1_1_2_0(), "rule__AlphaSystem__InputsAssignment_4_1_1_2_0");
			builder.put(grammarAccess.getAlphaSystemAccess().getInputsAssignment_4_1_1_3(), "rule__AlphaSystem__InputsAssignment_4_1_1_3");
			builder.put(grammarAccess.getAlphaSystemAccess().getInputsAssignment_4_1_2(), "rule__AlphaSystem__InputsAssignment_4_1_2");
			builder.put(grammarAccess.getAlphaSystemAccess().getInputsAssignment_4_1_3_0(), "rule__AlphaSystem__InputsAssignment_4_1_3_0");
			builder.put(grammarAccess.getAlphaSystemAccess().getInputsAssignment_4_1_3_2_0(), "rule__AlphaSystem__InputsAssignment_4_1_3_2_0");
			builder.put(grammarAccess.getAlphaSystemAccess().getInputsAssignment_4_1_3_3(), "rule__AlphaSystem__InputsAssignment_4_1_3_3");
			builder.put(grammarAccess.getAlphaSystemAccess().getOutputsAssignment_5_1_0(), "rule__AlphaSystem__OutputsAssignment_5_1_0");
			builder.put(grammarAccess.getAlphaSystemAccess().getOutputsAssignment_5_1_1_0(), "rule__AlphaSystem__OutputsAssignment_5_1_1_0");
			builder.put(grammarAccess.getAlphaSystemAccess().getOutputsAssignment_5_1_1_2_0(), "rule__AlphaSystem__OutputsAssignment_5_1_1_2_0");
			builder.put(grammarAccess.getAlphaSystemAccess().getOutputsAssignment_5_1_1_3(), "rule__AlphaSystem__OutputsAssignment_5_1_1_3");
			builder.put(grammarAccess.getAlphaSystemAccess().getOutputsAssignment_5_1_2(), "rule__AlphaSystem__OutputsAssignment_5_1_2");
			builder.put(grammarAccess.getAlphaSystemAccess().getOutputsAssignment_5_1_3_0(), "rule__AlphaSystem__OutputsAssignment_5_1_3_0");
			builder.put(grammarAccess.getAlphaSystemAccess().getOutputsAssignment_5_1_3_2_0(), "rule__AlphaSystem__OutputsAssignment_5_1_3_2_0");
			builder.put(grammarAccess.getAlphaSystemAccess().getOutputsAssignment_5_1_3_3(), "rule__AlphaSystem__OutputsAssignment_5_1_3_3");
			builder.put(grammarAccess.getAlphaSystemAccess().getLocalsAssignment_6_1_0(), "rule__AlphaSystem__LocalsAssignment_6_1_0");
			builder.put(grammarAccess.getAlphaSystemAccess().getLocalsAssignment_6_1_1_0(), "rule__AlphaSystem__LocalsAssignment_6_1_1_0");
			builder.put(grammarAccess.getAlphaSystemAccess().getLocalsAssignment_6_1_1_2_0(), "rule__AlphaSystem__LocalsAssignment_6_1_1_2_0");
			builder.put(grammarAccess.getAlphaSystemAccess().getLocalsAssignment_6_1_1_3(), "rule__AlphaSystem__LocalsAssignment_6_1_1_3");
			builder.put(grammarAccess.getAlphaSystemAccess().getLocalsAssignment_6_1_2(), "rule__AlphaSystem__LocalsAssignment_6_1_2");
			builder.put(grammarAccess.getAlphaSystemAccess().getLocalsAssignment_6_1_3_0(), "rule__AlphaSystem__LocalsAssignment_6_1_3_0");
			builder.put(grammarAccess.getAlphaSystemAccess().getLocalsAssignment_6_1_3_2_0(), "rule__AlphaSystem__LocalsAssignment_6_1_3_2_0");
			builder.put(grammarAccess.getAlphaSystemAccess().getLocalsAssignment_6_1_3_3(), "rule__AlphaSystem__LocalsAssignment_6_1_3_3");
			builder.put(grammarAccess.getAlphaSystemAccess().getWhileDomainExprAssignment_7_1(), "rule__AlphaSystem__WhileDomainExprAssignment_7_1");
			builder.put(grammarAccess.getAlphaSystemAccess().getTestExpressionAssignment_7_4(), "rule__AlphaSystem__TestExpressionAssignment_7_4");
			builder.put(grammarAccess.getAlphaSystemAccess().getSystemBodiesAssignment_8(), "rule__AlphaSystem__SystemBodiesAssignment_8");
			builder.put(grammarAccess.getSystemBodyAccess().getParameterDomainExprAssignment_1_0_1(), "rule__SystemBody__ParameterDomainExprAssignment_1_0_1");
			builder.put(grammarAccess.getSystemBodyAccess().getEquationsAssignment_3(), "rule__SystemBody__EquationsAssignment_3");
			builder.put(grammarAccess.getVariableAccess().getNameAssignment_0(), "rule__Variable__NameAssignment_0");
			builder.put(grammarAccess.getVariableAccess().getDomainExprAssignment_2(), "rule__Variable__DomainExprAssignment_2");
			builder.put(grammarAccess.getFuzzyVariableAccess().getNameAssignment_1(), "rule__FuzzyVariable__NameAssignment_1");
			builder.put(grammarAccess.getFuzzyVariableAccess().getDomainExprAssignment_3(), "rule__FuzzyVariable__DomainExprAssignment_3");
			builder.put(grammarAccess.getFuzzyVariableAccess().getRangeExprAssignment_5(), "rule__FuzzyVariable__RangeExprAssignment_5");
			builder.put(grammarAccess.getVariableNameOnlyAccess().getNameAssignment(), "rule__VariableNameOnly__NameAssignment");
			builder.put(grammarAccess.getFuzzyVariableNameOnlyAccess().getNameAssignment(), "rule__FuzzyVariableNameOnly__NameAssignment");
			builder.put(grammarAccess.getJNIDomainAccess().getIslStringAssignment(), "rule__JNIDomain__IslStringAssignment");
			builder.put(grammarAccess.getJNIDomainInArrayNotationAccess().getIslStringAssignment_2(), "rule__JNIDomainInArrayNotation__IslStringAssignment_2");
			builder.put(grammarAccess.getJNIParamDomainAccess().getIslStringAssignment(), "rule__JNIParamDomain__IslStringAssignment");
			builder.put(grammarAccess.getJNIParamDomainInArrayNotationAccess().getIslStringAssignment(), "rule__JNIParamDomainInArrayNotation__IslStringAssignment");
			builder.put(grammarAccess.getJNIRelationAccess().getIslStringAssignment(), "rule__JNIRelation__IslStringAssignment");
			builder.put(grammarAccess.getJNIFunctionAccess().getAlphaFunctionAssignment(), "rule__JNIFunction__AlphaFunctionAssignment");
			builder.put(grammarAccess.getJNIFunctionInArrayNotationAccess().getArrayNotationAssignment_2_0(), "rule__JNIFunctionInArrayNotation__ArrayNotationAssignment_2_0");
			builder.put(grammarAccess.getJNIFunctionInArrayNotationAccess().getArrayNotationAssignment_2_1_1(), "rule__JNIFunctionInArrayNotation__ArrayNotationAssignment_2_1_1");
			builder.put(grammarAccess.getJNIPolynomialAccess().getIslStringAssignment(), "rule__JNIPolynomial__IslStringAssignment");
			builder.put(grammarAccess.getJNIPolynomialInArrayNotationAccess().getArrayNotationAssignment_1(), "rule__JNIPolynomialInArrayNotation__ArrayNotationAssignment_1");
			builder.put(grammarAccess.getJNIPolynomialInArrayNotationAccess().getArrayNotationAssignment_2_1(), "rule__JNIPolynomialInArrayNotation__ArrayNotationAssignment_2_1");
			builder.put(grammarAccess.getFuzzyFunctionAccess().getAlphaStringAssignment_1(), "rule__FuzzyFunction__AlphaStringAssignment_1");
			builder.put(grammarAccess.getFuzzyFunctionAccess().getIndirectionsAssignment_2_1(), "rule__FuzzyFunction__IndirectionsAssignment_2_1");
			builder.put(grammarAccess.getNestedFuzzyFunctionAccess().getFuzzyIndexAssignment_0(), "rule__NestedFuzzyFunction__FuzzyIndexAssignment_0");
			builder.put(grammarAccess.getNestedFuzzyFunctionAccess().getFuzzyVariableAssignment_2(), "rule__NestedFuzzyFunction__FuzzyVariableAssignment_2");
			builder.put(grammarAccess.getNestedFuzzyFunctionAccess().getAlphaStringAssignment_4(), "rule__NestedFuzzyFunction__AlphaStringAssignment_4");
			builder.put(grammarAccess.getNestedFuzzyFunctionAccess().getIndirectionsAssignment_5_1(), "rule__NestedFuzzyFunction__IndirectionsAssignment_5_1");
			builder.put(grammarAccess.getAffineFuzzyVariableUseAccess().getFuzzyIndexAssignment_0(), "rule__AffineFuzzyVariableUse__FuzzyIndexAssignment_0");
			builder.put(grammarAccess.getAffineFuzzyVariableUseAccess().getFuzzyVariableAssignment_2(), "rule__AffineFuzzyVariableUse__FuzzyVariableAssignment_2");
			builder.put(grammarAccess.getAffineFuzzyVariableUseAccess().getUseFunctionAssignment_3(), "rule__AffineFuzzyVariableUse__UseFunctionAssignment_3");
			builder.put(grammarAccess.getFuzzyFunctionInArrayNotationAccess().getArrayNotationAssignment_2_0(), "rule__FuzzyFunctionInArrayNotation__ArrayNotationAssignment_2_0");
			builder.put(grammarAccess.getFuzzyFunctionInArrayNotationAccess().getArrayNotationAssignment_2_1_1(), "rule__FuzzyFunctionInArrayNotation__ArrayNotationAssignment_2_1_1");
			builder.put(grammarAccess.getAlphaFunctionBinaryExpressionAccess().getOperatorAssignment_1_1(), "rule__AlphaFunctionBinaryExpression__OperatorAssignment_1_1");
			builder.put(grammarAccess.getAlphaFunctionBinaryExpressionAccess().getRightAssignment_1_2(), "rule__AlphaFunctionBinaryExpression__RightAssignment_1_2");
			builder.put(grammarAccess.getAlphaFunctionLiteralAccess().getValueAssignment_1(), "rule__AlphaFunctionLiteral__ValueAssignment_1");
			builder.put(grammarAccess.getAlphaFunctionAccess().getIndexListAssignment_1(), "rule__AlphaFunction__IndexListAssignment_1");
			builder.put(grammarAccess.getAlphaFunctionAccess().getExprsAssignment_3_0(), "rule__AlphaFunction__ExprsAssignment_3_0");
			builder.put(grammarAccess.getAlphaFunctionAccess().getExprsAssignment_3_1_1(), "rule__AlphaFunction__ExprsAssignment_3_1_1");
			builder.put(grammarAccess.getStandardEquationAccess().getVariableAssignment_0(), "rule__StandardEquation__VariableAssignment_0");
			builder.put(grammarAccess.getStandardEquationAccess().getIndexNamesAssignment_1_1(), "rule__StandardEquation__IndexNamesAssignment_1_1");
			builder.put(grammarAccess.getStandardEquationAccess().getIndexNamesAssignment_1_2_1(), "rule__StandardEquation__IndexNamesAssignment_1_2_1");
			builder.put(grammarAccess.getStandardEquationAccess().getExprAssignment_3(), "rule__StandardEquation__ExprAssignment_3");
			builder.put(grammarAccess.getUseEquationAccess().getInstantiationDomainExprAssignment_0_0_1(), "rule__UseEquation__InstantiationDomainExprAssignment_0_0_1");
			builder.put(grammarAccess.getUseEquationAccess().getSubsystemDimsAssignment_0_1_1_1(), "rule__UseEquation__SubsystemDimsAssignment_0_1_1_1");
			builder.put(grammarAccess.getUseEquationAccess().getSubsystemDimsAssignment_0_1_1_2_1(), "rule__UseEquation__SubsystemDimsAssignment_0_1_1_2_1");
			builder.put(grammarAccess.getUseEquationAccess().getOutputExprsAssignment_2_0(), "rule__UseEquation__OutputExprsAssignment_2_0");
			builder.put(grammarAccess.getUseEquationAccess().getOutputExprsAssignment_2_1_1(), "rule__UseEquation__OutputExprsAssignment_2_1_1");
			builder.put(grammarAccess.getUseEquationAccess().getSystemAssignment_5(), "rule__UseEquation__SystemAssignment_5");
			builder.put(grammarAccess.getUseEquationAccess().getCallParamsExprAssignment_6(), "rule__UseEquation__CallParamsExprAssignment_6");
			builder.put(grammarAccess.getUseEquationAccess().getInputExprsAssignment_8_0(), "rule__UseEquation__InputExprsAssignment_8_0");
			builder.put(grammarAccess.getUseEquationAccess().getInputExprsAssignment_8_1_1(), "rule__UseEquation__InputExprsAssignment_8_1_1");
			builder.put(grammarAccess.getIfExpressionAccess().getCondExprAssignment_1(), "rule__IfExpression__CondExprAssignment_1");
			builder.put(grammarAccess.getIfExpressionAccess().getThenExprAssignment_3(), "rule__IfExpression__ThenExprAssignment_3");
			builder.put(grammarAccess.getIfExpressionAccess().getElseExprAssignment_5(), "rule__IfExpression__ElseExprAssignment_5");
			builder.put(grammarAccess.getRestrictExpressionAccess().getDomainExprAssignment_0_0(), "rule__RestrictExpression__DomainExprAssignment_0_0");
			builder.put(grammarAccess.getRestrictExpressionAccess().getExprAssignment_0_2(), "rule__RestrictExpression__ExprAssignment_0_2");
			builder.put(grammarAccess.getRestrictExpressionAccess().getDomainExprAssignment_1_1(), "rule__RestrictExpression__DomainExprAssignment_1_1");
			builder.put(grammarAccess.getRestrictExpressionAccess().getExprAssignment_1_4(), "rule__RestrictExpression__ExprAssignment_1_4");
			builder.put(grammarAccess.getAutoRestrictExpressionAccess().getExprAssignment_2(), "rule__AutoRestrictExpression__ExprAssignment_2");
			builder.put(grammarAccess.getCaseExpressionAccess().getNameAssignment_1(), "rule__CaseExpression__NameAssignment_1");
			builder.put(grammarAccess.getCaseExpressionAccess().getExprsAssignment_3_0(), "rule__CaseExpression__ExprsAssignment_3_0");
			builder.put(grammarAccess.getDependenceExpressionAccess().getFunctionExprAssignment_0_0(), "rule__DependenceExpression__FunctionExprAssignment_0_0");
			builder.put(grammarAccess.getDependenceExpressionAccess().getExprAssignment_0_2(), "rule__DependenceExpression__ExprAssignment_0_2");
			builder.put(grammarAccess.getDependenceExpressionAccess().getExprAssignment_1_0(), "rule__DependenceExpression__ExprAssignment_1_0");
			builder.put(grammarAccess.getDependenceExpressionAccess().getFunctionExprAssignment_1_1(), "rule__DependenceExpression__FunctionExprAssignment_1_1");
			builder.put(grammarAccess.getDependenceExpressionAccess().getExprAssignment_2_0(), "rule__DependenceExpression__ExprAssignment_2_0");
			builder.put(grammarAccess.getDependenceExpressionAccess().getFunctionExprAssignment_2_1(), "rule__DependenceExpression__FunctionExprAssignment_2_1");
			builder.put(grammarAccess.getFuzzyDependenceExpressionAccess().getFuzzyFunctionAssignment_0_0(), "rule__FuzzyDependenceExpression__FuzzyFunctionAssignment_0_0");
			builder.put(grammarAccess.getFuzzyDependenceExpressionAccess().getExprAssignment_0_2(), "rule__FuzzyDependenceExpression__ExprAssignment_0_2");
			builder.put(grammarAccess.getFuzzyDependenceExpressionAccess().getExprAssignment_1_0(), "rule__FuzzyDependenceExpression__ExprAssignment_1_0");
			builder.put(grammarAccess.getFuzzyDependenceExpressionAccess().getFuzzyFunctionAssignment_1_1(), "rule__FuzzyDependenceExpression__FuzzyFunctionAssignment_1_1");
			builder.put(grammarAccess.getIndexExpressionAccess().getFunctionExprAssignment_0_1(), "rule__IndexExpression__FunctionExprAssignment_0_1");
			builder.put(grammarAccess.getIndexExpressionAccess().getFunctionExprAssignment_1_1(), "rule__IndexExpression__FunctionExprAssignment_1_1");
			builder.put(grammarAccess.getPolynomialIndexExpressionAccess().getPolynomialExprAssignment_0_1(), "rule__PolynomialIndexExpression__PolynomialExprAssignment_0_1");
			builder.put(grammarAccess.getPolynomialIndexExpressionAccess().getPolynomialExprAssignment_1_1(), "rule__PolynomialIndexExpression__PolynomialExprAssignment_1_1");
			builder.put(grammarAccess.getFuzzyIndexExpressionAccess().getFuzzyFunctionAssignment_0_1(), "rule__FuzzyIndexExpression__FuzzyFunctionAssignment_0_1");
			builder.put(grammarAccess.getFuzzyIndexExpressionAccess().getFuzzyFunctionAssignment_1(), "rule__FuzzyIndexExpression__FuzzyFunctionAssignment_1");
			builder.put(grammarAccess.getReduceExpressionAccess().getOperatorAssignment_2(), "rule__ReduceExpression__OperatorAssignment_2");
			builder.put(grammarAccess.getReduceExpressionAccess().getProjectionExprAssignment_4(), "rule__ReduceExpression__ProjectionExprAssignment_4");
			builder.put(grammarAccess.getReduceExpressionAccess().getBodyAssignment_6(), "rule__ReduceExpression__BodyAssignment_6");
			builder.put(grammarAccess.getExternalReduceExpressionAccess().getExternalFunctionAssignment_2(), "rule__ExternalReduceExpression__ExternalFunctionAssignment_2");
			builder.put(grammarAccess.getExternalReduceExpressionAccess().getProjectionExprAssignment_4(), "rule__ExternalReduceExpression__ProjectionExprAssignment_4");
			builder.put(grammarAccess.getExternalReduceExpressionAccess().getBodyAssignment_6(), "rule__ExternalReduceExpression__BodyAssignment_6");
			builder.put(grammarAccess.getArgReduceExpressionAccess().getOperatorAssignment_2(), "rule__ArgReduceExpression__OperatorAssignment_2");
			builder.put(grammarAccess.getArgReduceExpressionAccess().getProjectionExprAssignment_4(), "rule__ArgReduceExpression__ProjectionExprAssignment_4");
			builder.put(grammarAccess.getArgReduceExpressionAccess().getBodyAssignment_6(), "rule__ArgReduceExpression__BodyAssignment_6");
			builder.put(grammarAccess.getExternalArgReduceExpressionAccess().getExternalFunctionAssignment_2(), "rule__ExternalArgReduceExpression__ExternalFunctionAssignment_2");
			builder.put(grammarAccess.getExternalArgReduceExpressionAccess().getProjectionExprAssignment_4(), "rule__ExternalArgReduceExpression__ProjectionExprAssignment_4");
			builder.put(grammarAccess.getExternalArgReduceExpressionAccess().getBodyAssignment_6(), "rule__ExternalArgReduceExpression__BodyAssignment_6");
			builder.put(grammarAccess.getFuzzyReduceExpressionAccess().getOperatorAssignment_2(), "rule__FuzzyReduceExpression__OperatorAssignment_2");
			builder.put(grammarAccess.getFuzzyReduceExpressionAccess().getProjectionFunctionAssignment_4(), "rule__FuzzyReduceExpression__ProjectionFunctionAssignment_4");
			builder.put(grammarAccess.getFuzzyReduceExpressionAccess().getBodyAssignment_6(), "rule__FuzzyReduceExpression__BodyAssignment_6");
			builder.put(grammarAccess.getExternalFuzzyReduceExpressionAccess().getExternalFunctionAssignment_2(), "rule__ExternalFuzzyReduceExpression__ExternalFunctionAssignment_2");
			builder.put(grammarAccess.getExternalFuzzyReduceExpressionAccess().getProjectionFunctionAssignment_4(), "rule__ExternalFuzzyReduceExpression__ProjectionFunctionAssignment_4");
			builder.put(grammarAccess.getExternalFuzzyReduceExpressionAccess().getBodyAssignment_6(), "rule__ExternalFuzzyReduceExpression__BodyAssignment_6");
			builder.put(grammarAccess.getFuzzyArgReduceExpressionAccess().getOperatorAssignment_2(), "rule__FuzzyArgReduceExpression__OperatorAssignment_2");
			builder.put(grammarAccess.getFuzzyArgReduceExpressionAccess().getProjectionFunctionAssignment_4(), "rule__FuzzyArgReduceExpression__ProjectionFunctionAssignment_4");
			builder.put(grammarAccess.getFuzzyArgReduceExpressionAccess().getBodyAssignment_6(), "rule__FuzzyArgReduceExpression__BodyAssignment_6");
			builder.put(grammarAccess.getExternalFuzzyArgReduceExpressionAccess().getExternalFunctionAssignment_2(), "rule__ExternalFuzzyArgReduceExpression__ExternalFunctionAssignment_2");
			builder.put(grammarAccess.getExternalFuzzyArgReduceExpressionAccess().getProjectionFunctionAssignment_4(), "rule__ExternalFuzzyArgReduceExpression__ProjectionFunctionAssignment_4");
			builder.put(grammarAccess.getExternalFuzzyArgReduceExpressionAccess().getBodyAssignment_6(), "rule__ExternalFuzzyArgReduceExpression__BodyAssignment_6");
			builder.put(grammarAccess.getConvolutionExpressionAccess().getKernelDomainExprAssignment_2(), "rule__ConvolutionExpression__KernelDomainExprAssignment_2");
			builder.put(grammarAccess.getConvolutionExpressionAccess().getKernelExpressionAssignment_4(), "rule__ConvolutionExpression__KernelExpressionAssignment_4");
			builder.put(grammarAccess.getConvolutionExpressionAccess().getDataExpressionAssignment_6(), "rule__ConvolutionExpression__DataExpressionAssignment_6");
			builder.put(grammarAccess.getSelectExpressionAccess().getRelationExprAssignment_1(), "rule__SelectExpression__RelationExprAssignment_1");
			builder.put(grammarAccess.getSelectExpressionAccess().getExprAssignment_3(), "rule__SelectExpression__ExprAssignment_3");
			builder.put(grammarAccess.getOrExpressionAccess().getOperatorAssignment_1_1(), "rule__OrExpression__OperatorAssignment_1_1");
			builder.put(grammarAccess.getOrExpressionAccess().getRightAssignment_1_2(), "rule__OrExpression__RightAssignment_1_2");
			builder.put(grammarAccess.getAndExpressionAccess().getOperatorAssignment_1_1(), "rule__AndExpression__OperatorAssignment_1_1");
			builder.put(grammarAccess.getAndExpressionAccess().getRightAssignment_1_2(), "rule__AndExpression__RightAssignment_1_2");
			builder.put(grammarAccess.getRelationalExpressionAccess().getOperatorAssignment_1_1(), "rule__RelationalExpression__OperatorAssignment_1_1");
			builder.put(grammarAccess.getRelationalExpressionAccess().getRightAssignment_1_2(), "rule__RelationalExpression__RightAssignment_1_2");
			builder.put(grammarAccess.getAdditiveExpressionAccess().getOperatorAssignment_1_1(), "rule__AdditiveExpression__OperatorAssignment_1_1");
			builder.put(grammarAccess.getAdditiveExpressionAccess().getRightAssignment_1_2(), "rule__AdditiveExpression__RightAssignment_1_2");
			builder.put(grammarAccess.getMultiplicativeExpressionAccess().getOperatorAssignment_1_1(), "rule__MultiplicativeExpression__OperatorAssignment_1_1");
			builder.put(grammarAccess.getMultiplicativeExpressionAccess().getRightAssignment_1_2(), "rule__MultiplicativeExpression__RightAssignment_1_2");
			builder.put(grammarAccess.getMinMaxExpressionAccess().getOperatorAssignment_1_1(), "rule__MinMaxExpression__OperatorAssignment_1_1");
			builder.put(grammarAccess.getMinMaxExpressionAccess().getRightAssignment_1_2(), "rule__MinMaxExpression__RightAssignment_1_2");
			builder.put(grammarAccess.getMultiArgExpressionAccess().getOperatorAssignment_0(), "rule__MultiArgExpression__OperatorAssignment_0");
			builder.put(grammarAccess.getMultiArgExpressionAccess().getExprsAssignment_2(), "rule__MultiArgExpression__ExprsAssignment_2");
			builder.put(grammarAccess.getMultiArgExpressionAccess().getExprsAssignment_3_1(), "rule__MultiArgExpression__ExprsAssignment_3_1");
			builder.put(grammarAccess.getExternalMultiArgExpressionAccess().getExternalFunctionAssignment_0(), "rule__ExternalMultiArgExpression__ExternalFunctionAssignment_0");
			builder.put(grammarAccess.getExternalMultiArgExpressionAccess().getExprsAssignment_2(), "rule__ExternalMultiArgExpression__ExprsAssignment_2");
			builder.put(grammarAccess.getExternalMultiArgExpressionAccess().getExprsAssignment_3_1(), "rule__ExternalMultiArgExpression__ExprsAssignment_3_1");
			builder.put(grammarAccess.getUnaryExpressionAccess().getOperatorAssignment_0(), "rule__UnaryExpression__OperatorAssignment_0");
			builder.put(grammarAccess.getUnaryExpressionAccess().getExprAssignment_1(), "rule__UnaryExpression__ExprAssignment_1");
			builder.put(grammarAccess.getVariableExpressionAccess().getVariableAssignment(), "rule__VariableExpression__VariableAssignment");
			builder.put(grammarAccess.getBooleanExpressionAccess().getValueAssignment(), "rule__BooleanExpression__ValueAssignment");
			builder.put(grammarAccess.getIntegerExpressionAccess().getValueAssignment(), "rule__IntegerExpression__ValueAssignment");
			builder.put(grammarAccess.getRealExpressionAccess().getValueAssignment(), "rule__RealExpression__ValueAssignment");
			builder.put(grammarAccess.getPolyhedralObjectAccess().getNameAssignment_0(), "rule__PolyhedralObject__NameAssignment_0");
			builder.put(grammarAccess.getPolyhedralObjectAccess().getExprAssignment_2(), "rule__PolyhedralObject__ExprAssignment_2");
			builder.put(grammarAccess.getCalculatorExpressionAccess().getOperatorAssignment_1_1(), "rule__CalculatorExpression__OperatorAssignment_1_1");
			builder.put(grammarAccess.getCalculatorExpressionAccess().getRightAssignment_1_2(), "rule__CalculatorExpression__RightAssignment_1_2");
			builder.put(grammarAccess.getUnaryCalculatorExpressionAccess().getOperatorAssignment_0(), "rule__UnaryCalculatorExpression__OperatorAssignment_0");
			builder.put(grammarAccess.getUnaryCalculatorExpressionAccess().getExprAssignment_1(), "rule__UnaryCalculatorExpression__ExprAssignment_1");
			builder.put(grammarAccess.getVariableDomainAccess().getVariableAssignment_1(), "rule__VariableDomain__VariableAssignment_1");
			builder.put(grammarAccess.getRectangularDomainAccess().getUpperBoundsAssignment_0_1(), "rule__RectangularDomain__UpperBoundsAssignment_0_1");
			builder.put(grammarAccess.getRectangularDomainAccess().getUpperBoundsAssignment_0_2_1(), "rule__RectangularDomain__UpperBoundsAssignment_0_2_1");
			builder.put(grammarAccess.getRectangularDomainAccess().getIndexNamesAssignment_0_4_2(), "rule__RectangularDomain__IndexNamesAssignment_0_4_2");
			builder.put(grammarAccess.getRectangularDomainAccess().getIndexNamesAssignment_0_4_3_1(), "rule__RectangularDomain__IndexNamesAssignment_0_4_3_1");
			builder.put(grammarAccess.getRectangularDomainAccess().getLowerBoundsAssignment_1_1(), "rule__RectangularDomain__LowerBoundsAssignment_1_1");
			builder.put(grammarAccess.getRectangularDomainAccess().getUpperBoundsAssignment_1_3(), "rule__RectangularDomain__UpperBoundsAssignment_1_3");
			builder.put(grammarAccess.getRectangularDomainAccess().getLowerBoundsAssignment_1_4_1(), "rule__RectangularDomain__LowerBoundsAssignment_1_4_1");
			builder.put(grammarAccess.getRectangularDomainAccess().getUpperBoundsAssignment_1_4_3(), "rule__RectangularDomain__UpperBoundsAssignment_1_4_3");
			builder.put(grammarAccess.getRectangularDomainAccess().getIndexNamesAssignment_1_6_2(), "rule__RectangularDomain__IndexNamesAssignment_1_6_2");
			builder.put(grammarAccess.getRectangularDomainAccess().getIndexNamesAssignment_1_6_3_1(), "rule__RectangularDomain__IndexNamesAssignment_1_6_3_1");
			builder.put(grammarAccess.getDefinedObjectAccess().getObjectAssignment(), "rule__DefinedObject__ObjectAssignment");
		}
	}
	
	@Inject
	private NameMappings nameMappings;

	@Inject
	private AlphaGrammarAccess grammarAccess;

	@Override
	protected InternalAlphaParser createParser() {
		InternalAlphaParser result = new InternalAlphaParser(null);
		result.setGrammarAccess(grammarAccess);
		return result;
	}

	@Override
	protected String getRuleName(AbstractElement element) {
		return nameMappings.getRuleName(element);
	}

	@Override
	protected String[] getInitialHiddenTokens() {
		return new String[] { "RULE_WS", "RULE_ML_COMMENT", "RULE_SL_COMMENT" };
	}

	public AlphaGrammarAccess getGrammarAccess() {
		return this.grammarAccess;
	}

	public void setGrammarAccess(AlphaGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}
	
	public NameMappings getNameMappings() {
		return nameMappings;
	}
	
	public void setNameMappings(NameMappings nameMappings) {
		this.nameMappings = nameMappings;
	}
}
