affine topLevelReduction [N] -> {:N>10}
	inputs	A: [N,N]
	outputs X: [N]
	let		X = reduce(+, (i,j->i), A[i,j]);
.

affine reductionInsideDependence [N] -> {:N>10}
	inputs	A: [N,N]
	outputs X: [N]
	let		X = (a->N-a-1)@reduce(+, (i,j->i), A[i,j]);
.

affine nestedReduction [N] -> {:N>10}
	inputs 	A,B: [N,N]
	outputs X: [N]
	let		X = reduce(max, (i,j->i), reduce(+, (i,j,k->i,j), A[i,k]*B[k,j]));
.