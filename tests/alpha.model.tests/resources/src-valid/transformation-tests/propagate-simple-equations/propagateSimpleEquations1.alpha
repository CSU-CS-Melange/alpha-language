/**
 * Test for PropagateSimpleEquations.
 *
 * There should be a single equation after the transformation.
 */
 package tests.valid.trans.propagateSimpleEquations {
	
	affine propagateSimpleEquations1a [N] -> { : N>0}
		inputs
			Y : {}
		outputs
			X : {}
		locals
			E : {}
		let
			X = E;
			E = 0;
	.
	
	affine propagateSimpleEquations1b [N] -> { : N>0}
		inputs
			Y : {}
		outputs
			X : {}
		locals
			E : {}
		let
			X = E;
			E = Y;
	.
	
	affine propagateSimpleEquations1c [N] -> { : N>0}
		inputs
			Y : {}
		outputs
			X : {}
		locals
			E : {}
		let
			X = E;
			E = val(->N);
	.
	
	affine propagateSimpleEquations1d [N] -> { : N>0}
		inputs
			Y : [N]
		outputs
			X : [N]
		locals
			E : [N]
		let
			X[i] = E[i];
			E[i] = Y[i];
	.
	
	affine propagateSimpleEquations1e [N] -> { : N>0}
		inputs
			Y : [N]
		outputs
			X : [N]
		locals
			E : [N]
		let
			X[i] = E[i];
			E[i] = {:0<=i<N} : Y[i];
	.
}