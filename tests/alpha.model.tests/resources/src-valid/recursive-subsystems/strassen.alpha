package tests.syntax.valid {

affine strassen [N]->{:N>0}
	inputs
		A : [N,N]
		B : [N,N] 
	outputs
		C : [N,N]
	locals
		A11, A12, A21, A22 : [N/2,N/2];
		B11, B12, B21, B22 : [N/2,N/2];
		M1, M2, M3, M4, M5, M6, M7 : [N/2,N/2]
		C11, C12, C21, C22 : [N/2,N/2];
	when {: N>10 and N%2=0} let
		A11[i,j] = A[i,j];
		A12[i,j] = A[i+N/2,j];
		A21[i,j] = A[i,j+N/2];
		A22[i,j] = A[i+N/2,j+N/2];
		
		B11[i,j] = B[i,j];
		B12[i,j] = B[i+N/2,j];
		B21[i,j] = B[i,j+N/2];
		B22[i,j] = B[i+N/2,j+N/2];
		
		(M1) = strassen[N/2](A11 + A22, B11 + B22);
		(M2) = strassen[N/2](A21 + A22, B11);
		(M3) = strassen[N/2](A11, B12 - B22);
		(M4) = strassen[N/2](A22, B21 - B11);
		(M5) = strassen[N/2](A11 + A12, B22);
		(M6) = strassen[N/2](A21 - A11, B11 + B12);
		(M7) = strassen[N/2](A12 - A22, B21 + B22);
		
		C11 = M1 + M4 - M5 + M7;
		C12 = M3 + M5;
		C21 = M2 + M4;
		C22 = M1 - M2 + M3 + M6;
			
		C[i,j] = case {
			C11[i,j];
			C12[i-N/2,j];
			C21[i,j-N/2];
			C22[i-N/2,j-N/2];
		};
	let
		C[i,j] = reduce(+, [k], A[i,k]*B[k,j]);			
.

}

